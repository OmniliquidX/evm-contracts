{"id":"fe472bbec974d1c388d708bdadba5ce3","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        return _roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/OMNStaking.sol":{"content":"// OMNStaking.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\n\ninterface IOMNToken {\n    function getDiscountForStakedAmount(uint256 stakedAmount) external view returns (uint256);\n}\n\ninterface IFeeDistributor {\n    function distributeToStakers() external payable;\n}\n\n/**\n * @title OMN Staking Contract\n * @notice Allows users to stake OMN tokens to earn ETH rewards and trading fee discounts\n */\ncontract OMNStaking is ReentrancyGuard, AccessControlEnumerable {\n    using SafeERC20 for IERC20;\n    \n    // Roles\n    bytes32 public constant FEE_DISTRIBUTOR_ROLE = keccak256(\"FEE_DISTRIBUTOR_ROLE\");\n    \n    // Staking parameters\n    struct StakingTier {\n        uint256 lockDuration; // in seconds\n        uint256 rewardMultiplier; // in basis points (100 = 1x, 110 = 1.1x, etc.)\n    }\n    \n    struct UserStake {\n        uint256 amount;\n        uint256 lockDuration;\n        uint256 startTime;\n        uint256 endTime;\n        uint256 lastRewardClaimTime;\n        bool unlocked;\n    }\n    \n    // Token address\n    IERC20 public omnToken;\n    \n    // Mapping from lock duration -> staking tier info\n    mapping(uint256 => StakingTier) public stakingTiers;\n    \n    // Available lock durations\n    uint256[] public lockDurations;\n    \n    // Mapping from user -> staking info\n    mapping(address => UserStake[]) public userStakes;\n    \n    // Reward tracking\n    uint256 public totalStaked;\n    uint256 public totalRewardsDistributed;\n    uint256 public accumulatedRewardsPerToken; // Scaled by 1e18\n    mapping(address => uint256) public userRewardDebts;\n    mapping(address => uint256) public pendingRewards;\n    \n    // Early withdrawal fee\n    uint256 public earlyWithdrawalPenalty = 1000; // 10% in basis points\n    \n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 lockDuration, uint256 endTime);\n    event Unstaked(address indexed user, uint256 amount, bool penalized);\n    event RewardsClaimed(address indexed user, uint256 amount);\n    event RewardsDistributed(uint256 amount);\n    event StakingTierAdded(uint256 lockDuration, uint256 rewardMultiplier);\n    event StakingTierUpdated(uint256 lockDuration, uint256 rewardMultiplier);\n    event EarlyWithdrawalPenaltyUpdated(uint256 penalty);\n    \n    constructor(address _omnToken, address admin) {\n        omnToken = IERC20(_omnToken);\n        \n        // Grant admin role\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        \n        // Set up initial staking tiers\n        _addStakingTier(0, 100); // Flexible staking - 1.0x multiplier\n        _addStakingTier(30 days, 105); // 30 days - 1.05x multiplier\n        _addStakingTier(90 days, 115); // 90 days - 1.15x multiplier\n        _addStakingTier(180 days, 130); // 180 days - 1.3x multiplier\n        _addStakingTier(365 days, 150); // 365 days - 1.5x multiplier\n    }\n    \n    /**\n     * @notice Adds a new staking tier\n     * @param lockDuration Duration in seconds\n     * @param rewardMultiplier Multiplier in basis points\n     */\n    function addStakingTier(uint256 lockDuration, uint256 rewardMultiplier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _addStakingTier(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Internal function to add a staking tier\n     */\n    function _addStakingTier(uint256 lockDuration, uint256 rewardMultiplier) internal {\n        require(rewardMultiplier >= 100, \"Multiplier must be at least 100 (1x)\");\n        require(stakingTiers[lockDuration].rewardMultiplier == 0, \"Tier already exists\");\n        \n        stakingTiers[lockDuration] = StakingTier({\n            lockDuration: lockDuration,\n            rewardMultiplier: rewardMultiplier\n        });\n        \n        lockDurations.push(lockDuration);\n        \n        emit StakingTierAdded(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Updates an existing staking tier\n     * @param lockDuration Duration to update\n     * @param rewardMultiplier New multiplier\n     */\n    function updateStakingTier(uint256 lockDuration, uint256 rewardMultiplier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(rewardMultiplier >= 100, \"Multiplier must be at least 100 (1x)\");\n        require(stakingTiers[lockDuration].rewardMultiplier != 0, \"Tier doesn't exist\");\n        \n        stakingTiers[lockDuration].rewardMultiplier = rewardMultiplier;\n        \n        emit StakingTierUpdated(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Updates the early withdrawal penalty\n     * @param penalty New penalty in basis points\n     */\n    function updateEarlyWithdrawalPenalty(uint256 penalty) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(penalty <= 3000, \"Penalty cannot exceed 30%\");\n        earlyWithdrawalPenalty = penalty;\n        emit EarlyWithdrawalPenaltyUpdated(penalty);\n    }\n    \n    /**\n     * @notice Stakes OMN tokens\n     * @param amount Amount to stake\n     * @param lockDurationIndex Index of the lock duration in the lockDurations array\n     */\n    function stake(uint256 amount, uint256 lockDurationIndex) external nonReentrant {\n        require(amount > 0, \"Cannot stake 0\");\n        require(lockDurationIndex < lockDurations.length, \"Invalid lock duration index\");\n        \n        uint256 lockDuration = lockDurations[lockDurationIndex];\n        // Ensure the lock duration exists\n        require(stakingTiers[lockDuration].rewardMultiplier > 0, \"Invalid lock duration\");\n        \n        // Claim any pending rewards first\n        _updateAndClaimRewards(msg.sender);\n        \n        // Transfer tokens from user\n        omnToken.safeTransferFrom(msg.sender, address(this), amount);\n        \n        // Create new stake\n        uint256 endTime = block.timestamp + lockDuration;\n        userStakes[msg.sender].push(UserStake({\n            amount: amount,\n            lockDuration: lockDuration,\n            startTime: block.timestamp,\n            endTime: endTime,\n            lastRewardClaimTime: block.timestamp,\n            unlocked: false\n        }));\n        \n        // Update total staked\n        totalStaked += amount;\n        \n        // Update user reward debt\n        userRewardDebts[msg.sender] = (amount * accumulatedRewardsPerToken) / 1e18;\n        \n        emit Staked(msg.sender, amount, lockDuration, endTime);\n    }\n    \n    /**\n     * @notice Unstakes tokens for a specific stake\n     * @param stakeIndex Index of the stake to unstake\n     */\n    function unstake(uint256 stakeIndex) external nonReentrant {\n        require(stakeIndex < userStakes[msg.sender].length, \"Invalid stake index\");\n        \n        UserStake storage userStake = userStakes[msg.sender][stakeIndex];\n        require(!userStake.unlocked, \"Stake already unlocked\");\n        \n        uint256 amount = userStake.amount;\n        bool penalized = false;\n        \n        // Claim any pending rewards first\n        _updateAndClaimRewards(msg.sender);\n        \n        // Check if lock period has ended\n        if (block.timestamp < userStake.endTime) {\n            // Apply early withdrawal penalty\n            uint256 penalty = (amount * earlyWithdrawalPenalty) / 10000;\n            amount = amount - penalty;\n            penalized = true;\n            \n            // Send penalty to rewards pool - effectively redistributing to other stakers\n            totalStaked -= penalty;\n            _distributeRewards(penalty);\n        }\n        \n        // Mark stake as unlocked\n        userStake.unlocked = true;\n        \n        // Update total staked\n        totalStaked -= userStake.amount;\n        \n        // Update user reward debt\n        userRewardDebts[msg.sender] = ((getTotalStakedByUser(msg.sender) - userStake.amount) * accumulatedRewardsPerToken) / 1e18;\n        \n        // Transfer tokens back to user\n        omnToken.safeTransfer(msg.sender, amount);\n        \n        emit Unstaked(msg.sender, amount, penalized);\n    }\n    \n    /**\n     * @notice Claims pending rewards\n     */\n    function claimRewards() external nonReentrant {\n        _updateAndClaimRewards(msg.sender);\n    }\n    \n    /**\n     * @notice Internal function to update and claim rewards\n     * @param user User address\n     */\n    function _updateAndClaimRewards(address user) internal {\n        if (getTotalStakedByUser(user) == 0) return;\n        \n        // Calculate pending rewards\n        uint256 pending = calculatePendingRewards(user);\n        \n        if (pending > 0) {\n            // Update reward claim time for all stakes\n            for (uint i = 0; i < userStakes[user].length; i++) {\n                if (!userStakes[user][i].unlocked) {\n                    userStakes[user][i].lastRewardClaimTime = block.timestamp;\n                }\n            }\n            \n            // Reset pending rewards\n            pendingRewards[user] = 0;\n            \n            // Send rewards to user\n            (bool success, ) = user.call{value: pending}(\"\");\n            require(success, \"ETH transfer failed\");\n            \n            emit RewardsClaimed(user, pending);\n        }\n    }\n    \n    /**\n     * @notice Calculate pending rewards for a user\n     * @param user User address\n     * @return Pending rewards in wei\n     */\n    function calculatePendingRewards(address user) public view returns (uint256) {\n        if (getTotalStakedByUser(user) == 0) return 0;\n        \n        uint256 newRewards = (getTotalStakedByUser(user) * accumulatedRewardsPerToken) / 1e18 - userRewardDebts[user];\n        \n        // Apply reward multipliers based on lock periods\n        uint256 adjustedRewards = 0;\n        uint256 totalUserStaked = getTotalStakedByUser(user);\n        \n        if (totalUserStaked > 0) {\n            for (uint i = 0; i < userStakes[user].length; i++) {\n                UserStake memory myStake = userStakes[user][i];\n                if (!myStake.unlocked) {\n                    uint256 stakeShare = (myStake.amount * 1e18) / totalUserStaked;\n                    uint256 stakeRewards = (newRewards * stakeShare) / 1e18;\n                    uint256 multiplier = stakingTiers[myStake.lockDuration].rewardMultiplier;\n                    adjustedRewards += (stakeRewards * multiplier) / 100;\n                }\n            }\n        }\n        \n        return pendingRewards[user] + adjustedRewards;\n    }\n    \n    /**\n     * @notice Distributes ETH rewards to stakers\n     */\n    function distributeRewards() external payable onlyRole(FEE_DISTRIBUTOR_ROLE) {\n        require(msg.value > 0, \"Cannot distribute 0\");\n        _distributeRewards(msg.value);\n    }\n    \n    /**\n     * @notice Internal function to distribute rewards\n     * @param amount Amount to distribute\n     */\n    function _distributeRewards(uint256 amount) internal {\n        if (totalStaked == 0) {\n            // If no stakers, send to admin\n            bool adminExists = false;\n            for (uint256 i = 0; i < 256; i++) {\n                try this.getRoleMember(DEFAULT_ADMIN_ROLE, i) returns (address admin) {\n                    if (admin != address(0)) {\n                        adminExists = true;\n                        break;\n                    }\n                } catch {\n                    break;\n                }\n            }\n            require(adminExists, \"No admin available\");\n            (bool success, ) = payable(getRoleMember(DEFAULT_ADMIN_ROLE, 0)).call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n            return;\n        }\n        \n        // Increase accumulated rewards per token\n        accumulatedRewardsPerToken += (amount * 1e18) / totalStaked;\n        totalRewardsDistributed += amount;\n        \n        emit RewardsDistributed(amount);\n    }\n    \n    /**\n     * @notice Gets the total amount staked by a user\n     * @param user User address\n     * @return Total staked amount\n     */\n    function getTotalStakedByUser(address user) public view returns (uint256) {\n        uint256 total = 0;\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                total += userStakes[user][i].amount;\n            }\n        }\n        return total;\n    }\n    \n    /**\n     * @notice Gets all active stakes for a user\n     * @param user User address\n     * @return amounts Array of stake amounts\n     * @return userLockDurations Array of lock durations\n     * @return startTimes Array of start times\n     * @return endTimes Array of end times\n     * @return multipliers Array of reward multipliers\n     */\n    function getStakesByUser(address user) external view returns (\n        uint256[] memory amounts,\n        uint256[] memory userLockDurations,\n        uint256[] memory startTimes,\n        uint256[] memory endTimes,\n        uint256[] memory multipliers\n    ) {\n        uint256 activeCount = 0;\n        \n        // Count active stakes\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                activeCount++;\n            }\n        }\n        \n        // Initialize arrays\n        amounts = new uint256[](activeCount);\n        userLockDurations = new uint256[](activeCount);\n        startTimes = new uint256[](activeCount);\n        endTimes = new uint256[](activeCount);\n        multipliers = new uint256[](activeCount);\n        \n        // Fill arrays\n        uint256 index = 0;\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                UserStake memory userStake = userStakes[user][i];\n                amounts[index] = userStake.amount;\n                userLockDurations[index] = userStake.lockDuration;\n                startTimes[index] = userStake.startTime;\n                endTimes[index] = userStake.endTime;\n                multipliers[index] = stakingTiers[userStake.lockDuration].rewardMultiplier;\n                index++;\n            }\n        }\n        \n        return (amounts, lockDurations, startTimes, endTimes, multipliers);\n    }\n    \n    /**\n     * @notice Gets the fee discount for a user based on their staked amount\n     * @param user User address\n     * @return Discount in basis points\n     */\n    function getFeeDiscount(address user) external view returns (uint256) {\n        uint256 totalAmountStaked = getTotalStakedByUser(user);\n        return IOMNToken(address(omnToken)).getDiscountForStakedAmount(totalAmountStaked);\n    }\n    \n    /**\n     * @notice Gets all available lock durations\n     * @return Array of lock durations in seconds\n     */\n    function getLockDurations() external view returns (uint256[] memory) {\n        return lockDurations;\n    }\n    \n    /**\n     * @notice Gets staking tier info for a specific lock duration\n     * @param lockDuration Duration in seconds\n     * @return duration Lock duration in seconds\n     * @return multiplier Reward multiplier in basis points\n     */\n    function getStakingTier(uint256 lockDuration) external view returns (\n        uint256 duration,\n        uint256 multiplier\n    ) {\n        StakingTier memory tier = stakingTiers[lockDuration];\n        return (tier.lockDuration, tier.rewardMultiplier);\n    }\n    \n    // Allow contract to receive ETH\n    receive() external payable {\n        _distributeRewards(msg.value);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1430],"ERC165":[1545],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1431,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1546,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1430,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1545,1557,378,1430],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1544],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[536],"EnumerableSet":[2170],"IAccessControlEnumerable":[562]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:2"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":563,"src":"155:72:2","symbolAliases":[{"foreign":{"id":381,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"163:24:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":296,"src":"228:51:2","symbolAliases":[{"foreign":{"id":383,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":2171,"src":"280:68:2","symbolAliases":[{"foreign":{"id":385,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"288:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":388,"name":"IAccessControlEnumerable","nameLocations":["490:24:2"],"nodeType":"IdentifierPath","referencedDeclaration":562,"src":"490:24:2"},"id":389,"nodeType":"InheritanceSpecifier","src":"490:24:2"},{"baseName":{"id":390,"name":"AccessControl","nameLocations":["516:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:2"},"id":391,"nodeType":"InheritanceSpecifier","src":"516:13:2"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"350:94:2","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":536,"linearizedBaseContracts":[536,295,1545,1557,562,378,1430],"name":"AccessControlEnumerable","nameLocation":"463:23:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":395,"libraryName":{"id":392,"name":"EnumerableSet","nameLocations":["542:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":2170,"src":"542:13:2"},"nodeType":"UsingForDirective","src":"536:49:2","typeName":{"id":394,"nodeType":"UserDefinedTypeName","pathNode":{"id":393,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:2","574:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"560:24:2"},"referencedDeclaration":1883,"src":"560:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":400,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:2","nodeType":"VariableDeclaration","scope":536,"src":"591:70:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":399,"keyName":"role","keyNameLocation":"607:4:2","keyType":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:2","629:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"615:24:2"},"referencedDeclaration":1883,"src":"615:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":421,"nodeType":"Block","src":"820:121:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"837:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":411,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"857:24:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$562_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$562_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$562","typeString":"type(contract IAccessControlEnumerable)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":417,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"922:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":415,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"898:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":408,"id":420,"nodeType":"Return","src":"830:104:2"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"668:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:2","nodeType":"FunctionDefinition","overrides":{"id":405,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:2"},"parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:2","nodeType":"VariableDeclaration","scope":422,"src":"756:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":402,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"814:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":406,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:2"},"scope":536,"src":"729:212:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[553],"body":{"id":439,"nodeType":"Block","src":"1616:52:2","statements":[{"expression":{"arguments":[{"id":436,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1655:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":432,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1633:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":434,"indexExpression":{"id":433,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1646:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2006,"src":"1633:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1883_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1883_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"1626:35:2"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"947:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":440,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"role","nameLocation":"1557:4:2","nodeType":"VariableDeclaration","scope":440,"src":"1549:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"index","nameLocation":"1571:5:2","nodeType":"VariableDeclaration","scope":440,"src":"1563:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"1607:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:2"},"scope":536,"src":"1526:142:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[561],"body":{"id":454,"nodeType":"Block","src":"1916:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":448,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1933:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":450,"indexExpression":{"id":449,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1946:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1979,"src":"1933:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1883_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1883_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":447,"id":453,"nodeType":"Return","src":"1926:34:2"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1674:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":455,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:2","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"role","nameLocation":"1872:4:2","nodeType":"VariableDeclaration","scope":455,"src":"1864:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:2"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"1907:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:2"},"scope":536,"src":"1836:131:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":470,"nodeType":"Block","src":"2595:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":464,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2612:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":466,"indexExpression":{"id":465,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2625:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2612:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:6:2","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2036,"src":"2612:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1883_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1883_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":463,"id":469,"nodeType":"Return","src":"2605:34:2"}]},"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"1973:532:2","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":471,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"2519:14:2","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"role","nameLocation":"2542:4:2","nodeType":"VariableDeclaration","scope":471,"src":"2534:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:14:2"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"2577:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"nodeType":"ArrayTypeName","src":"2577:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2576:18:2"},"scope":536,"src":"2510:136:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":502,"nodeType":"Block","src":"2840:165:2","statements":[{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"granted","nameLocation":"2855:7:2","nodeType":"VariableDeclaration","scope":502,"src":"2850:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"2850:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[{"id":486,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2882:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":487,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2888:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":484,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2865:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:10:2","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2865:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2850:46:2"},{"condition":{"id":490,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2910:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2906:69:2","trueBody":{"id":498,"nodeType":"Block","src":"2919:56:2","statements":[{"expression":{"arguments":[{"id":495,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2956:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":491,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2933:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":493,"indexExpression":{"id":492,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2946:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:3:2","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2933:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1883_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1883_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":497,"nodeType":"ExpressionStatement","src":"2933:31:2"}]}},{"expression":{"id":500,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2991:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":481,"id":501,"nodeType":"Return","src":"2984:14:2"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"2652:91:2","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2757:10:2","nodeType":"FunctionDefinition","overrides":{"id":478,"nodeType":"OverrideSpecifier","overrides":[],"src":"2816:8:2"},"parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"role","nameLocation":"2776:4:2","nodeType":"VariableDeclaration","scope":503,"src":"2768:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"account","nameLocation":"2790:7:2","nodeType":"VariableDeclaration","scope":503,"src":"2782:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2767:31:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"2834:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":479,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2833:6:2"},"scope":536,"src":"2748:257:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":534,"nodeType":"Block","src":"3201:169:2","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"revoked","nameLocation":"3216:7:2","nodeType":"VariableDeclaration","scope":534,"src":"3211:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":521,"initialValue":{"arguments":[{"id":518,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3244:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":519,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3250:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":516,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"3226:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:11:2","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"3226:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3211:47:2"},{"condition":{"id":522,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3272:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"3268:72:2","trueBody":{"id":530,"nodeType":"Block","src":"3281:59:2","statements":[{"expression":{"arguments":[{"id":527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3321:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":523,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3295:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1883_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":525,"indexExpression":{"id":524,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3308:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3295:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:2","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"3295:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1883_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1883_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":529,"nodeType":"ExpressionStatement","src":"3295:34:2"}]}},{"expression":{"id":532,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":513,"id":533,"nodeType":"Return","src":"3349:14:2"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"3011:92:2","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3117:11:2","nodeType":"FunctionDefinition","overrides":{"id":510,"nodeType":"OverrideSpecifier","overrides":[],"src":"3177:8:2"},"parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"role","nameLocation":"3137:4:2","nodeType":"VariableDeclaration","scope":535,"src":"3129:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3129:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"account","nameLocation":"3151:7:2","nodeType":"VariableDeclaration","scope":535,"src":"3143:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3128:31:2"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"3195:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"3195:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3194:6:2"},"scope":536,"src":"3108:262:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":537,"src":"445:2927:2","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:3244:2"},"id":2},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[562]},"id":563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":563,"sourceUnit":379,"src":"156:53:3","symbolAliases":[{"foreign":{"id":539,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":542,"name":"IAccessControl","nameLocations":["350:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"350:14:3"},"id":543,"nodeType":"InheritanceSpecifier","src":"350:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"211:100:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":562,"linearizedBaseContracts":[562,378],"name":"IAccessControlEnumerable","nameLocation":"322:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"371:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"role","nameLocation":"981:4:3","nodeType":"VariableDeclaration","scope":553,"src":"973:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"index","nameLocation":"995:5:3","nodeType":"VariableDeclaration","scope":553,"src":"987:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1025:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:3"},"scope":562,"src":"950:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1040:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:3","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"role","nameLocation":"1238:4:3","nodeType":"VariableDeclaration","scope":561,"src":"1230:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":561,"src":"1267:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:3"},"scope":562,"src":"1202:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":563,"src":"312:966:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1149:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[644],"IERC165":[1557],"IERC20":[730]},"id":645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":653,"src":"133:36:4","symbolAliases":[{"foreign":{"id":565,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"141:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":649,"src":"170:38:4","symbolAliases":[{"foreign":{"id":567,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"178:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":570,"name":"IERC20","nameLocations":["590:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"590:6:4"},"id":571,"nodeType":"InheritanceSpecifier","src":"590:6:4"},{"baseName":{"id":572,"name":"IERC165","nameLocations":["598:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1557,"src":"598:7:4"},"id":573,"nodeType":"InheritanceSpecifier","src":"598:7:4"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"210:357:4","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":644,"linearizedBaseContracts":[644,1557,730],"name":"IERC1363","nameLocation":"578:8:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"1148:370:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":583,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:4","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"to","nameLocation":"1556:2:4","nodeType":"VariableDeclaration","scope":583,"src":"1548:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"value","nameLocation":"1568:5:4","nodeType":"VariableDeclaration","scope":583,"src":"1560:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":583,"src":"1593:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":580,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:4"},"scope":644,"src":"1523:76:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1605:453:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":595,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:4","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"to","nameLocation":"2096:2:4","nodeType":"VariableDeclaration","scope":595,"src":"2088:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"value","nameLocation":"2108:5:4","nodeType":"VariableDeclaration","scope":595,"src":"2100:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"data","nameLocation":"2130:4:4","nodeType":"VariableDeclaration","scope":595,"src":"2115:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":589,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:4"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"2154:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":592,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:4"},"scope":644,"src":"2063:97:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2166:453:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"from","nameLocation":"2661:4:4","nodeType":"VariableDeclaration","scope":607,"src":"2653:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"to","nameLocation":"2675:2:4","nodeType":"VariableDeclaration","scope":607,"src":"2667:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"value","nameLocation":"2687:5:4","nodeType":"VariableDeclaration","scope":607,"src":"2679:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:4"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"2712:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":604,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:4"},"scope":644,"src":"2624:94:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2724:536:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:4","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"from","nameLocation":"3302:4:4","nodeType":"VariableDeclaration","scope":621,"src":"3294:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"to","nameLocation":"3316:2:4","nodeType":"VariableDeclaration","scope":621,"src":"3308:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"value","nameLocation":"3328:5:4","nodeType":"VariableDeclaration","scope":621,"src":"3320:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"data","nameLocation":"3350:4:4","nodeType":"VariableDeclaration","scope":621,"src":"3335:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:4"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"3374:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":618,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:4"},"scope":644,"src":"3265:115:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3386:390:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:4","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"spender","nameLocation":"3813:7:4","nodeType":"VariableDeclaration","scope":631,"src":"3805:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"3830:5:4","nodeType":"VariableDeclaration","scope":631,"src":"3822:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:4"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"3855:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:4"},"scope":644,"src":"3781:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3867:478:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":643,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:4","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"spender","nameLocation":"4382:7:4","nodeType":"VariableDeclaration","scope":643,"src":"4374:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"4399:5:4","nodeType":"VariableDeclaration","scope":643,"src":"4391:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"data","nameLocation":"4421:4:4","nodeType":"VariableDeclaration","scope":643,"src":"4406:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":637,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:4"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"4445:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:4"},"scope":644,"src":"4350:101:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":645,"src":"568:3885:4","usedErrors":[],"usedEvents":[664,673]}],"src":"107:4347:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1557]},"id":649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":646,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":649,"sourceUnit":1558,"src":"132:59:5","symbolAliases":[{"foreign":{"id":647,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[730]},"id":653,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":650,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":653,"sourceUnit":731,"src":"131:49:6","symbolAliases":[{"foreign":{"id":651,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[730]},"id":731,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":654,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":730,"linearizedBaseContracts":[730],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":664,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":664,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":664,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":664,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":673,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":673,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":673,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":673,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":679,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":730,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":687,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":730,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":697,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":697,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":697,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":697,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":730,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":707,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":707,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":707,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":730,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":717,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":717,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":717,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":714,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":730,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":729,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":729,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":729,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":729,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":729,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":730,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":731,"src":"204:2575:7","usedErrors":[],"usedEvents":[664,673]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1400],"IERC1363":[644],"IERC20":[730],"SafeERC20":[1141]},"id":1142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":732,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":731,"src":"141:37:8","symbolAliases":[{"foreign":{"id":733,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":645,"src":"179:58:8","symbolAliases":[{"foreign":{"id":735,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":1401,"src":"238:51:8","symbolAliases":[{"foreign":{"id":737,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"246:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"291:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1141,"linearizedBaseContracts":[1141],"name":"SafeERC20","nameLocation":"758:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"774:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":744,"name":"SafeERC20FailedOperation","nameLocation":"850:24:8","nodeType":"ErrorDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"token","nameLocation":"883:5:8","nodeType":"VariableDeclaration","scope":744,"src":"875:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:8"},"src":"844:46:8"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"896:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":753,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:8","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"spender","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":753,"src":"1011:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:8","nodeType":"VariableDeclaration","scope":753,"src":"1028:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:8","nodeType":"VariableDeclaration","scope":753,"src":"1054:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:8"},"src":"972:109:8"},{"body":{"id":776,"nodeType":"Block","src":"1343:88:8","statements":[{"expression":{"arguments":[{"id":765,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"1373:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":768,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"1395:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":697,"src":"1395:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":770,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1412:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1416:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":766,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1380:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":764,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1353:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"1353:71:8"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"1087:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:8","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"token","nameLocation":"1300:5:8","nodeType":"VariableDeclaration","scope":777,"src":"1293:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":756,"nodeType":"UserDefinedTypeName","pathNode":{"id":755,"name":"IERC20","nameLocations":["1293:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"1293:6:8"},"referencedDeclaration":730,"src":"1293:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"to","nameLocation":"1315:2:8","nodeType":"VariableDeclaration","scope":777,"src":"1307:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"value","nameLocation":"1327:5:8","nodeType":"VariableDeclaration","scope":777,"src":"1319:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:8"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"1343:0:8"},"scope":1141,"src":"1271:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":803,"nodeType":"Block","src":"1760:98:8","statements":[{"expression":{"arguments":[{"id":791,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1790:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":794,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1812:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1812:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1833:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"1839:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"1843:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1797:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":790,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1770:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"1770:81:8"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"1437:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:8","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"token","nameLocation":"1703:5:8","nodeType":"VariableDeclaration","scope":804,"src":"1696:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":780,"nodeType":"UserDefinedTypeName","pathNode":{"id":779,"name":"IERC20","nameLocations":["1696:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"1696:6:8"},"referencedDeclaration":730,"src":"1696:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"from","nameLocation":"1718:4:8","nodeType":"VariableDeclaration","scope":804,"src":"1710:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"to","nameLocation":"1732:2:8","nodeType":"VariableDeclaration","scope":804,"src":"1724:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"value","nameLocation":"1744:5:8","nodeType":"VariableDeclaration","scope":804,"src":"1736:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:8"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"1760:0:8"},"scope":1141,"src":"1670:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"2600:139:8","statements":[{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:8","nodeType":"VariableDeclaration","scope":834,"src":"2610:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":825,"initialValue":{"arguments":[{"arguments":[{"id":821,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2657:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1141","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1141","typeString":"library SafeERC20"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:8","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2664:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":817,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2633:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":707,"src":"2633:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:8"},{"expression":{"arguments":[{"id":827,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2695:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"id":828,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2702:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2711:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2726:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":826,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2682:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"ExpressionStatement","src":"2682:50:8"}]},"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"1864:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:8","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"token","nameLocation":"2552:5:8","nodeType":"VariableDeclaration","scope":835,"src":"2545:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":807,"nodeType":"UserDefinedTypeName","pathNode":{"id":806,"name":"IERC20","nameLocations":["2545:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"2545:6:8"},"referencedDeclaration":730,"src":"2545:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"2567:7:8","nodeType":"VariableDeclaration","scope":835,"src":"2559:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"2584:5:8","nodeType":"VariableDeclaration","scope":835,"src":"2576:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:8"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"2600:0:8"},"scope":1141,"src":"2514:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"3505:370:8","statements":[{"id":876,"nodeType":"UncheckedBlock","src":"3515:354:8","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:8","nodeType":"VariableDeclaration","scope":876,"src":"3539:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"arguments":[{"id":852,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3590:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1141","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1141","typeString":"library SafeERC20"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:8","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3597:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":848,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3566:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":707,"src":"3566:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3623:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":858,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3642:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":867,"nodeType":"IfStatement","src":"3619:160:8","trueBody":{"id":866,"nodeType":"Block","src":"3661:118:8","statements":[{"errorCall":{"arguments":[{"id":861,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3719:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3728:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":863,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3746:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3686:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"RevertStatement","src":"3679:85:8"}]}},{"expression":{"arguments":[{"id":869,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3805:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"id":870,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3812:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3821:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":872,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3840:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":868,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3792:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"3792:66:8"}]}]},"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"2745:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:8","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"token","nameLocation":"3445:5:8","nodeType":"VariableDeclaration","scope":878,"src":"3438:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"IERC20","nameLocations":["3438:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"3438:6:8"},"referencedDeclaration":730,"src":"3438:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"spender","nameLocation":"3460:7:8","nodeType":"VariableDeclaration","scope":878,"src":"3452:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:8","nodeType":"VariableDeclaration","scope":878,"src":"3469:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:8"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"3505:0:8"},"scope":1141,"src":"3407:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":924,"nodeType":"Block","src":"4529:303:8","statements":[{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:8","nodeType":"VariableDeclaration","scope":924,"src":"4539:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":889,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":899,"initialValue":{"arguments":[{"expression":{"id":893,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4582:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":717,"src":"4582:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":895,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4598:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4607:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":891,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4567:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:8"},{"condition":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:8","subExpression":{"arguments":[{"id":901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4654:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"id":902,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4661:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":900,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4630:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"IfStatement","src":"4625:201:8","trueBody":{"id":922,"nodeType":"Block","src":"4676:150:8","statements":[{"expression":{"arguments":[{"id":906,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4710:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":909,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4732:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":717,"src":"4732:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":911,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4748:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":907,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4717:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":905,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4690:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"4690:71:8"},{"expression":{"arguments":[{"id":918,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4795:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},{"id":919,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4802:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":917,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4775:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"4775:40:8"}]}}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"3881:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:8","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"token","nameLocation":"4481:5:8","nodeType":"VariableDeclaration","scope":925,"src":"4474:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"IERC20","nameLocations":["4474:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"4474:6:8"},"referencedDeclaration":730,"src":"4474:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"spender","nameLocation":"4496:7:8","nodeType":"VariableDeclaration","scope":925,"src":"4488:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"value","nameLocation":"4513:5:8","nodeType":"VariableDeclaration","scope":925,"src":"4505:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"4529:0:8"},"scope":1141,"src":"4452:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":967,"nodeType":"Block","src":"5279:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5293:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:8","memberName":"code","nodeType":"MemberAccess","src":"5293:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:8","memberName":"length","nodeType":"MemberAccess","src":"5293:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:8","subExpression":{"arguments":[{"id":952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5402:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5406:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":954,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5413:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":950,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5380:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":595,"src":"5380:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":965,"nodeType":"IfStatement","src":"5375:117:8","trueBody":{"id":964,"nodeType":"Block","src":"5420:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5474:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:8","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"5441:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"RevertStatement","src":"5434:47:8"}]}},"id":966,"nodeType":"IfStatement","src":"5289:203:8","trueBody":{"id":949,"nodeType":"Block","src":"5314:55:8","statements":[{"expression":{"arguments":[{"id":944,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5341:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},{"id":945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5348:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5352:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":943,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5328:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"5328:30:8"}]}}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"4838:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:8","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"token","nameLocation":"5217:5:8","nodeType":"VariableDeclaration","scope":968,"src":"5208:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},"typeName":{"id":928,"nodeType":"UserDefinedTypeName","pathNode":{"id":927,"name":"IERC1363","nameLocations":["5208:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"5208:8:8"},"referencedDeclaration":644,"src":"5208:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"to","nameLocation":"5232:2:8","nodeType":"VariableDeclaration","scope":968,"src":"5224:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"value","nameLocation":"5244:5:8","nodeType":"VariableDeclaration","scope":968,"src":"5236:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"data","nameLocation":"5264:4:8","nodeType":"VariableDeclaration","scope":968,"src":"5251:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:8"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"5279:0:8"},"scope":1141,"src":"5176:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1014,"nodeType":"Block","src":"6017:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6031:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:8","memberName":"code","nodeType":"MemberAccess","src":"6031:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:8","memberName":"length","nodeType":"MemberAccess","src":"6031:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:8","subExpression":{"arguments":[{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6154:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6160:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6164:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1001,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6171:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":996,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6128:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":621,"src":"6128:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"6123:127:8","trueBody":{"id":1011,"nodeType":"Block","src":"6178:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1007,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6232:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:8","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6199:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"RevertStatement","src":"6192:47:8"}]}},"id":1013,"nodeType":"IfStatement","src":"6027:223:8","trueBody":{"id":995,"nodeType":"Block","src":"6052:65:8","statements":[{"expression":{"arguments":[{"id":989,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6083:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},{"id":990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6090:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6096:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6100:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":988,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"6066:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"6066:40:8"}]}}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"5504:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:8","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"token","nameLocation":"5904:5:8","nodeType":"VariableDeclaration","scope":1015,"src":"5895:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},"typeName":{"id":971,"nodeType":"UserDefinedTypeName","pathNode":{"id":970,"name":"IERC1363","nameLocations":["5895:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"5895:8:8"},"referencedDeclaration":644,"src":"5895:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"from","nameLocation":"5927:4:8","nodeType":"VariableDeclaration","scope":1015,"src":"5919:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"to","nameLocation":"5949:2:8","nodeType":"VariableDeclaration","scope":1015,"src":"5941:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"value","nameLocation":"5969:5:8","nodeType":"VariableDeclaration","scope":1015,"src":"5961:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"data","nameLocation":"5997:4:8","nodeType":"VariableDeclaration","scope":1015,"src":"5984:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":979,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:8"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"6017:0:8"},"scope":1141,"src":"5850:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"7023:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7037:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:8","memberName":"code","nodeType":"MemberAccess","src":"7037:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:8","memberName":"length","nodeType":"MemberAccess","src":"7037:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:8","subExpression":{"arguments":[{"id":1042,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7145:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7149:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1044,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7156:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1040,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7124:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":643,"src":"7124:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"IfStatement","src":"7119:116:8","trueBody":{"id":1054,"nodeType":"Block","src":"7163:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1050,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7217:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:8","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1047,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"7184:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"RevertStatement","src":"7177:47:8"}]}},"id":1056,"nodeType":"IfStatement","src":"7033:202:8","trueBody":{"id":1039,"nodeType":"Block","src":"7058:55:8","statements":[{"expression":{"arguments":[{"id":1034,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7085:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},{"id":1035,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7092:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"7072:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"ExpressionStatement","src":"7072:30:8"}]}}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"6262:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:8","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"token","nameLocation":"6961:5:8","nodeType":"VariableDeclaration","scope":1058,"src":"6952:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"IERC1363","nameLocations":["6952:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"6952:8:8"},"referencedDeclaration":644,"src":"6952:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$644","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"to","nameLocation":"6976:2:8","nodeType":"VariableDeclaration","scope":1058,"src":"6968:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"6988:5:8","nodeType":"VariableDeclaration","scope":1058,"src":"6980:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"7008:4:8","nodeType":"VariableDeclaration","scope":1058,"src":"6995:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:8"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"7023:0:8"},"scope":1141,"src":"6921:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"7808:650:8","statements":[{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:8","nodeType":"VariableDeclaration","scope":1098,"src":"7818:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1069,"nodeType":"VariableDeclarationStatement","src":"7818:18:8"},{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:8","nodeType":"VariableDeclaration","scope":1098,"src":"7846:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1072,"nodeType":"VariableDeclarationStatement","src":"7846:19:8"},{"AST":{"nodeType":"YulBlock","src":"7900:396:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7914:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7934:3:8"},"nodeType":"YulFunctionCall","src":"7934:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"7941:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7948:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7955:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"7961:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:8"},"nodeType":"YulFunctionCall","src":"7951:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7974:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7968:5:8"},"nodeType":"YulFunctionCall","src":"7968:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"7981:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7984:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"7929:4:8"},"nodeType":"YulFunctionCall","src":"7929:60:8"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"7918:7:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8050:157:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8068:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8085:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8079:5:8"},"nodeType":"YulFunctionCall","src":"8079:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8072:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8122:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8127:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8130:14:8"},"nodeType":"YulFunctionCall","src":"8130:16:8"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8107:14:8"},"nodeType":"YulFunctionCall","src":"8107:40:8"},"nodeType":"YulExpressionStatement","src":"8107:40:8"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8171:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8176:14:8"},"nodeType":"YulFunctionCall","src":"8176:16:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8164:6:8"},"nodeType":"YulFunctionCall","src":"8164:29:8"},"nodeType":"YulExpressionStatement","src":"8164:29:8"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8041:7:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8034:6:8"},"nodeType":"YulFunctionCall","src":"8034:15:8"},"nodeType":"YulIf","src":"8031:176:8"},{"nodeType":"YulAssignment","src":"8220:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8234:14:8"},"nodeType":"YulFunctionCall","src":"8234:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8220:10:8"}]},{"nodeType":"YulAssignment","src":"8263:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8284:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8278:5:8"},"nodeType":"YulFunctionCall","src":"8278:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8263:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1064,"isOffset":false,"isSlot":false,"src":"7955:4:8","valueSize":1},{"declaration":1064,"isOffset":false,"isSlot":false,"src":"7974:4:8","valueSize":1},{"declaration":1068,"isOffset":false,"isSlot":false,"src":"8220:10:8","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"8263:11:8","valueSize":1},{"declaration":1062,"isOffset":false,"isSlot":false,"src":"7941:5:8","valueSize":1}],"flags":["memory-safe"],"id":1073,"nodeType":"InlineAssembly","src":"7875:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8310:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"8362:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"8336:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:8","memberName":"code","nodeType":"MemberAccess","src":"8328:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:8","memberName":"length","nodeType":"MemberAccess","src":"8328:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"8306:146:8","trueBody":{"id":1096,"nodeType":"Block","src":"8380:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1092,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"8434:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}],"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:8","typeDescriptions":{}}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1089,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"8401:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"RevertStatement","src":"8394:47:8"}]}}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"7247:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:8","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"token","nameLocation":"7774:5:8","nodeType":"VariableDeclaration","scope":1099,"src":"7767:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":1061,"nodeType":"UserDefinedTypeName","pathNode":{"id":1060,"name":"IERC20","nameLocations":["7767:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"7767:6:8"},"referencedDeclaration":730,"src":"7767:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"data","nameLocation":"7794:4:8","nodeType":"VariableDeclaration","scope":1099,"src":"7781:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:8"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"7808:0:8"},"scope":1141,"src":"7738:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1139,"nodeType":"Block","src":"9049:391:8","statements":[{"assignments":[1111],"declarations":[{"constant":false,"id":1111,"mutability":"mutable","name":"success","nameLocation":"9064:7:8","nodeType":"VariableDeclaration","scope":1139,"src":"9059:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1112,"nodeType":"VariableDeclarationStatement","src":"9059:12:8"},{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:8","nodeType":"VariableDeclaration","scope":1139,"src":"9081:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"nodeType":"VariableDeclarationStatement","src":"9081:18:8"},{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:8","nodeType":"VariableDeclaration","scope":1139,"src":"9109:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1118,"nodeType":"VariableDeclarationStatement","src":"9109:19:8"},{"AST":{"nodeType":"YulBlock","src":"9163:174:8","statements":[{"nodeType":"YulAssignment","src":"9177:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9193:3:8"},"nodeType":"YulFunctionCall","src":"9193:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"9200:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"9207:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9214:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"9220:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9210:3:8"},"nodeType":"YulFunctionCall","src":"9210:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9233:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9227:5:8"},"nodeType":"YulFunctionCall","src":"9227:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"9240:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9188:4:8"},"nodeType":"YulFunctionCall","src":"9188:60:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9177:7:8"}]},{"nodeType":"YulAssignment","src":"9261:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9275:14:8"},"nodeType":"YulFunctionCall","src":"9275:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9261:10:8"}]},{"nodeType":"YulAssignment","src":"9304:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9325:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9319:5:8"},"nodeType":"YulFunctionCall","src":"9319:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9304:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1105,"isOffset":false,"isSlot":false,"src":"9214:4:8","valueSize":1},{"declaration":1105,"isOffset":false,"isSlot":false,"src":"9233:4:8","valueSize":1},{"declaration":1114,"isOffset":false,"isSlot":false,"src":"9261:10:8","valueSize":1},{"declaration":1117,"isOffset":false,"isSlot":false,"src":"9304:11:8","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"9177:7:8","valueSize":1},{"declaration":1103,"isOffset":false,"isSlot":false,"src":"9200:5:8","valueSize":1}],"flags":["memory-safe"],"id":1119,"nodeType":"InlineAssembly","src":"9138:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"9353:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"9365:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"9416:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1126,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"9391:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:8","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:8","memberName":"code","nodeType":"MemberAccess","src":"9383:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:8","memberName":"length","nodeType":"MemberAccess","src":"9383:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1109,"id":1138,"nodeType":"Return","src":"9346:87:8"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"8464:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:8","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"token","nameLocation":"9000:5:8","nodeType":"VariableDeclaration","scope":1140,"src":"8993:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":1102,"nodeType":"UserDefinedTypeName","pathNode":{"id":1101,"name":"IERC20","nameLocations":["8993:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"8993:6:8"},"referencedDeclaration":730,"src":"8993:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"data","nameLocation":"9020:4:8","nodeType":"VariableDeclaration","scope":1140,"src":"9007:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:8"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"9043:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:8"},"scope":1141,"src":"8960:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1142,"src":"750:8692:8","usedErrors":[744,753],"usedEvents":[]}],"src":"115:9328:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1400],"Errors":[1452]},"id":1401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1143,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":1145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":1453,"src":"127:36:9","symbolAliases":[{"foreign":{"id":1144,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"135:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"165:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1400,"linearizedBaseContracts":[1400],"name":"Address","nameLocation":"241:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"255:75:9","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1151,"name":"AddressEmptyCode","nameLocation":"341:16:9","nodeType":"ErrorDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"target","nameLocation":"366:6:9","nodeType":"VariableDeclaration","scope":1151,"src":"358:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:9"},"src":"335:39:9"},{"body":{"id":1197,"nodeType":"Block","src":"1361:278:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1161,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1383:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:9","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1399:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1178,"nodeType":"IfStatement","src":"1371:125:9","trueBody":{"id":1177,"nodeType":"Block","src":"1407:89:9","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1171,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1463:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:9","typeDescriptions":{}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1478:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1166,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1428:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1452_$","typeString":"type(library Errors)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:9","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1440,"src":"1428:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"RevertStatement","src":"1421:64:9"}]}},{"assignments":[1180,null],"declarations":[{"constant":false,"id":1180,"mutability":"mutable","name":"success","nameLocation":"1512:7:9","nodeType":"VariableDeclaration","scope":1197,"src":"1507:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1179,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1187,"initialValue":{"arguments":[{"hexValue":"","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1181,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"1525:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:9","memberName":"call","nodeType":"MemberAccess","src":"1525:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1183,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1547:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:9"},{"condition":{"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:9","subExpression":{"id":1188,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1573:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"1568:65:9","trueBody":{"id":1195,"nodeType":"Block","src":"1582:51:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1190,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1603:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1452_$","typeString":"type(library Errors)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:9","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"1603:17:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"RevertStatement","src":"1596:26:9"}]}}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"380:905:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:9","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:9","nodeType":"VariableDeclaration","scope":1198,"src":"1309:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"amount","nameLocation":"1344:6:9","nodeType":"VariableDeclaration","scope":1198,"src":"1336:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"1361:0:9"},"scope":1400,"src":"1290:349:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"2573:62:9","statements":[{"expression":{"arguments":[{"id":1209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2612:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"2620:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1208,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2590:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1207,"id":1213,"nodeType":"Return","src":"2583:45:9"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"1645:834:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:9","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"target","nameLocation":"2514:6:9","nodeType":"VariableDeclaration","scope":1215,"src":"2506:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"data","nameLocation":"2535:4:9","nodeType":"VariableDeclaration","scope":1215,"src":"2522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:9"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"2559:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:9"},"scope":1400,"src":"2484:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"3072:294:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1229,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3094:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:9","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3110:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"IfStatement","src":"3082:123:9","trueBody":{"id":1245,"nodeType":"Block","src":"3117:88:9","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1239,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3173:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1400","typeString":"library Address"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:9","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3188:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1234,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3138:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1452_$","typeString":"type(library Errors)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:9","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1440,"src":"3138:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"RevertStatement","src":"3131:63:9"}]}},{"assignments":[1248,1250],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"success","nameLocation":"3220:7:9","nodeType":"VariableDeclaration","scope":1264,"src":"3215:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1247,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:9","nodeType":"VariableDeclaration","scope":1264,"src":"3229:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1257,"initialValue":{"arguments":[{"id":1255,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3282:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1251,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3256:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:9","memberName":"call","nodeType":"MemberAccess","src":"3256:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3275:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:9"},{"expression":{"arguments":[{"id":1259,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3331:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3339:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1261,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"3348:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1258,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3304:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1226,"id":1263,"nodeType":"Return","src":"3297:62:9"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"2641:313:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:9","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"target","nameLocation":"2998:6:9","nodeType":"VariableDeclaration","scope":1265,"src":"2990:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"3019:4:9","nodeType":"VariableDeclaration","scope":1265,"src":"3006:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"value","nameLocation":"3033:5:9","nodeType":"VariableDeclaration","scope":1265,"src":"3025:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:9"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"3058:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:9"},"scope":1400,"src":"2959:407:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"3605:154:9","statements":[{"assignments":[1276,1278],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"success","nameLocation":"3621:7:9","nodeType":"VariableDeclaration","scope":1290,"src":"3616:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:9","nodeType":"VariableDeclaration","scope":1290,"src":"3630:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1283,"initialValue":{"arguments":[{"id":1281,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3675:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1279,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3657:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:9"},{"expression":{"arguments":[{"id":1285,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3724:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1286,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3732:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1287,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3741:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1284,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3697:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1274,"id":1289,"nodeType":"Return","src":"3690:62:9"}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"3372:128:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:9","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"target","nameLocation":"3541:6:9","nodeType":"VariableDeclaration","scope":1291,"src":"3533:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"data","nameLocation":"3562:4:9","nodeType":"VariableDeclaration","scope":1291,"src":"3549:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1269,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:9"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"3591:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1272,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:9"},"scope":1400,"src":"3505:254:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"3997:156:9","statements":[{"assignments":[1302,1304],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"success","nameLocation":"4013:7:9","nodeType":"VariableDeclaration","scope":1316,"src":"4008:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1301,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:9","nodeType":"VariableDeclaration","scope":1316,"src":"4022:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[{"id":1307,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"4069:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1305,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4049:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:9"},{"expression":{"arguments":[{"id":1311,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4118:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1312,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"4126:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1313,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4135:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1310,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4091:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1300,"id":1315,"nodeType":"Return","src":"4084:62:9"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"3765:130:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:9","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"target","nameLocation":"3938:6:9","nodeType":"VariableDeclaration","scope":1317,"src":"3930:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"data","nameLocation":"3959:4:9","nodeType":"VariableDeclaration","scope":1317,"src":"3946:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:9"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"3983:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1298,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:9"},"scope":1400,"src":"3900:253:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"4579:424:9","statements":[{"condition":{"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:9","subExpression":{"id":1329,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4594:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1354,"nodeType":"Block","src":"4653:344:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1336,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4841:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:9","memberName":"length","nodeType":"MemberAccess","src":"4841:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1340,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"4867:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:9","memberName":"code","nodeType":"MemberAccess","src":"4867:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:9","memberName":"length","nodeType":"MemberAccess","src":"4867:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"4837:119:9","trueBody":{"id":1350,"nodeType":"Block","src":"4892:64:9","statements":[{"errorCall":{"arguments":[{"id":1347,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"4934:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1346,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4917:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"RevertStatement","src":"4910:31:9"}]}},{"expression":{"id":1352,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4976:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1328,"id":1353,"nodeType":"Return","src":"4969:17:9"}]},"id":1355,"nodeType":"IfStatement","src":"4589:408:9","trueBody":{"id":1335,"nodeType":"Block","src":"4603:44:9","statements":[{"expression":{"arguments":[{"id":1332,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4625:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1331,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"4617:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"4617:19:9"}]}}]},"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"4159:257:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:9","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"target","nameLocation":"4474:6:9","nodeType":"VariableDeclaration","scope":1357,"src":"4466:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"success","nameLocation":"4495:7:9","nodeType":"VariableDeclaration","scope":1357,"src":"4490:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:9","nodeType":"VariableDeclaration","scope":1357,"src":"4512:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:9"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4565:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1326,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:9"},"scope":1400,"src":"4421:582:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"5307:122:9","statements":[{"condition":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:9","subExpression":{"id":1367,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"5322:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1376,"nodeType":"Block","src":"5381:42:9","statements":[{"expression":{"id":1374,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5402:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1366,"id":1375,"nodeType":"Return","src":"5395:17:9"}]},"id":1377,"nodeType":"IfStatement","src":"5317:106:9","trueBody":{"id":1373,"nodeType":"Block","src":"5331:44:9","statements":[{"expression":{"arguments":[{"id":1370,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5353:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1369,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"5345:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"5345:19:9"}]}}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"5009:191:9","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:9","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"success","nameLocation":"5236:7:9","nodeType":"VariableDeclaration","scope":1379,"src":"5231:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1359,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:9","nodeType":"VariableDeclaration","scope":1379,"src":"5245:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:9"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"5293:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1364,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:9"},"scope":1400,"src":"5205:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"5598:432:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1385,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5674:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:9","memberName":"length","nodeType":"MemberAccess","src":"5674:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1396,"nodeType":"Block","src":"5973:51:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1391,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5994:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1452_$","typeString":"type(library Errors)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:9","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"5994:17:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"RevertStatement","src":"5987:26:9"}]},"id":1397,"nodeType":"IfStatement","src":"5670:354:9","trueBody":{"id":1390,"nodeType":"Block","src":"5697:270:9","statements":[{"AST":{"nodeType":"YulBlock","src":"5824:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5842:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5871:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5865:5:9"},"nodeType":"YulFunctionCall","src":"5865:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"5846:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5910:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"5914:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:9"},"nodeType":"YulFunctionCall","src":"5906:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"5927:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5899:6:9"},"nodeType":"YulFunctionCall","src":"5899:44:9"},"nodeType":"YulExpressionStatement","src":"5899:44:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1382,"isOffset":false,"isSlot":false,"src":"5871:10:9","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"5914:10:9","valueSize":1}],"flags":["memory-safe"],"id":1389,"nodeType":"InlineAssembly","src":"5799:158:9"}]}}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"5435:103:9","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:9","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:9","nodeType":"VariableDeclaration","scope":1399,"src":"5560:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1381,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:9"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"5598:0:9"},"scope":1400,"src":"5543:487:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1401,"src":"233:5799:9","usedErrors":[1151],"usedEvents":[]}],"src":"101:5932:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1430]},"id":1431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1402,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1430,"linearizedBaseContracts":[1430],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1411,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1407,"id":1410,"nodeType":"Return","src":"728:17:10"}]},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1430,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1416,"id":1419,"nodeType":"Return","src":"835:15:10"}]},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1414,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1430,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1428,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1425,"id":1427,"nodeType":"Return","src":"945:8:10"}]},"id":1429,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1430,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1431,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1452]},"id":1453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"126:284:11","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1452,"linearizedBaseContracts":[1452],"name":"Errors","nameLocation":"419:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"432:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1440,"name":"InsufficientBalance","nameLocation":"537:19:11","nodeType":"ErrorDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"balance","nameLocation":"565:7:11","nodeType":"VariableDeclaration","scope":1440,"src":"557:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"needed","nameLocation":"582:6:11","nodeType":"VariableDeclaration","scope":1440,"src":"574:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:11"},"src":"531:59:11"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"596:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1443,"name":"FailedCall","nameLocation":"696:10:11","nodeType":"ErrorDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"706:2:11"},"src":"690:19:11"},{"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"715:46:11","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1446,"name":"FailedDeployment","nameLocation":"772:16:11","nodeType":"ErrorDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"788:2:11"},"src":"766:25:11"},{"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"797:58:11","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1451,"name":"MissingPrecompile","nameLocation":"866:17:11","nodeType":"ErrorDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"884:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:11"},"src":"860:33:11"}],"scope":1453,"src":"411:484:11","usedErrors":[1440,1443,1446,1451],"usedEvents":[]}],"src":"100:796:11"},"id":11},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1521]},"id":1522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1454,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"135:894:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1521,"linearizedBaseContracts":[1521],"name":"ReentrancyGuard","nameLocation":"1048:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1458,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:12","nodeType":"VariableDeclaration","scope":1521,"src":"1818:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1461,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:12","nodeType":"VariableDeclaration","scope":1521,"src":"1864:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1463,"mutability":"mutable","name":"_status","nameLocation":"1923:7:12","nodeType":"VariableDeclaration","scope":1521,"src":"1907:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"1937:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1466,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:12","nodeType":"ErrorDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"2028:2:12"},"src":"1994:37:12"},{"body":{"id":1473,"nodeType":"Block","src":"2051:38:12","statements":[{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1469,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1470,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2071:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1472,"nodeType":"ExpressionStatement","src":"2061:21:12"}]},"id":1474,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"2048:2:12"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"2051:0:12"},"scope":1521,"src":"2037:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"2490:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1477,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2500:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"2500:21:12"},{"id":1480,"nodeType":"PlaceholderStatement","src":"2531:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1481,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2542:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"2542:20:12"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2095:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1485,"name":"nonReentrant","nameLocation":"2475:12:12","nodeType":"ModifierDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"2487:2:12"},"src":"2466:103:12","virtual":false,"visibility":"internal"},{"body":{"id":1500,"nodeType":"Block","src":"2614:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1489,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"2698:86:12","trueBody":{"id":1494,"nodeType":"Block","src":"2722:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1491,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2743:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"RevertStatement","src":"2736:37:12"}]}},{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1497,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ExpressionStatement","src":"2858:17:12"}]},"id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:12","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"2614:0:12"},"scope":1521,"src":"2575:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1508,"nodeType":"Block","src":"2926:170:12","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1505,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3078:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"3068:21:12"}]},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:12","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"2915:2:12"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"2926:0:12"},"scope":1521,"src":"2888:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1519,"nodeType":"Block","src":"3339:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1516,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1514,"id":1518,"nodeType":"Return","src":"3349:25:12"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"3102:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:12","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"3307:2:12"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"3333:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1512,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:12"},"scope":1521,"src":"3275:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1522,"src":"1030:2353:12","usedErrors":[1466],"usedEvents":[]}],"src":"109:3275:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1545],"IERC165":[1557]},"id":1546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1523,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1546,"sourceUnit":1558,"src":"140:38:13","symbolAliases":[{"foreign":{"id":1524,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"148:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1527,"name":"IERC165","nameLocations":["688:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1557,"src":"688:7:13"},"id":1528,"nodeType":"InheritanceSpecifier","src":"688:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"180:479:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1545,"linearizedBaseContracts":[1545,1557],"name":"ERC165","nameLocation":"678:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1556],"body":{"id":1543,"nodeType":"Block","src":"845:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"862:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1538,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"882:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1557_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1557_$","typeString":"type(contract IERC165)"}],"id":1537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1557","typeString":"type(contract IERC165)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1535,"id":1542,"nodeType":"Return","src":"855:47:13"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"702:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:13","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:13","nodeType":"VariableDeclaration","scope":1544,"src":"790:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1530,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:13"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"839:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1533,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:13"},"scope":1545,"src":"763:146:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1546,"src":"660:251:13","usedErrors":[],"usedEvents":[]}],"src":"114:798:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1557]},"id":1558,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1547,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"141:280:14","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1557,"linearizedBaseContracts":[1557],"name":"IERC165","nameLocation":"432:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"446:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1556,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:14","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:14","nodeType":"VariableDeclaration","scope":1556,"src":"818:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:14"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"861:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1553,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:14"},"scope":1557,"src":"791:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1558,"src":"422:447:14","usedErrors":[],"usedEvents":[]}],"src":"115:755:14"},"id":14},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2170]},"id":2171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1559,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"231:1098:15","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2170,"linearizedBaseContracts":[2170],"name":"EnumerableSet","nameLocation":"1338:13:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1568,"members":[{"constant":false,"id":1563,"mutability":"mutable","name":"_values","nameLocation":"1862:7:15","nodeType":"VariableDeclaration","scope":1568,"src":"1852:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1562,"nodeType":"ArrayTypeName","src":"1852:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:15","nodeType":"VariableDeclaration","scope":1568,"src":"2020:44:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1566,"keyName":"value","keyNameLocation":"2036:5:15","keyType":{"id":1564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:15","nodeType":"StructDefinition","scope":2170,"src":"1798:273:15","visibility":"public"},{"body":{"id":1609,"nodeType":"Block","src":"2310:337:15","statements":[{"condition":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:15","subExpression":{"arguments":[{"id":1580,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2335:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2340:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1579,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2325:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1607,"nodeType":"Block","src":"2604:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1578,"id":1606,"nodeType":"Return","src":"2618:12:15"}]},"id":1608,"nodeType":"IfStatement","src":"2320:321:15","trueBody":{"id":1604,"nodeType":"Block","src":"2348:250:15","statements":[{"expression":{"arguments":[{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2379:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1584,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2362:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"2362:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:15","memberName":"push","nodeType":"MemberAccess","src":"2362:16:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"2362:23:15"},{"expression":{"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1592,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2520:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"2520:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1596,"indexExpression":{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2535:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1597,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2544:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"2544:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:15","memberName":"length","nodeType":"MemberAccess","src":"2544:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1601,"nodeType":"ExpressionStatement","src":"2520:42:15"},{"expression":{"hexValue":"74727565","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1578,"id":1603,"nodeType":"Return","src":"2576:11:15"}]}}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"2077:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:15","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"set","nameLocation":"2267:3:15","nodeType":"VariableDeclaration","scope":1610,"src":"2255:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1571,"nodeType":"UserDefinedTypeName","pathNode":{"id":1570,"name":"Set","nameLocations":["2255:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"2255:3:15"},"referencedDeclaration":1568,"src":"2255:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"value","nameLocation":"2280:5:15","nodeType":"VariableDeclaration","scope":1610,"src":"2272:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:15"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1610,"src":"2304:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1576,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:15"},"scope":2170,"src":"2241:406:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1693,"nodeType":"Block","src":"2887:1296:15","statements":[{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"position","nameLocation":"2999:8:15","nodeType":"VariableDeclaration","scope":1693,"src":"2991:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1627,"initialValue":{"baseExpression":{"expression":{"id":1623,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3010:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"3010:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1626,"indexExpression":{"id":1625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"3025:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1628,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3046:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1691,"nodeType":"Block","src":"4140:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1620,"id":1690,"nodeType":"Return","src":"4154:12:15"}]},"id":1692,"nodeType":"IfStatement","src":"3042:1135:15","trueBody":{"id":1688,"nodeType":"Block","src":"3061:1073:15","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:15","nodeType":"VariableDeclaration","scope":1688,"src":"3413:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1636,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1633,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3434:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:15"},{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:15","nodeType":"VariableDeclaration","scope":1688,"src":"3460:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1644,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1639,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3480:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"3480:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:15","memberName":"length","nodeType":"MemberAccess","src":"3480:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3521:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1646,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"3535:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1672,"nodeType":"IfStatement","src":"3517:378:15","trueBody":{"id":1671,"nodeType":"Block","src":"3546:349:15","statements":[{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:15","nodeType":"VariableDeclaration","scope":1671,"src":"3564:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1654,"initialValue":{"baseExpression":{"expression":{"id":1650,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3584:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"3584:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1653,"indexExpression":{"id":1652,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"3596:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:15"},{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1655,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3705:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"3705:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1659,"indexExpression":{"id":1657,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3717:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1660,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3731:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1662,"nodeType":"ExpressionStatement","src":"3705:35:15"},{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1663,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3844:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"3844:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1667,"indexExpression":{"id":1665,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3859:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1668,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3872:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"3844:36:15"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1673,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3973:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"3973:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:15","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"3973:17:15"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:15","subExpression":{"baseExpression":{"expression":{"id":1680,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4076:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"4076:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1683,"indexExpression":{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4091:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"4069:28:15"},{"expression":{"hexValue":"74727565","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1620,"id":1687,"nodeType":"Return","src":"4112:11:15"}]}}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"2653:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:15","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"set","nameLocation":"2844:3:15","nodeType":"VariableDeclaration","scope":1694,"src":"2832:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1613,"nodeType":"UserDefinedTypeName","pathNode":{"id":1612,"name":"Set","nameLocations":["2832:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"2832:3:15"},"referencedDeclaration":1568,"src":"2832:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"value","nameLocation":"2857:5:15","nodeType":"VariableDeclaration","scope":1694,"src":"2849:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:15"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"2881:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1618,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:15"},"scope":2170,"src":"2815:1368:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1712,"nodeType":"Block","src":"4343:50:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1705,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4360:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"4360:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1708,"indexExpression":{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4375:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1704,"id":1711,"nodeType":"Return","src":"4353:33:15"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"4189:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:15","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"set","nameLocation":"4295:3:15","nodeType":"VariableDeclaration","scope":1713,"src":"4283:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1697,"nodeType":"UserDefinedTypeName","pathNode":{"id":1696,"name":"Set","nameLocations":["4283:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"4283:3:15"},"referencedDeclaration":1568,"src":"4283:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"value","nameLocation":"4308:5:15","nodeType":"VariableDeclaration","scope":1713,"src":"4300:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:15"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"4337:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1702,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:15"},"scope":2170,"src":"4264:129:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1726,"nodeType":"Block","src":"4539:42:15","statements":[{"expression":{"expression":{"expression":{"id":1722,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"4556:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"4556:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:15","memberName":"length","nodeType":"MemberAccess","src":"4556:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1721,"id":1725,"nodeType":"Return","src":"4549:25:15"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"4399:70:15","text":" @dev Returns the number of values on the set. O(1)."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:15","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"set","nameLocation":"4503:3:15","nodeType":"VariableDeclaration","scope":1727,"src":"4491:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1716,"nodeType":"UserDefinedTypeName","pathNode":{"id":1715,"name":"Set","nameLocations":["4491:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"4491:3:15"},"referencedDeclaration":1568,"src":"4491:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:15"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"4530:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:15"},"scope":2170,"src":"4474:107:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1743,"nodeType":"Block","src":"4999:42:15","statements":[{"expression":{"baseExpression":{"expression":{"id":1738,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5016:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"5016:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1741,"indexExpression":{"id":1740,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5028:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1737,"id":1742,"nodeType":"Return","src":"5009:25:15"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"4587:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:15","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"set","nameLocation":"4948:3:15","nodeType":"VariableDeclaration","scope":1744,"src":"4936:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1730,"nodeType":"UserDefinedTypeName","pathNode":{"id":1729,"name":"Set","nameLocations":["4936:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"4936:3:15"},"referencedDeclaration":1568,"src":"4936:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"index","nameLocation":"4961:5:15","nodeType":"VariableDeclaration","scope":1744,"src":"4953:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:15"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"4990:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:15"},"scope":2170,"src":"4923:118:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1757,"nodeType":"Block","src":"5655:35:15","statements":[{"expression":{"expression":{"id":1754,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5672:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"5672:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1753,"id":1756,"nodeType":"Return","src":"5665:18:15"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"5047:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:15","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"set","nameLocation":"5610:3:15","nodeType":"VariableDeclaration","scope":1758,"src":"5598:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1747,"nodeType":"UserDefinedTypeName","pathNode":{"id":1746,"name":"Set","nameLocations":["5598:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"5598:3:15"},"referencedDeclaration":1568,"src":"5598:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:15"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1758,"src":"5637:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1751,"nodeType":"ArrayTypeName","src":"5637:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:15"},"scope":2170,"src":"5581:109:15","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1762,"members":[{"constant":false,"id":1761,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:15","nodeType":"VariableDeclaration","scope":1762,"src":"5743:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"Set","nameLocations":["5743:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"5743:3:15"},"referencedDeclaration":1568,"src":"5743:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:15","nodeType":"StructDefinition","scope":2170,"src":"5715:45:15","visibility":"public"},{"body":{"id":1779,"nodeType":"Block","src":"6006:47:15","statements":[{"expression":{"arguments":[{"expression":{"id":1774,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"6028:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"6028:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6040:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1773,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6023:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1772,"id":1778,"nodeType":"Return","src":"6016:30:15"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"5766:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:15","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"set","nameLocation":"5962:3:15","nodeType":"VariableDeclaration","scope":1780,"src":"5943:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1765,"nodeType":"UserDefinedTypeName","pathNode":{"id":1764,"name":"Bytes32Set","nameLocations":["5943:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"5943:10:15"},"referencedDeclaration":1762,"src":"5943:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"value","nameLocation":"5975:5:15","nodeType":"VariableDeclaration","scope":1780,"src":"5967:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:15"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"6000:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1770,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:15"},"scope":2170,"src":"5930:123:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"6300:50:15","statements":[{"expression":{"arguments":[{"expression":{"id":1792,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6325:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"6325:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6337:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1791,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"6317:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1790,"id":1796,"nodeType":"Return","src":"6310:33:15"}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"6059:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:15","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"set","nameLocation":"6256:3:15","nodeType":"VariableDeclaration","scope":1798,"src":"6237:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1783,"nodeType":"UserDefinedTypeName","pathNode":{"id":1782,"name":"Bytes32Set","nameLocations":["6237:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"6237:10:15"},"referencedDeclaration":1762,"src":"6237:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"value","nameLocation":"6269:5:15","nodeType":"VariableDeclaration","scope":1798,"src":"6261:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:15"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"6294:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1788,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:15"},"scope":2170,"src":"6221:129:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"6517:52:15","statements":[{"expression":{"arguments":[{"expression":{"id":1810,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6544:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"6544:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6556:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1809,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"6534:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1808,"id":1814,"nodeType":"Return","src":"6527:35:15"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"6356:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:15","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"set","nameLocation":"6468:3:15","nodeType":"VariableDeclaration","scope":1816,"src":"6449:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1801,"nodeType":"UserDefinedTypeName","pathNode":{"id":1800,"name":"Bytes32Set","nameLocations":["6449:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"6449:10:15"},"referencedDeclaration":1762,"src":"6449:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"value","nameLocation":"6481:5:15","nodeType":"VariableDeclaration","scope":1816,"src":"6473:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:15"},"returnParameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"6511:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1806,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:15"},"scope":2170,"src":"6431:138:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"6722:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":1826,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"6747:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"6747:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1825,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"6739:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1829,"nodeType":"Return","src":"6732:26:15"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"6575:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:15","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"set","nameLocation":"6685:3:15","nodeType":"VariableDeclaration","scope":1831,"src":"6666:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1819,"nodeType":"UserDefinedTypeName","pathNode":{"id":1818,"name":"Bytes32Set","nameLocations":["6666:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"6666:10:15"},"referencedDeclaration":1762,"src":"6666:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:15"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"6713:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:15"},"scope":2170,"src":"6650:115:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"7190:46:15","statements":[{"expression":{"arguments":[{"expression":{"id":1843,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"7211:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"7211:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1845,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"7223:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7207:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1841,"id":1847,"nodeType":"Return","src":"7200:29:15"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"6771:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:15","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"set","nameLocation":"7138:3:15","nodeType":"VariableDeclaration","scope":1849,"src":"7119:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1834,"nodeType":"UserDefinedTypeName","pathNode":{"id":1833,"name":"Bytes32Set","nameLocations":["7119:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"7119:10:15"},"referencedDeclaration":1762,"src":"7119:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"index","nameLocation":"7151:5:15","nodeType":"VariableDeclaration","scope":1849,"src":"7143:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:15"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"7181:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:15"},"scope":2170,"src":"7107:129:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1878,"nodeType":"Block","src":"7857:192:15","statements":[{"assignments":[1863],"declarations":[{"constant":false,"id":1863,"mutability":"mutable","name":"store","nameLocation":"7884:5:15","nodeType":"VariableDeclaration","scope":1878,"src":"7867:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1862,"nodeType":"ArrayTypeName","src":"7867:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1868,"initialValue":{"arguments":[{"expression":{"id":1865,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"7900:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"7900:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1864,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"7892:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:15"},{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"result","nameLocation":"7938:6:15","nodeType":"VariableDeclaration","scope":1878,"src":"7921:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1872,"nodeType":"ArrayTypeName","src":"7921:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1874,"nodeType":"VariableDeclarationStatement","src":"7921:23:15"},{"AST":{"nodeType":"YulBlock","src":"7980:39:15","statements":[{"nodeType":"YulAssignment","src":"7994:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"8004:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7994:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1873,"isOffset":false,"isSlot":false,"src":"7994:6:15","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"8004:5:15","valueSize":1}],"flags":["memory-safe"],"id":1875,"nodeType":"InlineAssembly","src":"7955:64:15"},{"expression":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"8036:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1858,"id":1877,"nodeType":"Return","src":"8029:13:15"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"7242:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:15","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"set","nameLocation":"7811:3:15","nodeType":"VariableDeclaration","scope":1879,"src":"7792:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1852,"nodeType":"UserDefinedTypeName","pathNode":{"id":1851,"name":"Bytes32Set","nameLocations":["7792:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"7792:10:15"},"referencedDeclaration":1762,"src":"7792:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1762_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:15"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"7839:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1856,"nodeType":"ArrayTypeName","src":"7839:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:15"},"scope":2170,"src":"7776:273:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1883,"members":[{"constant":false,"id":1882,"mutability":"mutable","name":"_inner","nameLocation":"8106:6:15","nodeType":"VariableDeclaration","scope":1883,"src":"8102:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1881,"nodeType":"UserDefinedTypeName","pathNode":{"id":1880,"name":"Set","nameLocations":["8102:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"8102:3:15"},"referencedDeclaration":1568,"src":"8102:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8081:10:15","nodeType":"StructDefinition","scope":2170,"src":"8074:45:15","visibility":"public"},{"body":{"id":1909,"nodeType":"Block","src":"8365:74:15","statements":[{"expression":{"arguments":[{"expression":{"id":1895,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"8387:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8391:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"8387:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"8423:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1901,"name":"uint160","nodeType":"ElementaryTypeName","src":"8415:7:15","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8407:7:15","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8407:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8399:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8399:7:15","typeDescriptions":{}}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1894,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8382:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8382:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1893,"id":1908,"nodeType":"Return","src":"8375:57:15"}]},"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"8125:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8298:3:15","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"set","nameLocation":"8321:3:15","nodeType":"VariableDeclaration","scope":1910,"src":"8302:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1886,"nodeType":"UserDefinedTypeName","pathNode":{"id":1885,"name":"AddressSet","nameLocations":["8302:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"8302:10:15"},"referencedDeclaration":1883,"src":"8302:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"8334:5:15","nodeType":"VariableDeclaration","scope":1910,"src":"8326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8301:39:15"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8359:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1891,"name":"bool","nodeType":"ElementaryTypeName","src":"8359:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8358:6:15"},"scope":2170,"src":"8289:150:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"8686:77:15","statements":[{"expression":{"arguments":[{"expression":{"id":1922,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"8711:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8715:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"8711:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8747:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1928,"name":"uint160","nodeType":"ElementaryTypeName","src":"8739:7:15","typeDescriptions":{}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"8731:7:15","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8723:7:15","typeDescriptions":{}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1921,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"8703:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8703:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1920,"id":1935,"nodeType":"Return","src":"8696:60:15"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"8445:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8616:6:15","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"set","nameLocation":"8642:3:15","nodeType":"VariableDeclaration","scope":1937,"src":"8623:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1913,"nodeType":"UserDefinedTypeName","pathNode":{"id":1912,"name":"AddressSet","nameLocations":["8623:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"8623:10:15"},"referencedDeclaration":1883,"src":"8623:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"value","nameLocation":"8655:5:15","nodeType":"VariableDeclaration","scope":1937,"src":"8647:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"8647:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8622:39:15"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"8680:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1918,"name":"bool","nodeType":"ElementaryTypeName","src":"8680:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8679:6:15"},"scope":2170,"src":"8607:156:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1963,"nodeType":"Block","src":"8930:79:15","statements":[{"expression":{"arguments":[{"expression":{"id":1949,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8957:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8961:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"8957:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"8993:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1955,"name":"uint160","nodeType":"ElementaryTypeName","src":"8985:7:15","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"8977:7:15","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8977:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8969:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8969:7:15","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8969:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1948,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8947:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1947,"id":1962,"nodeType":"Return","src":"8940:62:15"}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"8769:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8853:8:15","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"set","nameLocation":"8881:3:15","nodeType":"VariableDeclaration","scope":1964,"src":"8862:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"AddressSet","nameLocations":["8862:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"8862:10:15"},"referencedDeclaration":1883,"src":"8862:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"value","nameLocation":"8894:5:15","nodeType":"VariableDeclaration","scope":1964,"src":"8886:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"8886:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8861:39:15"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1964,"src":"8924:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1945,"name":"bool","nodeType":"ElementaryTypeName","src":"8924:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8923:6:15"},"scope":2170,"src":"8844:165:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"9162:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":1974,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9187:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9191:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"9187:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1973,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"9179:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9179:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1972,"id":1977,"nodeType":"Return","src":"9172:26:15"}]},"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"9015:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9099:6:15","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"set","nameLocation":"9125:3:15","nodeType":"VariableDeclaration","scope":1979,"src":"9106:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1967,"nodeType":"UserDefinedTypeName","pathNode":{"id":1966,"name":"AddressSet","nameLocations":["9106:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"9106:10:15"},"referencedDeclaration":1883,"src":"9106:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9105:24:15"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"9153:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9152:9:15"},"scope":2170,"src":"9090:115:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2005,"nodeType":"Block","src":"9630:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1997,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"9675:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9679:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"9675:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1999,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9687:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1996,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9671:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"9663:7:15","typeDescriptions":{}}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1992,"name":"uint160","nodeType":"ElementaryTypeName","src":"9655:7:15","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9647:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"9647:7:15","typeDescriptions":{}}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9647:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1989,"id":2004,"nodeType":"Return","src":"9640:56:15"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"9211:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9556:2:15","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"set","nameLocation":"9578:3:15","nodeType":"VariableDeclaration","scope":2006,"src":"9559:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1982,"nodeType":"UserDefinedTypeName","pathNode":{"id":1981,"name":"AddressSet","nameLocations":["9559:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"9559:10:15"},"referencedDeclaration":1883,"src":"9559:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"index","nameLocation":"9591:5:15","nodeType":"VariableDeclaration","scope":2006,"src":"9583:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"9583:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9558:39:15"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2006,"src":"9621:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"9621:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9620:9:15"},"scope":2170,"src":"9547:156:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"10324:192:15","statements":[{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"store","nameLocation":"10351:5:15","nodeType":"VariableDeclaration","scope":2035,"src":"10334:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10334:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2019,"nodeType":"ArrayTypeName","src":"10334:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2025,"initialValue":{"arguments":[{"expression":{"id":2022,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"10367:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10371:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"10367:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2021,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10359:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10359:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10334:44:15"},{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"result","nameLocation":"10405:6:15","nodeType":"VariableDeclaration","scope":2035,"src":"10388:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2029,"nodeType":"ArrayTypeName","src":"10388:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2031,"nodeType":"VariableDeclarationStatement","src":"10388:23:15"},{"AST":{"nodeType":"YulBlock","src":"10447:39:15","statements":[{"nodeType":"YulAssignment","src":"10461:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"10471:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10461:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2030,"isOffset":false,"isSlot":false,"src":"10461:6:15","valueSize":1},{"declaration":2020,"isOffset":false,"isSlot":false,"src":"10471:5:15","valueSize":1}],"flags":["memory-safe"],"id":2032,"nodeType":"InlineAssembly","src":"10422:64:15"},{"expression":{"id":2033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"10503:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2015,"id":2034,"nodeType":"Return","src":"10496:13:15"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"9709:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10252:6:15","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"set","nameLocation":"10278:3:15","nodeType":"VariableDeclaration","scope":2036,"src":"10259:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"AddressSet","nameLocations":["10259:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"10259:10:15"},"referencedDeclaration":1883,"src":"10259:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1883_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10258:24:15"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"10306:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"10306:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2013,"nodeType":"ArrayTypeName","src":"10306:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10305:18:15"},"scope":2170,"src":"10243:273:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2040,"members":[{"constant":false,"id":2039,"mutability":"mutable","name":"_inner","nameLocation":"10567:6:15","nodeType":"VariableDeclaration","scope":2040,"src":"10563:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2038,"nodeType":"UserDefinedTypeName","pathNode":{"id":2037,"name":"Set","nameLocations":["10563:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"10563:3:15"},"referencedDeclaration":1568,"src":"10563:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10545:7:15","nodeType":"StructDefinition","scope":2170,"src":"10538:42:15","visibility":"public"},{"body":{"id":2060,"nodeType":"Block","src":"10823:56:15","statements":[{"expression":{"arguments":[{"expression":{"id":2052,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"10845:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10849:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"10845:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"10865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10857:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10857:7:15","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10857:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2051,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"10840:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2050,"id":2059,"nodeType":"Return","src":"10833:39:15"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"10586:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10759:3:15","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"set","nameLocation":"10779:3:15","nodeType":"VariableDeclaration","scope":2061,"src":"10763:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2043,"nodeType":"UserDefinedTypeName","pathNode":{"id":2042,"name":"UintSet","nameLocations":["10763:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"10763:7:15"},"referencedDeclaration":2040,"src":"10763:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"10792:5:15","nodeType":"VariableDeclaration","scope":2061,"src":"10784:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"10784:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10762:36:15"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"10817:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"10817:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10816:6:15"},"scope":2170,"src":"10750:129:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"11123:59:15","statements":[{"expression":{"arguments":[{"expression":{"id":2073,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"11148:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11152:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"11148:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"11168:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11160:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11160:7:15","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11160:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2072,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"11140:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2071,"id":2080,"nodeType":"Return","src":"11133:42:15"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"10885:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11056:6:15","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"set","nameLocation":"11079:3:15","nodeType":"VariableDeclaration","scope":2082,"src":"11063:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"UintSet","nameLocations":["11063:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11063:7:15"},"referencedDeclaration":2040,"src":"11063:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"value","nameLocation":"11092:5:15","nodeType":"VariableDeclaration","scope":2082,"src":"11084:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11084:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11062:36:15"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"11117:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2069,"name":"bool","nodeType":"ElementaryTypeName","src":"11117:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11116:6:15"},"scope":2170,"src":"11047:135:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2102,"nodeType":"Block","src":"11346:61:15","statements":[{"expression":{"arguments":[{"expression":{"id":2094,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"11373:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11377:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"11373:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"11393:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11385:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11385:7:15","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11385:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2093,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"11363:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11363:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2092,"id":2101,"nodeType":"Return","src":"11356:44:15"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"11188:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":2103,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11272:8:15","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"set","nameLocation":"11297:3:15","nodeType":"VariableDeclaration","scope":2103,"src":"11281:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2085,"nodeType":"UserDefinedTypeName","pathNode":{"id":2084,"name":"UintSet","nameLocations":["11281:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11281:7:15"},"referencedDeclaration":2040,"src":"11281:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"value","nameLocation":"11310:5:15","nodeType":"VariableDeclaration","scope":2103,"src":"11302:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:36:15"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"11340:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2090,"name":"bool","nodeType":"ElementaryTypeName","src":"11340:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11339:6:15"},"scope":2170,"src":"11263:144:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2117,"nodeType":"Block","src":"11557:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":2113,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"11582:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11586:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"11582:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2112,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"11574:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11574:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2111,"id":2116,"nodeType":"Return","src":"11567:26:15"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"11413:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11497:6:15","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"set","nameLocation":"11520:3:15","nodeType":"VariableDeclaration","scope":2118,"src":"11504:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2106,"nodeType":"UserDefinedTypeName","pathNode":{"id":2105,"name":"UintSet","nameLocations":["11504:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11504:7:15"},"referencedDeclaration":2040,"src":"11504:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11503:21:15"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"11548:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"11548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11547:9:15"},"scope":2170,"src":"11488:112:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"12022:55:15","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2132,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"12051:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12055:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"12051:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2134,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"12063:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2131,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"12047:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12047:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12039:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12039:7:15","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12039:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2128,"id":2137,"nodeType":"Return","src":"12032:38:15"}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"11606:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11951:2:15","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"set","nameLocation":"11970:3:15","nodeType":"VariableDeclaration","scope":2139,"src":"11954:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"UintSet","nameLocations":["11954:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11954:7:15"},"referencedDeclaration":2040,"src":"11954:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"index","nameLocation":"11983:5:15","nodeType":"VariableDeclaration","scope":2139,"src":"11975:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:36:15"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"12013:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:9:15"},"scope":2170,"src":"11942:135:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2168,"nodeType":"Block","src":"12695:192:15","statements":[{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"store","nameLocation":"12722:5:15","nodeType":"VariableDeclaration","scope":2168,"src":"12705:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12705:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2152,"nodeType":"ArrayTypeName","src":"12705:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2158,"initialValue":{"arguments":[{"expression":{"id":2155,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"12738:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12742:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"12738:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1568_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2154,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"12730:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1568_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12730:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12705:44:15"},{"assignments":[2163],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"result","nameLocation":"12776:6:15","nodeType":"VariableDeclaration","scope":2168,"src":"12759:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ArrayTypeName","src":"12759:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2164,"nodeType":"VariableDeclarationStatement","src":"12759:23:15"},{"AST":{"nodeType":"YulBlock","src":"12818:39:15","statements":[{"nodeType":"YulAssignment","src":"12832:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"12842:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12832:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2163,"isOffset":false,"isSlot":false,"src":"12832:6:15","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"12842:5:15","valueSize":1}],"flags":["memory-safe"],"id":2165,"nodeType":"InlineAssembly","src":"12793:64:15"},{"expression":{"id":2166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"12874:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2148,"id":2167,"nodeType":"Return","src":"12867:13:15"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"12083:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2169,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12626:6:15","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"set","nameLocation":"12649:3:15","nodeType":"VariableDeclaration","scope":2169,"src":"12633:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"UintSet","nameLocations":["12633:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"12633:7:15"},"referencedDeclaration":2040,"src":"12633:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2040_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12632:21:15"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2169,"src":"12677:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"12677:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"nodeType":"ArrayTypeName","src":"12677:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12676:18:15"},"scope":2170,"src":"12617:270:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2171,"src":"1330:11559:15","usedErrors":[],"usedEvents":[]}],"src":"205:12685:15"},"id":15},"contracts/OMNStaking.sol":{"ast":{"absolutePath":"contracts/OMNStaking.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[536],"Address":[1400],"EnumerableSet":[2170],"IAccessControlEnumerable":[562],"IERC1363":[644],"IERC20":[730],"IFeeDistributor":[2188],"IOMNToken":[2184],"OMNStaking":[3336],"ReentrancyGuard":[1521],"SafeERC20":[1141]},"id":3337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2172,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"50:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":731,"src":"76:56:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":1142,"src":"133:65:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":1522,"src":"199:59:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":2176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":537,"src":"259:79:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOMNToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2184,"linearizedBaseContracts":[2184],"name":"IOMNToken","nameLocation":"350:9:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"503c2a80","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"getDiscountForStakedAmount","nameLocation":"375:26:16","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"stakedAmount","nameLocation":"410:12:16","nodeType":"VariableDeclaration","scope":2183,"src":"402:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"402:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"401:22:16"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"447:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:9:16"},"scope":2184,"src":"366:90:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3337,"src":"340:118:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IFeeDistributor","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2188,"linearizedBaseContracts":[2188],"name":"IFeeDistributor","nameLocation":"470:15:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"42f34f5d","id":2187,"implemented":false,"kind":"function","modifiers":[],"name":"distributeToStakers","nameLocation":"501:19:16","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"520:2:16"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"539:0:16"},"scope":2188,"src":"492:48:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3337,"src":"460:82:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":2190,"name":"ReentrancyGuard","nameLocations":["696:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"696:15:16"},"id":2191,"nodeType":"InheritanceSpecifier","src":"696:15:16"},{"baseName":{"id":2192,"name":"AccessControlEnumerable","nameLocations":["713:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"713:23:16"},"id":2193,"nodeType":"InheritanceSpecifier","src":"713:23:16"}],"canonicalName":"OMNStaking","contractDependencies":[],"contractKind":"contract","documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"544:128:16","text":" @title OMN Staking Contract\n @notice Allows users to stake OMN tokens to earn ETH rewards and trading fee discounts"},"fullyImplemented":true,"id":3336,"linearizedBaseContracts":[3336,536,295,1545,1557,562,378,1430,1521],"name":"OMNStaking","nameLocation":"682:10:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2197,"libraryName":{"id":2194,"name":"SafeERC20","nameLocations":["749:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1141,"src":"749:9:16"},"nodeType":"UsingForDirective","src":"743:27:16","typeName":{"id":2196,"nodeType":"UserDefinedTypeName","pathNode":{"id":2195,"name":"IERC20","nameLocations":["763:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"763:6:16"},"referencedDeclaration":730,"src":"763:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"0cdac963","id":2202,"mutability":"constant","name":"FEE_DISTRIBUTOR_ROLE","nameLocation":"817:20:16","nodeType":"VariableDeclaration","scope":3336,"src":"793:80:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"793:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4645455f4449535452494255544f525f524f4c45","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"850:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea","typeString":"literal_string \"FEE_DISTRIBUTOR_ROLE\""},"value":"FEE_DISTRIBUTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea","typeString":"literal_string \"FEE_DISTRIBUTOR_ROLE\""}],"id":2199,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"840:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"840:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"OMNStaking.StakingTier","id":2207,"members":[{"constant":false,"id":2204,"mutability":"mutable","name":"lockDuration","nameLocation":"947:12:16","nodeType":"VariableDeclaration","scope":2207,"src":"939:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"991:16:16","nodeType":"VariableDeclaration","scope":2207,"src":"983:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakingTier","nameLocation":"917:11:16","nodeType":"StructDefinition","scope":3336,"src":"910:152:16","visibility":"public"},{"canonicalName":"OMNStaking.UserStake","id":2220,"members":[{"constant":false,"id":2209,"mutability":"mutable","name":"amount","nameLocation":"1107:6:16","nodeType":"VariableDeclaration","scope":2220,"src":"1099:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"lockDuration","nameLocation":"1131:12:16","nodeType":"VariableDeclaration","scope":2220,"src":"1123:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"startTime","nameLocation":"1161:9:16","nodeType":"VariableDeclaration","scope":2220,"src":"1153:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"endTime","nameLocation":"1188:7:16","nodeType":"VariableDeclaration","scope":2220,"src":"1180:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1180:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"lastRewardClaimTime","nameLocation":"1213:19:16","nodeType":"VariableDeclaration","scope":2220,"src":"1205:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"unlocked","nameLocation":"1247:8:16","nodeType":"VariableDeclaration","scope":2220,"src":"1242:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2218,"name":"bool","nodeType":"ElementaryTypeName","src":"1242:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"UserStake","nameLocation":"1079:9:16","nodeType":"StructDefinition","scope":3336,"src":"1072:190:16","visibility":"public"},{"constant":false,"functionSelector":"17589d2b","id":2223,"mutability":"mutable","name":"omnToken","nameLocation":"1307:8:16","nodeType":"VariableDeclaration","scope":3336,"src":"1293:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"},"typeName":{"id":2222,"nodeType":"UserDefinedTypeName","pathNode":{"id":2221,"name":"IERC20","nameLocations":["1293:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"1293:6:16"},"referencedDeclaration":730,"src":"1293:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"d50267ee","id":2228,"mutability":"mutable","name":"stakingTiers","nameLocation":"1420:12:16","nodeType":"VariableDeclaration","scope":3336,"src":"1381:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier)"},"typeName":{"id":2227,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1381:31:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2226,"nodeType":"UserDefinedTypeName","pathNode":{"id":2225,"name":"StakingTier","nameLocations":["1400:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2207,"src":"1400:11:16"},"referencedDeclaration":2207,"src":"1400:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage_ptr","typeString":"struct OMNStaking.StakingTier"}}},"visibility":"public"},{"constant":false,"functionSelector":"32298be1","id":2231,"mutability":"mutable","name":"lockDurations","nameLocation":"1492:13:16","nodeType":"VariableDeclaration","scope":3336,"src":"1475:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ArrayTypeName","src":"1475:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"b5d5b5fa","id":2237,"mutability":"mutable","name":"userStakes","nameLocation":"1596:10:16","nodeType":"VariableDeclaration","scope":3336,"src":"1557:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake[])"},"typeName":{"id":2236,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"1565:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1557:31:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2234,"nodeType":"UserDefinedTypeName","pathNode":{"id":2233,"name":"UserStake","nameLocations":["1576:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"1576:9:16"},"referencedDeclaration":2220,"src":"1576:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake"}},"id":2235,"nodeType":"ArrayTypeName","src":"1576:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_ptr","typeString":"struct OMNStaking.UserStake[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"817b1cd2","id":2239,"mutability":"mutable","name":"totalStaked","nameLocation":"1655:11:16","nodeType":"VariableDeclaration","scope":3336,"src":"1640:26:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1640:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ee172546","id":2241,"mutability":"mutable","name":"totalRewardsDistributed","nameLocation":"1687:23:16","nodeType":"VariableDeclaration","scope":3336,"src":"1672:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"38962186","id":2243,"mutability":"mutable","name":"accumulatedRewardsPerToken","nameLocation":"1731:26:16","nodeType":"VariableDeclaration","scope":3336,"src":"1716:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8686b39a","id":2247,"mutability":"mutable","name":"userRewardDebts","nameLocation":"1816:15:16","nodeType":"VariableDeclaration","scope":3336,"src":"1781:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2246,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1781:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"31d7a262","id":2251,"mutability":"mutable","name":"pendingRewards","nameLocation":"1872:14:16","nodeType":"VariableDeclaration","scope":3336,"src":"1837:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2250,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1837:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1856:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"291a3d9e","id":2254,"mutability":"mutable","name":"earlyWithdrawalPenalty","nameLocation":"1940:22:16","nodeType":"VariableDeclaration","scope":3336,"src":"1925:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1925:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"anonymous":false,"eventSelector":"b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed","id":2264,"name":"Staked","nameLocation":"2023:6:16","nodeType":"EventDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2046:4:16","nodeType":"VariableDeclaration","scope":2264,"src":"2030:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2060:6:16","nodeType":"VariableDeclaration","scope":2264,"src":"2052:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2076:12:16","nodeType":"VariableDeclaration","scope":2264,"src":"2068:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2262,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2098:7:16","nodeType":"VariableDeclaration","scope":2264,"src":"2090:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:77:16"},"src":"2017:90:16"},{"anonymous":false,"eventSelector":"4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e","id":2272,"name":"Unstaked","nameLocation":"2118:8:16","nodeType":"EventDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2143:4:16","nodeType":"VariableDeclaration","scope":2272,"src":"2127:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2157:6:16","nodeType":"VariableDeclaration","scope":2272,"src":"2149:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"indexed":false,"mutability":"mutable","name":"penalized","nameLocation":"2170:9:16","nodeType":"VariableDeclaration","scope":2272,"src":"2165:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"2165:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2126:54:16"},"src":"2112:69:16"},{"anonymous":false,"eventSelector":"fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe","id":2278,"name":"RewardsClaimed","nameLocation":"2192:14:16","nodeType":"EventDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2223:4:16","nodeType":"VariableDeclaration","scope":2278,"src":"2207:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"2207:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2276,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2237:6:16","nodeType":"VariableDeclaration","scope":2278,"src":"2229:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:38:16"},"src":"2186:59:16"},{"anonymous":false,"eventSelector":"6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be442","id":2282,"name":"RewardsDistributed","nameLocation":"2256:18:16","nodeType":"EventDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2283:6:16","nodeType":"VariableDeclaration","scope":2282,"src":"2275:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2274:16:16"},"src":"2250:41:16"},{"anonymous":false,"eventSelector":"092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe27","id":2288,"name":"StakingTierAdded","nameLocation":"2302:16:16","nodeType":"EventDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2327:12:16","nodeType":"VariableDeclaration","scope":2288,"src":"2319:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2286,"indexed":false,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"2349:16:16","nodeType":"VariableDeclaration","scope":2288,"src":"2341:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:48:16"},"src":"2296:71:16"},{"anonymous":false,"eventSelector":"8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a5468","id":2294,"name":"StakingTierUpdated","nameLocation":"2378:18:16","nodeType":"EventDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2405:12:16","nodeType":"VariableDeclaration","scope":2294,"src":"2397:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2292,"indexed":false,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"2427:16:16","nodeType":"VariableDeclaration","scope":2294,"src":"2419:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2396:48:16"},"src":"2372:73:16"},{"anonymous":false,"eventSelector":"653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d4","id":2298,"name":"EarlyWithdrawalPenaltyUpdated","nameLocation":"2456:29:16","nodeType":"EventDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"indexed":false,"mutability":"mutable","name":"penalty","nameLocation":"2494:7:16","nodeType":"VariableDeclaration","scope":2298,"src":"2486:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:17:16"},"src":"2450:53:16"},{"body":{"id":2341,"nodeType":"Block","src":"2559:527:16","statements":[{"expression":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"omnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"2569:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2307,"name":"_omnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2587:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2580:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$730_$","typeString":"type(contract IERC20)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"src":"2569:28:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":2310,"nodeType":"ExpressionStatement","src":"2569:28:16"},{"expression":{"arguments":[{"id":2312,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2655:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2313,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"2675:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2311,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[503],"referencedDeclaration":503,"src":"2644:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2644:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2315,"nodeType":"ExpressionStatement","src":"2644:37:16"},{"expression":{"arguments":[{"hexValue":"30","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"313030","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2759:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"id":2316,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2740:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2320,"nodeType":"ExpressionStatement","src":"2740:23:16"},{"expression":{"arguments":[{"hexValue":"3330","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2827:7:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},{"hexValue":"313035","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2836:3:16","typeDescriptions":{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"},"value":"105"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"}],"id":2321,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2811:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"2811:29:16"},{"expression":{"arguments":[{"hexValue":"3930","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:7:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},{"hexValue":"313135","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2905:3:16","typeDescriptions":{"typeIdentifier":"t_rational_115_by_1","typeString":"int_const 115"},"value":"115"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},{"typeIdentifier":"t_rational_115_by_1","typeString":"int_const 115"}],"id":2326,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2880:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2880:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"2880:29:16"},{"expression":{"arguments":[{"hexValue":"313830","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2965:8:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},"value":"180"},{"hexValue":"313330","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2975:3:16","typeDescriptions":{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"},"value":"130"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"}],"id":2331,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2949:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"2949:30:16"},{"expression":{"arguments":[{"hexValue":"333635","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3035:8:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},{"hexValue":"313530","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:3:16","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"}],"id":2336,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"3019:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"3019:30:16"}]},"id":2342,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"_omnToken","nameLocation":"2533:9:16","nodeType":"VariableDeclaration","scope":2342,"src":"2525:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"admin","nameLocation":"2552:5:16","nodeType":"VariableDeclaration","scope":2342,"src":"2544:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2524:34:16"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[],"src":"2559:0:16"},"scope":3336,"src":"2513:573:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2358,"nodeType":"Block","src":"3366:64:16","statements":[{"expression":{"arguments":[{"id":2354,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3392:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2355,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3406:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2353,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"3376:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3376:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"3376:47:16"}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"3096:155:16","text":" @notice Adds a new staking tier\n @param lockDuration Duration in seconds\n @param rewardMultiplier Multiplier in basis points"},"functionSelector":"111a9802","id":2359,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2350,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3346:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2351,"kind":"modifierInvocation","modifierName":{"id":2349,"name":"onlyRole","nameLocations":["3337:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3337:8:16"},"nodeType":"ModifierInvocation","src":"3337:28:16"}],"name":"addStakingTier","nameLocation":"3265:14:16","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"lockDuration","nameLocation":"3288:12:16","nodeType":"VariableDeclaration","scope":2359,"src":"3280:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"3310:16:16","nodeType":"VariableDeclaration","scope":2359,"src":"3302:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:48:16"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[],"src":"3366:0:16"},"scope":3336,"src":"3256:174:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2404,"nodeType":"Block","src":"3593:461:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3611:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3631:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3611:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469706c696572206d757374206265206174206c65617374203130302028317829","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3636:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""},"value":"Multiplier must be at least 100 (1x)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""}],"id":2367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3603:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2373,"nodeType":"ExpressionStatement","src":"3603:72:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2375,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"3693:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2377,"indexExpression":{"id":2376,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3706:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3693:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3720:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"3693:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3693:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469657220616c726561647920657869737473","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3743:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8af6920dbd8dace9b924e3584379cca6e3bbcf8cbc394090050ccb643a2dc44","typeString":"literal_string \"Tier already exists\""},"value":"Tier already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8af6920dbd8dace9b924e3584379cca6e3bbcf8cbc394090050ccb643a2dc44","typeString":"literal_string \"Tier already exists\""}],"id":2374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3685:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3685:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"3685:80:16"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2384,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"3784:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2386,"indexExpression":{"id":2385,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3797:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3784:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2388,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3853:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2389,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3897:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2387,"name":"StakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3813:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StakingTier_$2207_storage_ptr_$","typeString":"type(struct OMNStaking.StakingTier storage pointer)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3839:12:16","3879:16:16"],"names":["lockDuration","rewardMultiplier"],"nodeType":"FunctionCall","src":"3813:111:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_memory_ptr","typeString":"struct OMNStaking.StakingTier memory"}},"src":"3784:140:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2392,"nodeType":"ExpressionStatement","src":"3784:140:16"},{"expression":{"arguments":[{"id":2396,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3962:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2393,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3943:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3957:4:16","memberName":"push","nodeType":"MemberAccess","src":"3943:18:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2398,"nodeType":"ExpressionStatement","src":"3943:32:16"},{"eventCall":{"arguments":[{"id":2400,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"4016:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2401,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"4030:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"StakingTierAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3999:16:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"EmitStatement","src":"3994:53:16"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"3440:66:16","text":" @notice Internal function to add a staking tier"},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"_addStakingTier","nameLocation":"3520:15:16","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"lockDuration","nameLocation":"3544:12:16","nodeType":"VariableDeclaration","scope":2405,"src":"3536:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"3566:16:16","nodeType":"VariableDeclaration","scope":2405,"src":"3558:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3535:48:16"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"3593:0:16"},"scope":3336,"src":"3511:543:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"4333:333:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"4351:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4371:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4351:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469706c696572206d757374206265206174206c65617374203130302028317829","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4376:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""},"value":"Multiplier must be at least 100 (1x)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""}],"id":2416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4343:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4343:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2422,"nodeType":"ExpressionStatement","src":"4343:72:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2424,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"4433:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2426,"indexExpression":{"id":2425,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4446:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4433:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4460:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"4433:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4480:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4433:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469657220646f65736e2774206578697374","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4483:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6401960103d2fa1392a37bfffd14a3b1f09d9635831db486f8d0499a3bd7bf3d","typeString":"literal_string \"Tier doesn't exist\""},"value":"Tier doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6401960103d2fa1392a37bfffd14a3b1f09d9635831db486f8d0499a3bd7bf3d","typeString":"literal_string \"Tier doesn't exist\""}],"id":2423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4425:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4425:79:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2432,"nodeType":"ExpressionStatement","src":"4425:79:16"},{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2433,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"4523:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2435,"indexExpression":{"id":2434,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4536:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4523:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4550:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"4523:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2437,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"4569:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4523:62:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2439,"nodeType":"ExpressionStatement","src":"4523:62:16"},{"eventCall":{"arguments":[{"id":2441,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4628:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2442,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"4642:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2440,"name":"StakingTierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4609:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4609:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2444,"nodeType":"EmitStatement","src":"4604:55:16"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"4064:151:16","text":" @notice Updates an existing staking tier\n @param lockDuration Duration to update\n @param rewardMultiplier New multiplier"},"functionSelector":"68a34f98","id":2446,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2413,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4313:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2414,"kind":"modifierInvocation","modifierName":{"id":2412,"name":"onlyRole","nameLocations":["4304:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4304:8:16"},"nodeType":"ModifierInvocation","src":"4304:28:16"}],"name":"updateStakingTier","nameLocation":"4229:17:16","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"lockDuration","nameLocation":"4255:12:16","nodeType":"VariableDeclaration","scope":2446,"src":"4247:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"4277:16:16","nodeType":"VariableDeclaration","scope":2446,"src":"4269:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4246:48:16"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"4333:0:16"},"scope":3336,"src":"4220:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2470,"nodeType":"Block","src":"4887:165:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"4905:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"33303030","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4916:4:16","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},"src":"4905:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50656e616c74792063616e6e6f742065786365656420333025","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4922:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e7a27f7acd8f5c1e4e963e443d19932771da084fb5d63f14ecd97596f09c2bb","typeString":"literal_string \"Penalty cannot exceed 30%\""},"value":"Penalty cannot exceed 30%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e7a27f7acd8f5c1e4e963e443d19932771da084fb5d63f14ecd97596f09c2bb","typeString":"literal_string \"Penalty cannot exceed 30%\""}],"id":2455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4897:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"ExpressionStatement","src":"4897:53:16"},{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"earlyWithdrawalPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4960:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2463,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"4985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4960:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"4960:32:16"},{"eventCall":{"arguments":[{"id":2467,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"5037:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"name":"EarlyWithdrawalPenaltyUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"5007:29:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5007:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2469,"nodeType":"EmitStatement","src":"5002:43:16"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"4676:113:16","text":" @notice Updates the early withdrawal penalty\n @param penalty New penalty in basis points"},"functionSelector":"d1e85a74","id":2471,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2452,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4867:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2453,"kind":"modifierInvocation","modifierName":{"id":2451,"name":"onlyRole","nameLocations":["4858:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4858:8:16"},"nodeType":"ModifierInvocation","src":"4858:28:16"}],"name":"updateEarlyWithdrawalPenalty","nameLocation":"4803:28:16","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"penalty","nameLocation":"4840:7:16","nodeType":"VariableDeclaration","scope":2471,"src":"4832:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"4832:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4831:17:16"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[],"src":"4887:0:16"},"scope":3336,"src":"4794:258:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2577,"nodeType":"Block","src":"5314:1208:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"5332:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5341:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5332:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207374616b652030","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5344:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""},"value":"Cannot stake 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""}],"id":2481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5324:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"5324:37:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"lockDurationIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"5379:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2490,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5399:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5413:6:16","memberName":"length","nodeType":"MemberAccess","src":"5399:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5379:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b206475726174696f6e20696e646578","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5421:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_892947cd1e6af073f7383f242848229f4b6d85ad9a72c2df1d86f29615b53bf2","typeString":"literal_string \"Invalid lock duration index\""},"value":"Invalid lock duration index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_892947cd1e6af073f7383f242848229f4b6d85ad9a72c2df1d86f29615b53bf2","typeString":"literal_string \"Invalid lock duration index\""}],"id":2488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5371:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2495,"nodeType":"ExpressionStatement","src":"5371:80:16"},{"assignments":[2497],"declarations":[{"constant":false,"id":2497,"mutability":"mutable","name":"lockDuration","nameLocation":"5478:12:16","nodeType":"VariableDeclaration","scope":2577,"src":"5470:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"5470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2501,"initialValue":{"baseExpression":{"id":2498,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5493:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2500,"indexExpression":{"id":2499,"name":"lockDurationIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"5507:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5493:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5470:55:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2503,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5586:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2505,"indexExpression":{"id":2504,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5599:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5586:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5613:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"5586:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5586:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b206475726174696f6e","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5635:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_34cde2575d21b3342232171c2bf5d4b01c8c3cf541540008fcb550fe5a739957","typeString":"literal_string \"Invalid lock duration\""},"value":"Invalid lock duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34cde2575d21b3342232171c2bf5d4b01c8c3cf541540008fcb550fe5a739957","typeString":"literal_string \"Invalid lock duration\""}],"id":2502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5578:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5578:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"ExpressionStatement","src":"5578:81:16"},{"expression":{"arguments":[{"expression":{"id":2513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5744:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5748:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5744:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2512,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"5721:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5721:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2516,"nodeType":"ExpressionStatement","src":"5721:34:16"},{"expression":{"arguments":[{"expression":{"id":2520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5837:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5841:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5837:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2524,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5857:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_OMNStaking_$3336","typeString":"contract OMNStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OMNStaking_$3336","typeString":"contract OMNStaking"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5849:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"5849:7:16","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5849:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2526,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"5864:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2517,"name":"omnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5811:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5820:16:16","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":804,"src":"5811:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$730_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2528,"nodeType":"ExpressionStatement","src":"5811:60:16"},{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"endTime","nameLocation":"5926:7:16","nodeType":"VariableDeclaration","scope":2577,"src":"5918:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5918:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2535,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2531,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5936:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5942:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"5936:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2533,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5954:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5936:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5918:48:16"},{"expression":{"arguments":[{"arguments":[{"id":2542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"6036:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2543,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"6070:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2544,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6107:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6113:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"6107:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2546,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6145:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2547,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6187:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"6187:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6226:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2541,"name":"UserStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"6004:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserStake_$2220_storage_ptr_$","typeString":"type(struct OMNStaking.UserStake storage pointer)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6028:6:16","6056:12:16","6096:9:16","6136:7:16","6166:19:16","6216:8:16"],"names":["amount","lockDuration","startTime","endTime","lastRewardClaimTime","unlocked"],"nodeType":"FunctionCall","src":"6004:238:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}],"expression":{"baseExpression":{"id":2536,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5976:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2539,"indexExpression":{"expression":{"id":2537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5987:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5991:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5987:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5976:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5999:4:16","memberName":"push","nodeType":"MemberAccess","src":"5976:27:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_ptr_$_t_struct$_UserStake_$2220_storage_$returns$__$attached_to$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_ptr_$","typeString":"function (struct OMNStaking.UserStake storage ref[] storage pointer,struct OMNStaking.UserStake storage ref)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:267:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2552,"nodeType":"ExpressionStatement","src":"5976:267:16"},{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2553,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6293:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"6308:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6293:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ExpressionStatement","src":"6293:21:16"},{"expression":{"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2557,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"6368:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2560,"indexExpression":{"expression":{"id":2558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6384:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6388:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6384:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6368:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"6399:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2562,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6408:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6399:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6398:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6398:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:74:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"nodeType":"ExpressionStatement","src":"6368:74:16"},{"eventCall":{"arguments":[{"expression":{"id":2570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6473:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6477:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6473:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2572,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"6485:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2573,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"6493:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2574,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6507:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6466:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6466:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"EmitStatement","src":"6461:54:16"}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"5062:167:16","text":" @notice Stakes OMN tokens\n @param amount Amount to stake\n @param lockDurationIndex Index of the lock duration in the lockDurations array"},"functionSelector":"7b0472f0","id":2578,"implemented":true,"kind":"function","modifiers":[{"id":2479,"kind":"modifierInvocation","modifierName":{"id":2478,"name":"nonReentrant","nameLocations":["5301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"5301:12:16"},"nodeType":"ModifierInvocation","src":"5301:12:16"}],"name":"stake","nameLocation":"5243:5:16","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"amount","nameLocation":"5257:6:16","nodeType":"VariableDeclaration","scope":2578,"src":"5249:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"5249:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"lockDurationIndex","nameLocation":"5273:17:16","nodeType":"VariableDeclaration","scope":2578,"src":"5265:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5248:43:16"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"5314:0:16"},"scope":3336,"src":"5234:1288:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2707,"nodeType":"Block","src":"6714:1395:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6732:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2588,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"6745:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2591,"indexExpression":{"expression":{"id":2589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6756:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6760:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6756:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6745:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6768:6:16","memberName":"length","nodeType":"MemberAccess","src":"6745:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6732:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207374616b6520696e646578","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6776:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070","typeString":"literal_string \"Invalid stake index\""},"value":"Invalid stake index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070","typeString":"literal_string \"Invalid stake index\""}],"id":2586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6724:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6724:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"ExpressionStatement","src":"6724:74:16"},{"assignments":[2599],"declarations":[{"constant":false,"id":2599,"mutability":"mutable","name":"userStake","nameLocation":"6835:9:16","nodeType":"VariableDeclaration","scope":2707,"src":"6817:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"UserStake","nameLocations":["6817:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"6817:9:16"},"referencedDeclaration":2220,"src":"6817:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake"}},"visibility":"internal"}],"id":2606,"initialValue":{"baseExpression":{"baseExpression":{"id":2600,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"6847:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2603,"indexExpression":{"expression":{"id":2601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6858:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6862:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6858:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6847:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2605,"indexExpression":{"id":2604,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6870:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6847:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6817:64:16"},{"expression":{"arguments":[{"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6899:19:16","subExpression":{"expression":{"id":2608,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"6900:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6910:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"6900:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616c726561647920756e6c6f636b6564","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6920:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1355e5fe243f4160d8ea945c472a19abb77d0ec6cf1ab09cd26d4c5a6c664660","typeString":"literal_string \"Stake already unlocked\""},"value":"Stake already unlocked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1355e5fe243f4160d8ea945c472a19abb77d0ec6cf1ab09cd26d4c5a6c664660","typeString":"literal_string \"Stake already unlocked\""}],"id":2607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6891:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6891:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"ExpressionStatement","src":"6891:54:16"},{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"amount","nameLocation":"6972:6:16","nodeType":"VariableDeclaration","scope":2707,"src":"6964:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2618,"initialValue":{"expression":{"id":2616,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"6981:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6991:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"6981:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6964:33:16"},{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"penalized","nameLocation":"7012:9:16","nodeType":"VariableDeclaration","scope":2707,"src":"7007:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2619,"name":"bool","nodeType":"ElementaryTypeName","src":"7007:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2622,"initialValue":{"hexValue":"66616c7365","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7024:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"7007:22:16"},{"expression":{"arguments":[{"expression":{"id":2624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7114:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7118:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7114:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2623,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"7091:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7091:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2627,"nodeType":"ExpressionStatement","src":"7091:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2628,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"7190:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7196:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"7190:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2630,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7208:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7218:7:16","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2215,"src":"7208:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7190:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"IfStatement","src":"7186:420:16","trueBody":{"id":2660,"nodeType":"Block","src":"7227:379:16","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"penalty","nameLocation":"7295:7:16","nodeType":"VariableDeclaration","scope":2660,"src":"7287:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2641,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7306:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2636,"name":"earlyWithdrawalPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"7315:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7306:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7305:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7341:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7305:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7287:59:16"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7360:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7369:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2644,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"7378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7369:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7360:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"7360:25:16"},{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2648,"name":"penalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7399:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7411:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7399:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"ExpressionStatement","src":"7399:16:16"},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"7532:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2653,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"7547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"7532:22:16"},{"expression":{"arguments":[{"id":2657,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"7587:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2656,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7568:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7568:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2659,"nodeType":"ExpressionStatement","src":"7568:27:16"}]}},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2662,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7658:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7668:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"7658:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7658:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"nodeType":"ExpressionStatement","src":"7658:25:16"},{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"7733:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":2669,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7748:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7758:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"7748:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7733:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ExpressionStatement","src":"7733:31:16"},{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2673,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"7818:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2676,"indexExpression":{"expression":{"id":2674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7834:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7838:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7834:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7818:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7871:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7875:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7871:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2677,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"7850:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7850:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2681,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7885:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake storage pointer"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7895:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"7885:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7849:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2685,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"7905:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7849:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7848:84:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7935:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7848:91:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7818:121:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"7818:121:16"},{"expression":{"arguments":[{"expression":{"id":2695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8020:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8024:6:16","memberName":"sender","nodeType":"MemberAccess","src":"8020:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2697,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"8032:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2692,"name":"omnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"7998:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8007:12:16","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":777,"src":"7998:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$730_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$730_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2699,"nodeType":"ExpressionStatement","src":"7998:41:16"},{"eventCall":{"arguments":[{"expression":{"id":2701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8072:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8076:6:16","memberName":"sender","nodeType":"MemberAccess","src":"8072:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2703,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"8084:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2704,"name":"penalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"8092:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2700,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"8063:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8063:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"EmitStatement","src":"8058:44:16"}]},"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"6532:118:16","text":" @notice Unstakes tokens for a specific stake\n @param stakeIndex Index of the stake to unstake"},"functionSelector":"2e17de78","id":2708,"implemented":true,"kind":"function","modifiers":[{"id":2584,"kind":"modifierInvocation","modifierName":{"id":2583,"name":"nonReentrant","nameLocations":["6701:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"6701:12:16"},"nodeType":"ModifierInvocation","src":"6701:12:16"}],"name":"unstake","nameLocation":"6664:7:16","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"stakeIndex","nameLocation":"6680:10:16","nodeType":"VariableDeclaration","scope":2708,"src":"6672:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"6672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6671:20:16"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[],"src":"6714:0:16"},"scope":3336,"src":"6655:1454:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2719,"nodeType":"Block","src":"8219:51:16","statements":[{"expression":{"arguments":[{"expression":{"id":2715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8252:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8256:6:16","memberName":"sender","nodeType":"MemberAccess","src":"8252:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2714,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"8229:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8229:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2718,"nodeType":"ExpressionStatement","src":"8229:34:16"}]},"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"8119:49:16","text":" @notice Claims pending rewards"},"functionSelector":"372500ab","id":2720,"implemented":true,"kind":"function","modifiers":[{"id":2712,"kind":"modifierInvocation","modifierName":{"id":2711,"name":"nonReentrant","nameLocations":["8206:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"8206:12:16"},"nodeType":"ModifierInvocation","src":"8206:12:16"}],"name":"claimRewards","nameLocation":"8182:12:16","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[],"src":"8194:2:16"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"8219:0:16"},"scope":3336,"src":"8173:97:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2803,"nodeType":"Block","src":"8444:806:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2727,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8479:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2726,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"8458:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8458:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8488:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8458:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"nodeType":"IfStatement","src":"8454:44:16","trueBody":{"functionReturnParameters":2725,"id":2731,"nodeType":"Return","src":"8491:7:16"}},{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"pending","nameLocation":"8561:7:16","nodeType":"VariableDeclaration","scope":2803,"src":"8553:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"8553:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"id":2736,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8595:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2735,"name":"calculatePendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"8571:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8571:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8553:47:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8633:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8623:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"IfStatement","src":"8619:625:16","trueBody":{"id":2801,"nodeType":"Block","src":"8636:608:16","statements":[{"body":{"id":2774,"nodeType":"Block","src":"8756:165:16","statements":[{"condition":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8778:29:16","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2755,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"8779:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2757,"indexExpression":{"id":2756,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8790:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8779:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2759,"indexExpression":{"id":2758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"8796:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8779:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":2760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8799:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"8779:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"8774:133:16","trueBody":{"id":2772,"nodeType":"Block","src":"8809:98:16","statements":[{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2762,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"8831:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2765,"indexExpression":{"id":2763,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8842:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8831:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2766,"indexExpression":{"id":2764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"8848:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8831:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":2767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8851:19:16","memberName":"lastRewardClaimTime","nodeType":"MemberAccess","referencedDeclaration":2217,"src":"8831:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2768,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"8873:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8879:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"8873:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8831:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2771,"nodeType":"ExpressionStatement","src":"8831:57:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"8722:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2747,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"8726:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2749,"indexExpression":{"id":2748,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8737:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8743:6:16","memberName":"length","nodeType":"MemberAccess","src":"8726:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8722:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"initializationExpression":{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"i","nameLocation":"8715:1:16","nodeType":"VariableDeclaration","scope":2775,"src":"8710:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint","nodeType":"ElementaryTypeName","src":"8710:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2745,"initialValue":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8719:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8710:10:16"},"loopExpression":{"expression":{"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8751:3:16","subExpression":{"id":2752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"8751:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2754,"nodeType":"ExpressionStatement","src":"8751:3:16"},"nodeType":"ForStatement","src":"8705:216:16"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2776,"name":"pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8984:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2778,"indexExpression":{"id":2777,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8999:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8984:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8984:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"8984:24:16"},{"assignments":[2783,null],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"success","nameLocation":"9077:7:16","nodeType":"VariableDeclaration","scope":2801,"src":"9072:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"9072:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2790,"initialValue":{"arguments":[{"hexValue":"","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9116:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2784,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9090:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9095:4:16","memberName":"call","nodeType":"MemberAccess","src":"9090:9:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2786,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"9107:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9090:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9090:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9071:48:16"},{"expression":{"arguments":[{"id":2792,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"9141:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9150:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":2791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9133:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9133:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"9133:39:16"},{"eventCall":{"arguments":[{"id":2797,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9219:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2798,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"9225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2796,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9204:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9204:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2800,"nodeType":"EmitStatement","src":"9199:34:16"}]}}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"8280:104:16","text":" @notice Internal function to update and claim rewards\n @param user User address"},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAndClaimRewards","nameLocation":"8398:22:16","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"user","nameLocation":"8429:4:16","nodeType":"VariableDeclaration","scope":2804,"src":"8421:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"8421:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8420:14:16"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[],"src":"8444:0:16"},"scope":3336,"src":"8389:861:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2921,"nodeType":"Block","src":"9475:1005:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2813,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9510:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2812,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"9489:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9489:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9519:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9489:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2819,"nodeType":"IfStatement","src":"9485:45:16","trueBody":{"expression":{"hexValue":"30","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9529:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2811,"id":2818,"nodeType":"Return","src":"9522:8:16"}},{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"newRewards","nameLocation":"9557:10:16","nodeType":"VariableDeclaration","scope":2921,"src":"9549:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"9549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2834,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2823,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9592:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2822,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"9571:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9571:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2825,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"9600:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9571:55:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9570:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9630:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"9570:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":2830,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"9637:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2832,"indexExpression":{"id":2831,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9653:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9637:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9570:88:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9549:109:16"},{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"adjustedRewards","nameLocation":"9743:15:16","nodeType":"VariableDeclaration","scope":2921,"src":"9735:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"9735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"hexValue":"30","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9761:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9735:27:16"},{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"totalUserStaked","nameLocation":"9780:15:16","nodeType":"VariableDeclaration","scope":2921,"src":"9772:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"9772:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"initialValue":{"arguments":[{"id":2842,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9819:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2841,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"9798:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9798:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9772:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"totalUserStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9847:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9847:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2914,"nodeType":"IfStatement","src":"9843:567:16","trueBody":{"id":2913,"nodeType":"Block","src":"9868:542:16","statements":[{"body":{"id":2911,"nodeType":"Block","src":"9933:467:16","statements":[{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"myStake","nameLocation":"9968:7:16","nodeType":"VariableDeclaration","scope":2911,"src":"9951:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake"},"typeName":{"id":2862,"nodeType":"UserDefinedTypeName","pathNode":{"id":2861,"name":"UserStake","nameLocations":["9951:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"9951:9:16"},"referencedDeclaration":2220,"src":"9951:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake"}},"visibility":"internal"}],"id":2869,"initialValue":{"baseExpression":{"baseExpression":{"id":2864,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9978:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2866,"indexExpression":{"id":2865,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9989:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9978:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2868,"indexExpression":{"id":2867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"9995:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9978:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9951:46:16"},{"condition":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10019:17:16","subExpression":{"expression":{"id":2870,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10020:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":2871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10028:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"10020:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"10015:371:16","trueBody":{"id":2909,"nodeType":"Block","src":"10038:348:16","statements":[{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"stakeShare","nameLocation":"10068:10:16","nodeType":"VariableDeclaration","scope":2909,"src":"10060:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"10060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2882,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2875,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10082:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":2876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10090:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"10082:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10082:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10081:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2880,"name":"totalUserStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"10107:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10081:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10060:62:16"},{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"stakeRewards","nameLocation":"10152:12:16","nodeType":"VariableDeclaration","scope":2909,"src":"10144:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"newRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"10168:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2886,"name":"stakeShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"10181:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10168:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10167:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10195:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10167:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10144:55:16"},{"assignments":[2893],"declarations":[{"constant":false,"id":2893,"mutability":"mutable","name":"multiplier","nameLocation":"10229:10:16","nodeType":"VariableDeclaration","scope":2909,"src":"10221:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10221:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2899,"initialValue":{"expression":{"baseExpression":{"id":2894,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10242:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":2897,"indexExpression":{"expression":{"id":2895,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10255:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":2896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10263:12:16","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"10255:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10242:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10277:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"10242:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10221:72:16"},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"adjustedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10315:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"stakeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"10335:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2902,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"10350:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10335:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10334:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10364:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10334:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"10315:52:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"9899:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2853,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9903:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":2855,"indexExpression":{"id":2854,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9914:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9903:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9920:6:16","memberName":"length","nodeType":"MemberAccess","src":"9903:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9899:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"initializationExpression":{"assignments":[2849],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"i","nameLocation":"9892:1:16","nodeType":"VariableDeclaration","scope":2912,"src":"9887:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint","nodeType":"ElementaryTypeName","src":"9887:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2851,"initialValue":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9896:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9887:10:16"},"loopExpression":{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9928:3:16","subExpression":{"id":2858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"9928:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2860,"nodeType":"ExpressionStatement","src":"9928:3:16"},"nodeType":"ForStatement","src":"9882:518:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2915,"name":"pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"10435:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2917,"indexExpression":{"id":2916,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"10450:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10435:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2918,"name":"adjustedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10458:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10435:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2811,"id":2920,"nodeType":"Return","src":"10428:45:16"}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"9260:133:16","text":" @notice Calculate pending rewards for a user\n @param user User address\n @return Pending rewards in wei"},"functionSelector":"097aad10","id":2922,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePendingRewards","nameLocation":"9407:23:16","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"user","nameLocation":"9439:4:16","nodeType":"VariableDeclaration","scope":2922,"src":"9431:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"9431:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9430:14:16"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"9466:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9466:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9465:9:16"},"scope":3336,"src":"9398:1082:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2942,"nodeType":"Block","src":"10633:101:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10651:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10655:5:16","memberName":"value","nodeType":"MemberAccess","src":"10651:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10663:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10651:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420646973747269627574652030","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10666:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f2f7f75019e44b511c6617e876390a5de68db517927f4e45158e54b93c2c02b","typeString":"literal_string \"Cannot distribute 0\""},"value":"Cannot distribute 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f2f7f75019e44b511c6617e876390a5de68db517927f4e45158e54b93c2c02b","typeString":"literal_string \"Cannot distribute 0\""}],"id":2929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10643:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10643:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2936,"nodeType":"ExpressionStatement","src":"10643:45:16"},{"expression":{"arguments":[{"expression":{"id":2938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10717:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10721:5:16","memberName":"value","nodeType":"MemberAccess","src":"10717:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2937,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"10698:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10698:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2941,"nodeType":"ExpressionStatement","src":"10698:29:16"}]},"documentation":{"id":2923,"nodeType":"StructuredDocumentation","src":"10490:61:16","text":" @notice Distributes ETH rewards to stakers"},"functionSelector":"6f4a2cd0","id":2943,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2926,"name":"FEE_DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"10611:20:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2927,"kind":"modifierInvocation","modifierName":{"id":2925,"name":"onlyRole","nameLocations":["10602:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10602:8:16"},"nodeType":"ModifierInvocation","src":"10602:30:16"}],"name":"distributeRewards","nameLocation":"10565:17:16","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[],"src":"10582:2:16"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[],"src":"10633:0:16"},"scope":3336,"src":"10556:178:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3040,"nodeType":"Block","src":"10910:948:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"10924:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10939:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10924:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3022,"nodeType":"IfStatement","src":"10920:711:16","trueBody":{"id":3021,"nodeType":"Block","src":"10942:689:16","statements":[{"assignments":[2953],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"adminExists","nameLocation":"11005:11:16","nodeType":"VariableDeclaration","scope":3021,"src":"11000:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2952,"name":"bool","nodeType":"ElementaryTypeName","src":"11000:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2955,"initialValue":{"hexValue":"66616c7365","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11019:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"11000:24:16"},{"body":{"id":2993,"nodeType":"Block","src":"11072:318:16","statements":[{"clauses":[{"block":{"id":2987,"nodeType":"Block","src":"11160:163:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"11186:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11203:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"11195:7:16","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11195:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11186:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"nodeType":"IfStatement","src":"11182:123:16","trueBody":{"id":2985,"nodeType":"Block","src":"11207:98:16","statements":[{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"adminExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11233:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11247:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11233:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2983,"nodeType":"ExpressionStatement","src":"11233:18:16"},{"id":2984,"nodeType":"Break","src":"11277:5:16"}]}}]},"errorName":"","id":2988,"nodeType":"TryCatchClause","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"admin","nameLocation":"11153:5:16","nodeType":"VariableDeclaration","scope":2988,"src":"11145:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2971,"name":"address","nodeType":"ElementaryTypeName","src":"11145:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11144:15:16"},"src":"11136:187:16"},{"block":{"id":2990,"nodeType":"Block","src":"11330:46:16","statements":[{"id":2989,"nodeType":"Break","src":"11352:5:16"}]},"errorName":"","id":2991,"nodeType":"TryCatchClause","src":"11324:52:16"}],"externalCall":{"arguments":[{"id":2968,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"11113:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"11133:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11094:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_OMNStaking_$3336","typeString":"contract OMNStaking"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11099:13:16","memberName":"getRoleMember","nodeType":"MemberAccess","referencedDeclaration":440,"src":"11094:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view external returns (address)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11094:41:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2992,"nodeType":"TryStatement","src":"11090:286:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"11058:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:3:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"11058:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2994,"initializationExpression":{"assignments":[2957],"declarations":[{"constant":false,"id":2957,"mutability":"mutable","name":"i","nameLocation":"11051:1:16","nodeType":"VariableDeclaration","scope":2994,"src":"11043:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"11043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11055:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11043:13:16"},"loopExpression":{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11067:3:16","subExpression":{"id":2963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"11067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2965,"nodeType":"ExpressionStatement","src":"11067:3:16"},"nodeType":"ForStatement","src":"11038:352:16"},{"expression":{"arguments":[{"id":2996,"name":"adminExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11411:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2061646d696e20617661696c61626c65","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11424:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cbc6d5546a45b34abb7e26b9262965cf807d6736f7440da609c8a86b8936c2e","typeString":"literal_string \"No admin available\""},"value":"No admin available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cbc6d5546a45b34abb7e26b9262965cf807d6736f7440da609c8a86b8936c2e","typeString":"literal_string \"No admin available\""}],"id":2995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11403:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11403:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"11403:42:16"},{"assignments":[3001,null],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"success","nameLocation":"11465:7:16","nodeType":"VariableDeclaration","scope":3021,"src":"11460:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"11460:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3014,"initialValue":{"arguments":[{"hexValue":"","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11544:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[{"id":3005,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"11500:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3004,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"11486:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11486:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11478:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"11478:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11478:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11524:4:16","memberName":"call","nodeType":"MemberAccess","src":"11478:50:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3010,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11536:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11478:65:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11478:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11459:88:16"},{"expression":{"arguments":[{"id":3016,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11569:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11578:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":3015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11561:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11561:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3019,"nodeType":"ExpressionStatement","src":"11561:39:16"},{"functionReturnParameters":2948,"id":3020,"nodeType":"Return","src":"11614:7:16"}]}},{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3023,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11699:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11730:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11739:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"11730:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11729:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3028,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"11747:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11729:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11699:59:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"nodeType":"ExpressionStatement","src":"11699:59:16"},{"expression":{"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"totalRewardsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"11768:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11795:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11768:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3035,"nodeType":"ExpressionStatement","src":"11768:33:16"},{"eventCall":{"arguments":[{"id":3037,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11844:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3036,"name":"RewardsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"11825:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11825:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"EmitStatement","src":"11820:31:16"}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"10744:108:16","text":" @notice Internal function to distribute rewards\n @param amount Amount to distribute"},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeRewards","nameLocation":"10866:18:16","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"amount","nameLocation":"10893:6:16","nodeType":"VariableDeclaration","scope":3041,"src":"10885:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"10885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10884:16:16"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"10910:0:16"},"scope":3336,"src":"10857:1001:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3088,"nodeType":"Block","src":"12079:243:16","statements":[{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"total","nameLocation":"12097:5:16","nodeType":"VariableDeclaration","scope":3088,"src":"12089:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"12089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3052,"initialValue":{"hexValue":"30","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12089:17:16"},{"body":{"id":3084,"nodeType":"Block","src":"12167:127:16","statements":[{"condition":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12185:29:16","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3066,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12186:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3068,"indexExpression":{"id":3067,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12197:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12186:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3070,"indexExpression":{"id":3069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12203:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12186:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":3071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12206:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"12186:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"IfStatement","src":"12181:103:16","trueBody":{"id":3082,"nodeType":"Block","src":"12216:68:16","statements":[{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3073,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"12234:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3074,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12243:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3076,"indexExpression":{"id":3075,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12254:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12243:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3078,"indexExpression":{"id":3077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12243:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":3079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12263:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"12243:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12234:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"12234:35:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12133:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3058,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12137:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3060,"indexExpression":{"id":3059,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12148:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12137:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12154:6:16","memberName":"length","nodeType":"MemberAccess","src":"12137:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12133:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"initializationExpression":{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"i","nameLocation":"12126:1:16","nodeType":"VariableDeclaration","scope":3085,"src":"12121:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3056,"initialValue":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12130:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12121:10:16"},"loopExpression":{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12162:3:16","subExpression":{"id":3063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12162:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"12162:3:16"},"nodeType":"ForStatement","src":"12116:178:16"},{"expression":{"id":3086,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"12310:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3048,"id":3087,"nodeType":"Return","src":"12303:12:16"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"11868:132:16","text":" @notice Gets the total amount staked by a user\n @param user User address\n @return Total staked amount"},"functionSelector":"0951984d","id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalStakedByUser","nameLocation":"12014:20:16","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"user","nameLocation":"12043:4:16","nodeType":"VariableDeclaration","scope":3089,"src":"12035:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"12035:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12034:14:16"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3089,"src":"12070:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"12070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12069:9:16"},"scope":3336,"src":"12005:317:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3266,"nodeType":"Block","src":"12933:1220:16","statements":[{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"activeCount","nameLocation":"12951:11:16","nodeType":"VariableDeclaration","scope":3266,"src":"12943:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12943:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3113,"initialValue":{"hexValue":"30","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12965:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12943:23:16"},{"body":{"id":3139,"nodeType":"Block","src":"13067:105:16","statements":[{"condition":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13085:29:16","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3127,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13086:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3129,"indexExpression":{"id":3128,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13097:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13086:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3131,"indexExpression":{"id":3130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"13103:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13086:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":3132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13106:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"13086:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3138,"nodeType":"IfStatement","src":"13081:81:16","trueBody":{"id":3137,"nodeType":"Block","src":"13116:46:16","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13134:13:16","subExpression":{"id":3134,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13134:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3136,"nodeType":"ExpressionStatement","src":"13134:13:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"13033:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3119,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13037:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3121,"indexExpression":{"id":3120,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13048:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13037:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13054:6:16","memberName":"length","nodeType":"MemberAccess","src":"13037:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13033:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"initializationExpression":{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"i","nameLocation":"13026:1:16","nodeType":"VariableDeclaration","scope":3140,"src":"13021:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint","nodeType":"ElementaryTypeName","src":"13021:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3117,"initialValue":{"hexValue":"30","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13021:10:16"},"loopExpression":{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13062:3:16","subExpression":{"id":3124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"13062:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"13062:3:16"},"nodeType":"ForStatement","src":"13016:156:16"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3141,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"13219:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3145,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13243:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13229:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"13233:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3143,"nodeType":"ArrayTypeName","src":"13233:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13229:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13219:36:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3148,"nodeType":"ExpressionStatement","src":"13219:36:16"},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"userLockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"13265:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3153,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13299:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13285:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"13289:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ArrayTypeName","src":"13289:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13285:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13265:46:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3156,"nodeType":"ExpressionStatement","src":"13265:46:16"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3157,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"13321:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3161,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13348:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13334:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"13338:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ArrayTypeName","src":"13338:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13334:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13321:39:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3164,"nodeType":"ExpressionStatement","src":"13321:39:16"},{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3165,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"13370:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3169,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13395:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13381:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13385:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ArrayTypeName","src":"13385:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13381:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13370:37:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3172,"nodeType":"ExpressionStatement","src":"13370:37:16"},{"expression":{"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"13417:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3177,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13445:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13431:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"13435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ArrayTypeName","src":"13435:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13431:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13417:40:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3180,"nodeType":"ExpressionStatement","src":"13417:40:16"},{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"index","nameLocation":"13507:5:16","nodeType":"VariableDeclaration","scope":3266,"src":"13499:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"13499:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"hexValue":"30","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13515:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13499:17:16"},{"body":{"id":3257,"nodeType":"Block","src":"13577:485:16","statements":[{"condition":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13595:29:16","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3198,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13596:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3200,"indexExpression":{"id":3199,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13607:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13596:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3202,"indexExpression":{"id":3201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13613:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13596:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"id":3203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13616:8:16","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"13596:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"13591:461:16","trueBody":{"id":3255,"nodeType":"Block","src":"13626:426:16","statements":[{"assignments":[3207],"declarations":[{"constant":false,"id":3207,"mutability":"mutable","name":"userStake","nameLocation":"13661:9:16","nodeType":"VariableDeclaration","scope":3255,"src":"13644:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake"},"typeName":{"id":3206,"nodeType":"UserDefinedTypeName","pathNode":{"id":3205,"name":"UserStake","nameLocations":["13644:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"13644:9:16"},"referencedDeclaration":2220,"src":"13644:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage_ptr","typeString":"struct OMNStaking.UserStake"}},"visibility":"internal"}],"id":3213,"initialValue":{"baseExpression":{"baseExpression":{"id":3208,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13673:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3210,"indexExpression":{"id":3209,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13684:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13673:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3212,"indexExpression":{"id":3211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13690:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13673:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_storage","typeString":"struct OMNStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13644:48:16"},{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3214,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"13710:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3216,"indexExpression":{"id":3215,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13718:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13710:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3217,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"13727:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":3218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13737:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"13727:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13710:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"13710:33:16"},{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3221,"name":"userLockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"13761:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3223,"indexExpression":{"id":3222,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13779:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13761:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3224,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"13788:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":3225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13798:12:16","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"13788:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13761:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"nodeType":"ExpressionStatement","src":"13761:49:16"},{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3228,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"13828:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3230,"indexExpression":{"id":3229,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13839:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13828:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3231,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"13848:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":3232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13858:9:16","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":2213,"src":"13848:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13828:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"13828:39:16"},{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3235,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"13885:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3237,"indexExpression":{"id":3236,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13894:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13885:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3238,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"13903:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":3239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13913:7:16","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2215,"src":"13903:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13885:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"13885:35:16"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3242,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"13938:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3244,"indexExpression":{"id":3243,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13950:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13938:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3245,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13959:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":3248,"indexExpression":{"expression":{"id":3246,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"13972:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$2220_memory_ptr","typeString":"struct OMNStaking.UserStake memory"}},"id":3247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13982:12:16","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"13972:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13959:36:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"id":3249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13996:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"13959:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13938:74:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"13938:74:16"},{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14030:7:16","subExpression":{"id":3252,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14030:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"14030:7:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13543:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3190,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13547:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNStaking.UserStake storage ref[] storage ref)"}},"id":3192,"indexExpression":{"id":3191,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13558:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13547:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$2220_storage_$dyn_storage","typeString":"struct OMNStaking.UserStake storage ref[] storage ref"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13564:6:16","memberName":"length","nodeType":"MemberAccess","src":"13547:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13543:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"initializationExpression":{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"i","nameLocation":"13536:1:16","nodeType":"VariableDeclaration","scope":3258,"src":"13531:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint","nodeType":"ElementaryTypeName","src":"13531:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3188,"initialValue":{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13540:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13531:10:16"},"loopExpression":{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13572:3:16","subExpression":{"id":3195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13572:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3197,"nodeType":"ExpressionStatement","src":"13572:3:16"},"nodeType":"ForStatement","src":"13526:536:16"},{"expression":{"components":[{"id":3259,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"14088:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3260,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14097:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"id":3261,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"14112:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3262,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"14124:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3263,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"14134:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14087:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] storage ref,uint256[] memory,uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3109,"id":3265,"nodeType":"Return","src":"14080:66:16"}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"12332:340:16","text":" @notice Gets all active stakes for a user\n @param user User address\n @return amounts Array of stake amounts\n @return userLockDurations Array of lock durations\n @return startTimes Array of start times\n @return endTimes Array of end times\n @return multipliers Array of reward multipliers"},"functionSelector":"c0d8fd3f","id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"getStakesByUser","nameLocation":"12686:15:16","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"user","nameLocation":"12710:4:16","nodeType":"VariableDeclaration","scope":3267,"src":"12702:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"12702:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12701:14:16"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"amounts","nameLocation":"12765:7:16","nodeType":"VariableDeclaration","scope":3267,"src":"12748:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"12748:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ArrayTypeName","src":"12748:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"userLockDurations","nameLocation":"12799:17:16","nodeType":"VariableDeclaration","scope":3267,"src":"12782:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ArrayTypeName","src":"12782:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"startTimes","nameLocation":"12843:10:16","nodeType":"VariableDeclaration","scope":3267,"src":"12826:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"nodeType":"ArrayTypeName","src":"12826:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"endTimes","nameLocation":"12880:8:16","nodeType":"VariableDeclaration","scope":3267,"src":"12863:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12863:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ArrayTypeName","src":"12863:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"multipliers","nameLocation":"12915:11:16","nodeType":"VariableDeclaration","scope":3267,"src":"12898:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12898:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3107,"nodeType":"ArrayTypeName","src":"12898:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12738:194:16"},"scope":3336,"src":"12677:1476:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3291,"nodeType":"Block","src":"14398:162:16","statements":[{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"totalAmountStaked","nameLocation":"14416:17:16","nodeType":"VariableDeclaration","scope":3291,"src":"14408:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"14408:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"arguments":[{"id":3278,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"14457:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3277,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"14436:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14436:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14408:54:16"},{"expression":{"arguments":[{"id":3288,"name":"totalAmountStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"14535:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3284,"name":"omnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"14497:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$730","typeString":"contract IERC20"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"14489:7:16","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3281,"name":"IOMNToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"14479:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOMNToken_$2184_$","typeString":"type(contract IOMNToken)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14479:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOMNToken_$2184","typeString":"contract IOMNToken"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14508:26:16","memberName":"getDiscountForStakedAmount","nodeType":"MemberAccess","referencedDeclaration":2183,"src":"14479:55:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14479:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3274,"id":3290,"nodeType":"Return","src":"14472:81:16"}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"14163:160:16","text":" @notice Gets the fee discount for a user based on their staked amount\n @param user User address\n @return Discount in basis points"},"functionSelector":"b7fa7cfc","id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeDiscount","nameLocation":"14337:14:16","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"user","nameLocation":"14360:4:16","nodeType":"VariableDeclaration","scope":3292,"src":"14352:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"14352:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14351:14:16"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"14389:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"14389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:9:16"},"scope":3336,"src":"14328:232:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3301,"nodeType":"Block","src":"14754:37:16","statements":[{"expression":{"id":3299,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14771:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3298,"id":3300,"nodeType":"Return","src":"14764:20:16"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"14570:110:16","text":" @notice Gets all available lock durations\n @return Array of lock durations in seconds"},"functionSelector":"76520c6d","id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"getLockDurations","nameLocation":"14694:16:16","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[],"src":"14710:2:16"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"14736:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"14736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ArrayTypeName","src":"14736:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14735:18:16"},"scope":3336,"src":"14685:106:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3325,"nodeType":"Block","src":"15169:128:16","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"tier","nameLocation":"15198:4:16","nodeType":"VariableDeclaration","scope":3325,"src":"15179:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_memory_ptr","typeString":"struct OMNStaking.StakingTier"},"typeName":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"StakingTier","nameLocations":["15179:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2207,"src":"15179:11:16"},"referencedDeclaration":2207,"src":"15179:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage_ptr","typeString":"struct OMNStaking.StakingTier"}},"visibility":"internal"}],"id":3318,"initialValue":{"baseExpression":{"id":3315,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"15205:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$2207_storage_$","typeString":"mapping(uint256 => struct OMNStaking.StakingTier storage ref)"}},"id":3317,"indexExpression":{"id":3316,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"15218:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15205:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_storage","typeString":"struct OMNStaking.StakingTier storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15179:52:16"},{"expression":{"components":[{"expression":{"id":3319,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"15249:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_memory_ptr","typeString":"struct OMNStaking.StakingTier memory"}},"id":3320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15254:12:16","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"15249:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3321,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"15268:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$2207_memory_ptr","typeString":"struct OMNStaking.StakingTier memory"}},"id":3322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15273:16:16","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"15268:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15248:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3311,"id":3324,"nodeType":"Return","src":"15241:49:16"}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"14801:234:16","text":" @notice Gets staking tier info for a specific lock duration\n @param lockDuration Duration in seconds\n @return duration Lock duration in seconds\n @return multiplier Reward multiplier in basis points"},"functionSelector":"b3c6cd76","id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"getStakingTier","nameLocation":"15049:14:16","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"lockDuration","nameLocation":"15072:12:16","nodeType":"VariableDeclaration","scope":3326,"src":"15064:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"15064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15063:22:16"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"duration","nameLocation":"15126:8:16","nodeType":"VariableDeclaration","scope":3326,"src":"15118:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"15118:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"multiplier","nameLocation":"15152:10:16","nodeType":"VariableDeclaration","scope":3326,"src":"15144:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"15144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15108:60:16"},"scope":3336,"src":"15040:257:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3334,"nodeType":"Block","src":"15371:46:16","statements":[{"expression":{"arguments":[{"expression":{"id":3330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15400:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15404:5:16","memberName":"value","nodeType":"MemberAccess","src":"15400:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"15381:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15381:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3333,"nodeType":"ExpressionStatement","src":"15381:29:16"}]},"id":3335,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"15351:2:16"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"15371:0:16"},"scope":3336,"src":"15344:73:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3337,"src":"673:14746:16","usedErrors":[305,308,744,1466],"usedEvents":[317,326,335,2264,2272,2278,2282,2288,2294,2298]}],"src":"50:15370:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dbfddd3caccd2a53122871aff7ff563c92e0fbd49e8bc0eb5db736d6b920dfa364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB REVERT 0xDD EXTCODECOPY 0xAC 0xCD 0x2A MSTORE8 SLT 0x28 PUSH18 0xAFF7FF563C92E0FBD49E8BC0EB5DB736D6B9 KECCAK256 0xDF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1330:11559:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dbfddd3caccd2a53122871aff7ff563c92e0fbd49e8bc0eb5db736d6b920dfa364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB REVERT 0xDD EXTCODECOPY 0xAC 0xCD 0x2A MSTORE8 SLT 0x28 PUSH18 0xAFF7FF563C92E0FBD49E8BC0EB5DB736D6B9 KECCAK256 0xDF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1330:11559:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"contracts/OMNStaking.sol":{"IFeeDistributor":{"abi":[{"inputs":[],"name":"distributeToStakers","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"distributeToStakers()":"42f34f5d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"distributeToStakers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNStaking.sol\":\"IFeeDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNStaking.sol\":{\"keccak256\":\"0x978b84b8b7cbb9d42e23a8e9318c40dcb883f24a40dae10e7ebb2c1e6f980c89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0799d431668987aea99a09a6b93d6a8404b4a743ca3b01951fda53a4a8a34c04\",\"dweb:/ipfs/QmcVqrsBEk6P69MEkTGYBEGiHTwv1ttCJtZsPtscvHvbcZ\"]}},\"version\":1}"},"IOMNToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"name":"getDiscountForStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDiscountForStakedAmount(uint256)":"503c2a80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"getDiscountForStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNStaking.sol\":\"IOMNToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNStaking.sol\":{\"keccak256\":\"0x978b84b8b7cbb9d42e23a8e9318c40dcb883f24a40dae10e7ebb2c1e6f980c89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0799d431668987aea99a09a6b93d6a8404b4a743ca3b01951fda53a4a8a34c04\",\"dweb:/ipfs/QmcVqrsBEk6P69MEkTGYBEGiHTwv1ttCJtZsPtscvHvbcZ\"]}},\"version\":1}"},"OMNStaking":{"abi":[{"inputs":[{"internalType":"address","name":"_omnToken","type":"address"},{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"EarlyWithdrawalPenaltyUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"StakingTierAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"StakingTierUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_DISTRIBUTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accumulatedRewardsPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"addStakingTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"calculatePendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributeRewards","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"earlyWithdrawalPenalty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFeeDiscount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLockDurations","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakesByUser","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"userLockDurations","type":"uint256[]"},{"internalType":"uint256[]","name":"startTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"endTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"multipliers","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"}],"name":"getStakingTier","outputs":[{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getTotalStakedByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lockDurations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"omnToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"lockDurationIndex","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakingTiers","outputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRewardsDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"updateEarlyWithdrawalPenalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"updateStakingTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardDebts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userStakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"lastRewardClaimTime","type":"uint256"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1106,"id":null,"parameterSlots":0,"returnSlots":1},"fun_add":{"entryPoint":1355,"id":1610,"parameterSlots":2,"returnSlots":1},"fun_grantRole":{"entryPoint":1159,"id":256,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":1305,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"linkReferences":{},"object":"60803462000437576200243f601f38829003908101601f19168301906001600160401b038211848310176200043c578084916040948594855283398101031262000437576200004e8262000472565b916200005e602080920162000472565b600160008181556103e8600c55600380546001600160a01b0319166001600160a01b039788161781559195909392620000978162000487565b62000416575b50508280526004808352858585200154620003dd57620000bc62000452565b938085528385019487606496878152838052848752888420925183555191015560058054976801000000000000000092838a1015620003ca57620001068a838b9c01855562000519565b9590805460001980988a1b1b19169055895182815289898201527f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe279a8b91a162278d00808352818952838c8420015462000392576200016462000452565b818152848d8b83019060698252848752858d52862092518355519101558454868110156200037f578b916200019f828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260698b820152a16276a700808352818952838c842001546200039257620001db62000452565b818152848d8b83019060738252848752858d52862092518355519101558454868110156200037f578b9162000216828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260738b820152a162ed4e00808352818952838c8420015462000392576200025262000452565b818152848d8b83019060828252848752858d52862092518355519101558454868110156200037f578b916200028d828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260828b820152a16301e1338098898352818952838c84200154620003485750620002cc62000452565b89815283898201609681528b8552838b528d85209251835551910155835494851015620003355750508289979694926200030d926096979501905562000519565b81939154911b9186831b921b19161790558351928352820152a151611e669081620005d98239f35b634e487b7160e01b825260419052602490fd5b8b5162461bcd60e51b815291820189905260136024830152725469657220616c72656164792065786973747360681b604483015290fd5b634e487b7160e01b845260418352602484fd5b8b5162461bcd60e51b81528083018a905260136024820152725469657220616c72656164792065786973747360681b60448201528a90fd5b634e487b7160e01b815260418552602490fd5b845162461bcd60e51b815290810183905260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b6200042e91858052600285528686209116906200054b565b5038806200009d565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200043c57604052565b51906001600160a01b03821682036200043757565b6001600160a01b031660008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205490919060ff16620005155781805260016020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b5090565b6005548110156200053557600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b91906001830160009082825280602052604082205415600014620005d25784549468010000000000000000861015620005be5760018601808255861015620005aa57836040949596828552602085200155549382526020522055600190565b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b83526041600452602483fd5b5092505056fe608060408181526004918236101561002b575b505050361561002057600080fd5b61002934611b37565b005b600092833560e01c91826301ffc9a7146111f0575081630951984d146111cf578163097aad10146111a25781630cdac96314611167578163111a98021461104d57816317589d2b14611024578163248a9ca314610ffa578163291a3d9e14610fdb5781632e17de7814610dbc5781632f2ff15d14610d5057816331d7a26214610d1857816332298be114610cdf57816336568abe14610c99578163372500ab14610c705781633896218614610c5157816368a34f9814610ba25781636f4a2cd014610aed57816376520c6d14610abc5781637b0472f01461081c578163817b1cd2146107fd5781638686b39a146107c55781639010d07c1461078457816391d148541461073d578163a217fddf14610722578163a3246ad31461067a578163b3c6cd7614610634578163b5d5b5fa146105a9578163b7fa7cfc14610506578163c0d8fd3f1461030a578163ca15c873146102e2578163d1e85a7414610246578163d50267ee14610215578163d547741f146101d2575063ee172546146101b15780610012565b346101ce57816003193601126101ce576020906008549051908152f35b5080fd5b9190503461021157806003193601126102115761020d913561020860016101f7611278565b9383875281602052862001546113b1565b611457565b5080f35b8280fd5b9050346102115760203660031901126102115791828293358252602052206001815491015482519182526020820152f35b9190503461021157602036600319011261021157813591610265611359565b610bb883116102a05750816020917f653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d493600c5551908152a180f35b6020606492519162461bcd60e51b8352820152601960248201527f50656e616c74792063616e6e6f742065786365656420333025000000000000006044820152fd5b9050346102115760203660031901126102115760209282913581526002845220549051908152f35b91905034610211576020806003193601126105025761032761125d565b84926001600160a01b0390911690835b8287526006845281872080548210156103855760056103588360ff9361133d565b5001541615610370575b61036b9061181d565b610337565b9361037d61036b9161181d565b949050610362565b50509091938561039485611d7d565b9061039e86611d7d565b936103a887611d7d565b916103bb6103b589611d7d565b98611d7d565b948196825b8984526006808d528585208054831015610496578d918c60ff8f936103e78760059261133d565b5001541615610403575b505050506103fe9061181d565b6103c0565b92858d9361046e879f60608f8f8f8f8f9a9161043d6103fe9f61048a9f9083858f9761046598610437958e9952522061133d565b506119b1565b9461044a83875192611daf565b528a85019961045b838c5192611daf565b5284015192611daf565b52015192611daf565b525188525260018787200154610484828c611daf565b5261181d565b9890508b8b8e8c6103f1565b6104c8898f8f6104f08e916104e28d8f6104d56104fe976104b5611dc3565b84519b8c9b60a08d5260a08d0190611309565b918b8303908c0152611309565b9188830390890152611309565b908582036060870152611309565b908382036080850152611309565b0390f35b8380fd5b8383346101ce5760209283600319360112610211578361052c61052761125d565b611cda565b600354845162a0785560e71b815293840191909152829060249082906001600160a01b03165afa92831561059e578093610569575b505051908152f35b909192508382813d8311610597575b61058281836116d8565b81010312610594575051908380610561565b80fd5b503d610578565b8251903d90823e3d90fd5b919050346102115780600319360112610211576105c461125d565b6001600160a01b03168352600660205280832080546024359490851015610594575060c0936105f29161133d565b5080549260018201549260028301549060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b9050346102115760203660031901126102115791828293358252602052206020825161065f8161168a565b60018354938483520154918291015282519182526020820152f35b9050823461059457602091826003193601126101ce5792919235815260028352818120908251808584549182815201908194845286842090845b81811061070e57505050816106ca9103826116d8565b83519485948186019282875251809352850193925b8281106106ee57505050500390f35b83516001600160a01b0316855286955093810193928101926001016106df565b8254845292880192600192830192016106b4565b5050346101ce57816003193601126101ce5751908152602090f35b9050346102115781600319360112610211578160209360ff9261075e611278565b90358252600186528282206001600160a01b039091168252855220549151911615158152f35b9050346102115781600319360112610211576020926107af91358152600284528260243591206112f1565b905491519160018060a01b039160031b1c168152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b036107ed61125d565b168152600a845220549051908152f35b5050346101ce57816003193601126101ce576020906007549051908152f35b9050346102115761082c3661128e565b6108379391936117fa565b8315610a8857600554811015610a4557610850906112a4565b90549060031b1c80855260208381526001838720015415610a0b57610874336118ae565b60035483516323b872dd60e01b8382015233602482015230604482015260648082018890528152906001600160a01b031660a0820167ffffffffffffffff8111838210176109f85785526108c89190611792565b6108d28242611752565b9333875260068252838720908451906108ea826116bc565b8782528382018581528683014281526060840190898252608085019242845260a08601968d8852805490600160401b8210156109e557906109309160018201815561133d565b9690966109d3579060059695949392915186555160018601555160028501555160038401555190820155019051151560ff8019835416911617905561097785600754611752565b600755670de0b6b3a764000061098f6009548761175f565b04338752600a82528387205582519485528401528201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a26001815580f35b634e487b7160e01b8e528d865260248efd5b634e487b7160e01b8f526041875260248ffd5b634e487b7160e01b895260418752602489fd5b8360649184519162461bcd60e51b8352820152601560248201527424b73b30b634b2103637b1b590323ab930ba34b7b760591b6044820152fd5b815162461bcd60e51b8152602081850152601b60248201527f496e76616c6964206c6f636b206475726174696f6e20696e64657800000000006044820152606490fd5b815162461bcd60e51b8152602081850152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b5050346101ce57816003193601126101ce576104fe90610ada611dc3565b9051918291602083526020830190611309565b91905082600319360112610211577f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea808452600160205281842033855260205260ff828520541615610b8657503415610b4d5782610b4a34611b37565b80f35b906020606492519162461bcd60e51b83528201526013602482015272043616e6e6f742064697374726962757465203606c1b6044820152fd5b60449291519163e2517d3f60e01b835233908301526024820152fd5b8383346101ce57610bb23661128e565b610bba611359565b610bc760648210156116fa565b818452846020526001838520015415610c19578394827f8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a54689552602052806001848720015582519182526020820152a180f35b825162461bcd60e51b81526020818701526012602482015271151a595c88191bd95cdb89dd08195e1a5cdd60721b6044820152606490fd5b5050346101ce57816003193601126101ce576020906009549051908152f35b8334610594578060031936011261059457610c896117fa565b610c92336118ae565b6001815580f35b8383346101ce57806003193601126101ce57610cb3611278565b90336001600160a01b03831603610cd0575061020d919235611457565b5163334bd91960e11b81528390fd5b9050346102115760203660031901126102115735916005548310156105945750610d0a6020926112a4565b91905490519160031b1c8152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b03610d4061125d565b168152600b845220549051908152f35b9050346102115781600319360112610211573590610d6c611278565b908284526001602052610d84600182862001546113b1565b610d8e82846113d7565b610d96578380f35b9183526002602052908220610db4916001600160a01b031690611509565b503880808380f35b8383346101ce5760209081600319360112610211578335610ddb6117fa565b3384526006835281842054811015610fa257610e00903385526006845282852061133d565b50916005830160ff815416610f66578354938591610e1d336118ae565b60038201544210610f14575b610e66670de0b6b3a764000092610e6f92600160ff19825416179055610e528154600754611577565b600755610e5e33611cda565b905490611577565b6009549061175f565b04338652600a83528386205560018060a01b036003541683519063a9059cbb60e01b84830152336024830152856044830152604482526080820182811067ffffffffffffffff821117610f015785527f4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e94939291610eec91611792565b82519485521515908401523392a26001815580f35b634e487b7160e01b885260418952602488fd5b949150610e6f610e66670de0b6b3a764000092610f41612710610f39600c548861175f565b048096611577565b97610f5c600196610f5481600754611577565b600755611b37565b9250925050610e29565b825162461bcd60e51b8152808701839052601660248201527514dd185ad948185b1c9958591e481d5b9b1bd8dad95960521b6044820152606490fd5b815162461bcd60e51b81528086018490526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b5050346101ce57816003193601126101ce57602090600c549051908152f35b90503461021157602036600319011261021157816020936001923581528285522001549051908152f35b5050346101ce57816003193601126101ce5760035490516001600160a01b039091168152602090f35b8383346101ce5761105d3661128e565b611065611359565b61107260648210156116fa565b818452846020526001838520015461112e57825161108f8161168a565b828152600160208201838152848752876020528587209251835551910155600554600160401b81101561111b577f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe2794955061110b6110f48260018694016005556112a4565b819391549060031b91821b91600019901b19161790565b905582519182526020820152a180f35b634e487b7160e01b855260418652602485fd5b825162461bcd60e51b815260208187015260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b5050346101ce57816003193601126101ce57602090517f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea8152f35b5050346101ce5760203660031901126101ce576020906111c86111c361125d565b6119fc565b9051908152f35b5050346101ce5760203660031901126101ce576020906111c861052761125d565b849134610211576020366003190112610211573563ffffffff60e01b81168091036102115760209250635a05180f60e01b8114908115611232575b5015158152f35b637965db0b60e01b81149150811561124c575b508361122b565b6301ffc9a760e01b14905083611245565b600435906001600160a01b038216820361127357565b600080fd5b602435906001600160a01b038216820361127357565b6040906003190112611273576004359060243590565b6005548110156112db5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112db5760005260206000200190600090565b90815180825260208080930193019160005b828110611329575050505090565b83518552938101939281019260010161131b565b80548210156112db576000526006602060002091020190600090565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16156113935750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600160205260406000203360005260205260ff60406000205416156113935750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146114525780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6114618282611492565b918261146c57505090565b60009182526002602052604090912061148e916001600160a01b03169061159a565b5090565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416600014611452578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9190600183016000908282528060205260408220541560001461157157845494600160401b86101561155d578361154d6110f4886001604098999a018555846112f1565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161158457565b634e487b7160e01b600052601160045260246000fd5b90600182019060009281845282602052604084205490811515600014611683576000199180830181811161166f5782549084820191821161165b57818103611626575b50505080548015611612578201916115f583836112f1565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6116466116366110f493866112f1565b90549060031b1c928392866112f1565b905586528460205260408620553880806115dd565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6040810190811067ffffffffffffffff8211176116a657604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176116a657604052565b90601f8019910116810190811067ffffffffffffffff8211176116a657604052565b1561170157565b60405162461bcd60e51b8152602060048201526024808201527f4d756c7469706c696572206d757374206265206174206c6561737420313030206044820152632831782960e01b6064820152608490fd5b9190820180921161158457565b8181029291811591840414171561158457565b811561177c570490565b634e487b7160e01b600052601260045260246000fd5b906000602091828151910182855af1156117ee576000513d6117e557506001600160a01b0381163b155b6117c35750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156117bc565b6040513d6000823e3d90fd5b60026000541461180b576002600055565b604051633ee5aeb560e01b8152600490fd5b60001981146115845760010190565b3d15611867573d9067ffffffffffffffff82116116a6576040519161185b601f8201601f1916602001846116d8565b82523d6000602084013e565b606090565b1561187357565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6118b781611cda565b156119ae576118c5816119fc565b806118ce575050565b909160005b6001600160a01b038416600081815260066020818152604092839020805486101561194957918594939160ff600561190f886119239a9761133d565b5001541615611928575b505050505061181d565b6118d3565b611938946000525260002061133d565b506004429101553881818080611919565b505050505050919060207ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe916119a560008080808560018060a01b038a16998a8352600b89528260408120555af161199f61182c565b5061186c565b604051908152a2565b50565b906040516119be816116bc565b60a060ff6005839580548552600181015460208601526002810154604086015260038101546060860152600481015460808601520154161515910152565b611a0581611cda565b15611b31579081611a18611a2d93611cda565b670de0b6b3a76400009384916009549061175f565b0460018060a01b03821693600090858252602090600a8252611a556040948585205490611577565b90611a608496611cda565b9182611a7f575b505050600b90611a7c95968352522054611752565b90565b909197845b818652600685528686208054821015611b1c5761043782611aa49261133d565b60a081015115611abe575b50611ab99061181d565b611a84565b80989198518581029080820487149015171561165b57916064611b0e611b1593898f611af7611af18c92611ab99a611772565b8b61175f565b049101518b5260048a5260018c8c2001549061175f565b0490611752565b9790611aaf565b50909850839250611a7c9150600b9050611a67565b50600090565b60075415611baf57670de0b6b3a7640000808202908282041482151715611584577f6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be44291611b94611b8c60209360075490611772565b600954611752565b600955611ba381600854611752565b600855604051908152a1565b6000805b6101008110611c38575b5015611bfe576000805260026020526040600020908154156112db57600080808093611bfc95825260018060a01b036020832054165af161199f61182c565b565b60405162461bcd60e51b81526020600482015260126024820152714e6f2061646d696e20617661696c61626c6560701b6044820152606490fd5b604051632404341f60e21b8152600060048201526024810182905260208082604481305afa9160009183611c9d575b50509015600014611c785750611bbd565b6001600160a01b0316611c9357611c8e9061181d565b611bb3565b5050600138611bbd565b81813d8311611cd3575b611cb181836116d8565b810103126101ce5751906001600160a01b038216820361059457503880611c67565b503d611ca7565b6000805b60018060a01b0383168060005260066020818152604092836000208054861015611d5a576005611d108760ff9361133d565b5001541615611d2c575b50505050611d279061181d565b611cde565b93611d5093819693611d4893611d27976000525260002061133d565b505490611752565b9190388080611d1a565b505050505050905090565b67ffffffffffffffff81116116a65760051b60200190565b90611d8782611d65565b611d9460405191826116d8565b8281528092611da5601f1991611d65565b0190602036910137565b80518210156112db5760209160051b010190565b60405190600554808352826020918282019060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000905b828210611e1657505050611bfc925003836116d8565b855484526001958601958895509381019390910190611e0056fea26469706673582212205de7cbfe987ca968942951ac21d1d5cb41b4365daa403b21e67379ddd239affa64736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x437 JUMPI PUSH3 0x243F PUSH1 0x1F CODESIZE DUP3 SWAP1 SUB SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP5 DUP4 LT OR PUSH3 0x43C JUMPI DUP1 DUP5 SWAP2 PUSH1 0x40 SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x437 JUMPI PUSH3 0x4E DUP3 PUSH3 0x472 JUMP JUMPDEST SWAP2 PUSH3 0x5E PUSH1 0x20 DUP1 SWAP3 ADD PUSH3 0x472 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE PUSH2 0x3E8 PUSH1 0xC SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP2 SWAP6 SWAP1 SWAP4 SWAP3 PUSH3 0x97 DUP2 PUSH3 0x487 JUMP JUMPDEST PUSH3 0x416 JUMPI JUMPDEST POP POP DUP3 DUP1 MSTORE PUSH1 0x4 DUP1 DUP4 MSTORE DUP6 DUP6 DUP6 KECCAK256 ADD SLOAD PUSH3 0x3DD JUMPI PUSH3 0xBC PUSH3 0x452 JUMP JUMPDEST SWAP4 DUP1 DUP6 MSTORE DUP4 DUP6 ADD SWAP5 DUP8 PUSH1 0x64 SWAP7 DUP8 DUP2 MSTORE DUP4 DUP1 MSTORE DUP5 DUP8 MSTORE DUP9 DUP5 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 DUP1 SLOAD SWAP8 PUSH9 0x10000000000000000 SWAP3 DUP4 DUP11 LT ISZERO PUSH3 0x3CA JUMPI PUSH3 0x106 DUP11 DUP4 DUP12 SWAP13 ADD DUP6 SSTORE PUSH3 0x519 JUMP JUMPDEST SWAP6 SWAP1 DUP1 SLOAD PUSH1 0x0 NOT DUP1 SWAP9 DUP11 SHL SHL NOT AND SWAP1 SSTORE DUP10 MLOAD DUP3 DUP2 MSTORE DUP10 DUP10 DUP3 ADD MSTORE PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP11 DUP12 SWAP2 LOG1 PUSH3 0x278D00 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x164 PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x69 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x19F DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x69 DUP12 DUP3 ADD MSTORE LOG1 PUSH3 0x76A700 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x1DB PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x73 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x216 DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x73 DUP12 DUP3 ADD MSTORE LOG1 PUSH3 0xED4E00 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x252 PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x82 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x28D DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x82 DUP12 DUP3 ADD MSTORE LOG1 PUSH4 0x1E13380 SWAP9 DUP10 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x348 JUMPI POP PUSH3 0x2CC PUSH3 0x452 JUMP JUMPDEST DUP10 DUP2 MSTORE DUP4 DUP10 DUP3 ADD PUSH1 0x96 DUP2 MSTORE DUP12 DUP6 MSTORE DUP4 DUP12 MSTORE DUP14 DUP6 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP4 SLOAD SWAP5 DUP6 LT ISZERO PUSH3 0x335 JUMPI POP POP DUP3 DUP10 SWAP8 SWAP7 SWAP5 SWAP3 PUSH3 0x30D SWAP3 PUSH1 0x96 SWAP8 SWAP6 ADD SWAP1 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP2 SHL SWAP2 DUP7 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 MLOAD PUSH2 0x1E66 SWAP1 DUP2 PUSH3 0x5D9 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP4 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP4 ADD MSTORE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP11 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x42E SWAP2 DUP6 DUP1 MSTORE PUSH1 0x2 DUP6 MSTORE DUP7 DUP7 KECCAK256 SWAP2 AND SWAP1 PUSH3 0x54B JUMP JUMPDEST POP CODESIZE DUP1 PUSH3 0x9D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x43C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x437 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x515 JUMPI DUP2 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x535 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH3 0x5D2 JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH3 0x5BE JUMPI PUSH1 0x1 DUP7 ADD DUP1 DUP3 SSTORE DUP7 LT ISZERO PUSH3 0x5AA JUMPI DUP4 PUSH1 0x40 SWAP5 SWAP6 SWAP7 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2B JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH2 0x1B37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F0 JUMPI POP DUP2 PUSH4 0x951984D EQ PUSH2 0x11CF JUMPI DUP2 PUSH4 0x97AAD10 EQ PUSH2 0x11A2 JUMPI DUP2 PUSH4 0xCDAC963 EQ PUSH2 0x1167 JUMPI DUP2 PUSH4 0x111A9802 EQ PUSH2 0x104D JUMPI DUP2 PUSH4 0x17589D2B EQ PUSH2 0x1024 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xFFA JUMPI DUP2 PUSH4 0x291A3D9E EQ PUSH2 0xFDB JUMPI DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0xDBC JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xD50 JUMPI DUP2 PUSH4 0x31D7A262 EQ PUSH2 0xD18 JUMPI DUP2 PUSH4 0x32298BE1 EQ PUSH2 0xCDF JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xC99 JUMPI DUP2 PUSH4 0x372500AB EQ PUSH2 0xC70 JUMPI DUP2 PUSH4 0x38962186 EQ PUSH2 0xC51 JUMPI DUP2 PUSH4 0x68A34F98 EQ PUSH2 0xBA2 JUMPI DUP2 PUSH4 0x6F4A2CD0 EQ PUSH2 0xAED JUMPI DUP2 PUSH4 0x76520C6D EQ PUSH2 0xABC JUMPI DUP2 PUSH4 0x7B0472F0 EQ PUSH2 0x81C JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0x8686B39A EQ PUSH2 0x7C5 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x784 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x73D JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x67A JUMPI DUP2 PUSH4 0xB3C6CD76 EQ PUSH2 0x634 JUMPI DUP2 PUSH4 0xB5D5B5FA EQ PUSH2 0x5A9 JUMPI DUP2 PUSH4 0xB7FA7CFC EQ PUSH2 0x506 JUMPI DUP2 PUSH4 0xC0D8FD3F EQ PUSH2 0x30A JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0xD1E85A74 EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xD50267EE EQ PUSH2 0x215 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xEE172546 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x20D SWAP2 CALLDATALOAD PUSH2 0x208 PUSH1 0x1 PUSH2 0x1F7 PUSH2 0x1278 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x265 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0xBB8 DUP4 GT PUSH2 0x2A0 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x653931A1F8B4E31039939D617FE0C066DC997F98127FD699E126A13766FA64D4 SWAP4 PUSH1 0xC SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50656E616C74792063616E6E6F74206578636565642033302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x502 JUMPI PUSH2 0x327 PUSH2 0x125D JUMP JUMPDEST DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x6 DUP5 MSTORE DUP2 DUP8 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x5 PUSH2 0x358 DUP4 PUSH1 0xFF SWAP4 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x36B SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST SWAP4 PUSH2 0x37D PUSH2 0x36B SWAP2 PUSH2 0x181D JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x362 JUMP JUMPDEST POP POP SWAP1 SWAP2 SWAP4 DUP6 PUSH2 0x394 DUP6 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 PUSH2 0x39E DUP7 PUSH2 0x1D7D JUMP JUMPDEST SWAP4 PUSH2 0x3A8 DUP8 PUSH2 0x1D7D JUMP JUMPDEST SWAP2 PUSH2 0x3BB PUSH2 0x3B5 DUP10 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 PUSH2 0x1D7D JUMP JUMPDEST SWAP5 DUP2 SWAP7 DUP3 JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x6 DUP1 DUP14 MSTORE DUP6 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x496 JUMPI DUP14 SWAP2 DUP13 PUSH1 0xFF DUP16 SWAP4 PUSH2 0x3E7 DUP8 PUSH1 0x5 SWAP3 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x403 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3FE SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST SWAP3 DUP6 DUP14 SWAP4 PUSH2 0x46E DUP8 SWAP16 PUSH1 0x60 DUP16 DUP16 DUP16 DUP16 DUP16 SWAP11 SWAP2 PUSH2 0x43D PUSH2 0x3FE SWAP16 PUSH2 0x48A SWAP16 SWAP1 DUP4 DUP6 DUP16 SWAP8 PUSH2 0x465 SWAP9 PUSH2 0x437 SWAP6 DUP15 SWAP10 MSTORE MSTORE KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP PUSH2 0x19B1 JUMP JUMPDEST SWAP5 PUSH2 0x44A DUP4 DUP8 MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE DUP11 DUP6 ADD SWAP10 PUSH2 0x45B DUP4 DUP13 MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE DUP5 ADD MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE ADD MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE MLOAD DUP9 MSTORE MSTORE PUSH1 0x1 DUP8 DUP8 KECCAK256 ADD SLOAD PUSH2 0x484 DUP3 DUP13 PUSH2 0x1DAF JUMP JUMPDEST MSTORE PUSH2 0x181D JUMP JUMPDEST SWAP9 SWAP1 POP DUP12 DUP12 DUP15 DUP13 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x4C8 DUP10 DUP16 DUP16 PUSH2 0x4F0 DUP15 SWAP2 PUSH2 0x4E2 DUP14 DUP16 PUSH2 0x4D5 PUSH2 0x4FE SWAP8 PUSH2 0x4B5 PUSH2 0x1DC3 JUMP JUMPDEST DUP5 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xA0 DUP14 MSTORE PUSH1 0xA0 DUP14 ADD SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP2 DUP12 DUP4 SUB SWAP1 DUP13 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 PUSH2 0x52C PUSH2 0x527 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH3 0xA07855 PUSH1 0xE7 SHL DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x59E JUMPI DUP1 SWAP4 PUSH2 0x569 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x597 JUMPI JUMPDEST PUSH2 0x582 DUP2 DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x594 JUMPI POP MLOAD SWAP1 DUP4 DUP1 PUSH2 0x561 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x578 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x5C4 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP5 SWAP1 DUP6 LT ISZERO PUSH2 0x594 JUMPI POP PUSH1 0xC0 SWAP4 PUSH2 0x5F2 SWAP2 PUSH2 0x133D JUMP JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP3 MLOAD PUSH2 0x65F DUP2 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x594 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP3 MLOAD DUP1 DUP6 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP5 DUP5 MSTORE DUP7 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x70E JUMPI POP POP POP DUP2 PUSH2 0x6CA SWAP2 SUB DUP3 PUSH2 0x16D8 JUMP JUMPDEST DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x6EE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP9 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x75E PUSH2 0x1278 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7AF SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7ED PUSH2 0x125D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH2 0x82C CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0x837 SWAP4 SWAP2 SWAP4 PUSH2 0x17FA JUMP JUMPDEST DUP4 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH2 0x850 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD ISZERO PUSH2 0xA0B JUMPI PUSH2 0x874 CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x9F8 JUMPI DUP6 MSTORE PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x8D2 DUP3 TIMESTAMP PUSH2 0x1752 JUMP JUMPDEST SWAP4 CALLER DUP8 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP8 KECCAK256 SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x8EA DUP3 PUSH2 0x16BC JUMP JUMPDEST DUP8 DUP3 MSTORE DUP4 DUP3 ADD DUP6 DUP2 MSTORE DUP7 DUP4 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP14 DUP9 MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x9E5 JUMPI SWAP1 PUSH2 0x930 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x133D JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x9D3 JUMPI SWAP1 PUSH1 0x5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x977 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH2 0x98F PUSH1 0x9 SLOAD DUP8 PUSH2 0x175F JUMP JUMPDEST DIV CALLER DUP8 MSTORE PUSH1 0xA DUP3 MSTORE DUP4 DUP8 KECCAK256 SSTORE DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE DUP14 DUP7 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103637B1B590323AB930BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F636B206475726174696F6E20696E6465780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0x4FE SWAP1 PUSH2 0xADA PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP2 SWAP1 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xB86 JUMPI POP CALLVALUE ISZERO PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB4A CALLVALUE PUSH2 0x1B37 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616E6E6F742064697374726962757465203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 SWAP2 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0xBB2 CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x1359 JUMP JUMPDEST PUSH2 0xBC7 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FA JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH2 0xC19 JUMPI DUP4 SWAP5 DUP3 PUSH32 0x8D0FE207EA42D27EEE4D8EDB2E4D91A2B2A3F055C41EC36E19D6E007428A5468 SWAP6 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x594 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x594 JUMPI PUSH2 0xC89 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xC92 CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0xCB3 PUSH2 0x1278 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xCD0 JUMPI POP PUSH2 0x20D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1457 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 SLOAD DUP4 LT ISZERO PUSH2 0x594 JUMPI POP PUSH2 0xD0A PUSH1 0x20 SWAP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD40 PUSH2 0x125D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH2 0xD6C PUSH2 0x1278 JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xD84 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0xD8E DUP3 DUP5 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xD96 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xDB4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1509 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x17FA JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xE00 SWAP1 CALLER DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP SWAP2 PUSH1 0x5 DUP4 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0xF66 JUMPI DUP4 SLOAD SWAP4 DUP6 SWAP2 PUSH2 0xE1D CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xF14 JUMPI JUMPDEST PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xE6F SWAP3 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xE52 DUP2 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xE5E CALLER PUSH2 0x1CDA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP4 DUP7 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP4 MLOAD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF01 JUMPI DUP6 MSTORE PUSH32 0x4416CA74B4C9DD8D6070D91C267A6CF53734C0F343CED0AD02471CCB5417037E SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xEEC SWAP2 PUSH2 0x1792 JUMP JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE ISZERO ISZERO SWAP1 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP5 SWAP2 POP PUSH2 0xE6F PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xF41 PUSH2 0x2710 PUSH2 0xF39 PUSH1 0xC SLOAD DUP9 PUSH2 0x175F JUMP JUMPDEST DIV DUP1 SWAP7 PUSH2 0x1577 JUMP JUMPDEST SWAP8 PUSH2 0xF5C PUSH1 0x1 SWAP7 PUSH2 0xF54 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xE29 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185AD948185B1C9958591E481D5B9B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6E8C2D6CA40D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP3 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0x105D CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0x1065 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x1072 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FA JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD PUSH2 0x112E JUMPI DUP3 MLOAD PUSH2 0x108F DUP2 PUSH2 0x168A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP4 DUP2 MSTORE DUP5 DUP8 MSTORE DUP8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x111B JUMPI PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP5 SWAP6 POP PUSH2 0x110B PUSH2 0x10F4 DUP3 PUSH1 0x1 DUP7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x12A4 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x11C8 PUSH2 0x11C3 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x11C8 PUSH2 0x527 PUSH2 0x125D JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1232 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x124C JUMPI JUMPDEST POP DUP4 PUSH2 0x122B JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1273 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1273 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1329 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x131B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1393 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1393 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1452 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1461 DUP3 DUP3 PUSH2 0x1492 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x146C JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x148E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x159A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1452 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1571 JUMPI DUP5 SLOAD SWAP5 PUSH1 0x1 PUSH1 0x40 SHL DUP7 LT ISZERO PUSH2 0x155D JUMPI DUP4 PUSH2 0x154D PUSH2 0x10F4 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1584 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1683 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x166F JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x165B JUMPI DUP2 DUP2 SUB PUSH2 0x1626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x1612 JUMPI DUP3 ADD SWAP2 PUSH2 0x15F5 DUP4 DUP4 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1646 PUSH2 0x1636 PUSH2 0x10F4 SWAP4 DUP7 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1701 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C696572206D757374206265206174206C656173742031303020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x28317829 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1584 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1584 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x17E5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17C3 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x180B JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1584 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1867 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x185B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1873 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x18B7 DUP2 PUSH2 0x1CDA JUMP JUMPDEST ISZERO PUSH2 0x19AE JUMPI PUSH2 0x18C5 DUP2 PUSH2 0x19FC JUMP JUMPDEST DUP1 PUSH2 0x18CE JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1949 JUMPI SWAP2 DUP6 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x5 PUSH2 0x190F DUP9 PUSH2 0x1923 SWAP11 SWAP8 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1928 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x181D JUMP JUMPDEST PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x1938 SWAP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE CODESIZE DUP2 DUP2 DUP1 DUP1 PUSH2 0x1919 JUMP JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 PUSH1 0x20 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 PUSH2 0x19A5 PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP10 DUP11 DUP4 MSTORE PUSH1 0xB DUP10 MSTORE DUP3 PUSH1 0x40 DUP2 KECCAK256 SSTORE GAS CALL PUSH2 0x199F PUSH2 0x182C JUMP JUMPDEST POP PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19BE DUP2 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A05 DUP2 PUSH2 0x1CDA JUMP JUMPDEST ISZERO PUSH2 0x1B31 JUMPI SWAP1 DUP2 PUSH2 0x1A18 PUSH2 0x1A2D SWAP4 PUSH2 0x1CDA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x1A55 PUSH1 0x40 SWAP5 DUP6 DUP6 KECCAK256 SLOAD SWAP1 PUSH2 0x1577 JUMP JUMPDEST SWAP1 PUSH2 0x1A60 DUP5 SWAP7 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1A7F JUMPI JUMPDEST POP POP POP PUSH1 0xB SWAP1 PUSH2 0x1A7C SWAP6 SWAP7 DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x1752 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP8 DUP5 JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x437 DUP3 PUSH2 0x1AA4 SWAP3 PUSH2 0x133D JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO PUSH2 0x1ABE JUMPI JUMPDEST POP PUSH2 0x1AB9 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST DUP1 SWAP9 SWAP2 SWAP9 MLOAD DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x165B JUMPI SWAP2 PUSH1 0x64 PUSH2 0x1B0E PUSH2 0x1B15 SWAP4 DUP10 DUP16 PUSH2 0x1AF7 PUSH2 0x1AF1 DUP13 SWAP3 PUSH2 0x1AB9 SWAP11 PUSH2 0x1772 JUMP JUMPDEST DUP12 PUSH2 0x175F JUMP JUMPDEST DIV SWAP2 ADD MLOAD DUP12 MSTORE PUSH1 0x4 DUP11 MSTORE PUSH1 0x1 DUP13 DUP13 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP8 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST POP SWAP1 SWAP9 POP DUP4 SWAP3 POP PUSH2 0x1A7C SWAP2 POP PUSH1 0xB SWAP1 POP PUSH2 0x1A67 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1BAF JUMPI PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x1584 JUMPI PUSH32 0x6D1C76D614228B523BAA4DCD9539E2C713B54FF4AB3FF2D1627E7F6CD32BE442 SWAP2 PUSH2 0x1B94 PUSH2 0x1B8C PUSH1 0x20 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1BA3 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x1C38 JUMPI JUMPDEST POP ISZERO PUSH2 0x1BFE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH2 0x1BFC SWAP6 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 KECCAK256 SLOAD AND GAS CALL PUSH2 0x199F PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2061646D696E20617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2404341F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1C9D JUMPI JUMPDEST POP POP SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1C78 JUMPI POP PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C93 JUMPI PUSH2 0x1C8E SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x1BBD JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CD3 JUMPI JUMPDEST PUSH2 0x1CB1 DUP2 DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x594 JUMPI POP CODESIZE DUP1 PUSH2 0x1C67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1D5A JUMPI PUSH1 0x5 PUSH2 0x1D10 DUP8 PUSH1 0xFF SWAP4 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1D2C JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D27 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST SWAP4 PUSH2 0x1D50 SWAP4 DUP2 SWAP7 SWAP4 PUSH2 0x1D48 SWAP4 PUSH2 0x1D27 SWAP8 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x1D1A JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16A6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D87 DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16D8 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1DA5 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D65 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 SWAP2 DUP3 DUP3 ADD SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E16 JUMPI POP POP POP PUSH2 0x1BFC SWAP3 POP SUB DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E00 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xE7 0xCB INVALID SWAP9 PUSH29 0xA968942951AC21D1D5CB41B4365DAA403B21E67379DDD239AFFA64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"673:14746:16:-:0;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;-1:-1:-1;;;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;673:14746:16;;;1965:4;;673:14746;2569:28;673:14746;;-1:-1:-1;;;;;;673:14746:16;-1:-1:-1;;;;;673:14746:16;;;;;;;;-1:-1:-1;;673:14746:16;2865:31:2;673:14746:16;2865:31:2;:::i;:::-;2906:69;;-1:-1:-1;673:14746:16;;;;;3693:12;673:14746;;;;;;;3693:43;673:14746;;;;;:::i;:::-;;;;;3813:111;;;2759:3;;;673:14746;;;;;;;;;;;;;;;;;;;;;3943:13;673:14746;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3999:48;;;;;2827:7;673:14746;;;;;;;;;;3693:43;673:14746;;;;;:::i;:::-;;;;3813:111;;;;;673:14746;2836:3;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2836:3;673:14746;;;;3999:48;2896:7;673:14746;;;;;;;;;;3693:43;673:14746;;;;;:::i;:::-;;;;3813:111;;;;;673:14746;2905:3;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2905:3;673:14746;;;;3999:48;2965:8;673:14746;;;;;;;;;;3693:43;673:14746;;;;;:::i;:::-;;;;3813:111;;;;;673:14746;2975:3;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2975:3;673:14746;;;;3999:48;3035:8;673:14746;;;;;;;;;;;3693:43;673:14746;;;;;;:::i;:::-;;;;3813:111;;;;3045:3;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3045:3;673:14746;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3999:48;673:14746;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;2759:3;;673:14746;2906:69:2;8382:50:15;673:14746:16;;;;2933:12:2;673:14746:16;;;;;;;8382:50:15;;:::i;:::-;;2906:69:2;;;;673:14746:16;-1:-1:-1;673:14746:16;;;;;;-1:-1:-1;673:14746:16;;;;;-1:-1:-1;673:14746:16;;;;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;673:14746:16;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;673:14746:16;2061:21:12;673:14746:16;;;;;;;;;;2061:21:12;;673:14746:16;;;;;;;;2954:6:0;673:14746:16;;;;;;;;;;;;;2954:6:0;673:14746:16;;;;;;;;735:10:10;6370:40:0;;;;;2954:6;6424:11;:::o;6272:217::-;6466:12;;:::o;673:14746:16:-;3943:13;673:14746;;;;;;3943:13;-1:-1:-1;673:14746:16;;-1:-1:-1;673:14746:16;;;-1:-1:-1;673:14746:16;:::o;:::-;;;;;;;;;;;;2241:406:15;;;4360:14;;;-1:-1:-1;673:14746:16;;;;;;;;;;;4360:26:15;2320:321;673:14746:16;;;;;;;;;;;;4360:14:15;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:14:15;2576:11;:::o;673:14746:16:-;-1:-1:-1;;;673:14746:16;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;2320:321:15;-1:-1:-1;2618:12:15;-1:-1:-1;;2618:12:15:o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4701,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21789":{"entryPoint":4728,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":4750,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":4873,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":7549,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":7525,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":5970,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":6002,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":5983,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5495,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":7619,"id":null,"parameterSlots":0,"returnSlots":1},"extract_returndata":{"entryPoint":6188,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5848,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_21787":{"entryPoint":5770,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_21799":{"entryPoint":5820,"id":null,"parameterSlots":1,"returnSlots":0},"fun__revokeRole":{"entryPoint":5207,"id":535,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":5385,"id":1610,"parameterSlots":2,"returnSlots":1},"fun_calculatePendingRewards":{"entryPoint":6652,"id":2922,"parameterSlots":1,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":6034,"id":1099,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":5041,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_21786":{"entryPoint":4953,"id":93,"parameterSlots":0,"returnSlots":0},"fun_distributeRewards":{"entryPoint":6967,"id":3041,"parameterSlots":1,"returnSlots":0},"fun_getTotalStakedByUser":{"entryPoint":7386,"id":3089,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":5079,"id":256,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":6138,"id":1501,"parameterSlots":0,"returnSlots":0},"fun_remove":{"entryPoint":5530,"id":1694,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":5266,"id":294,"parameterSlots":2,"returnSlots":1},"fun_updateAndClaimRewards":{"entryPoint":6318,"id":2804,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":6173,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":7599,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_UserStake":{"entryPoint":6577,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5882,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c7c2":{"entryPoint":6252,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_UserStake_dyn":{"entryPoint":4925,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":4849,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_21788":{"entryPoint":4772,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561002b575b505050361561002057600080fd5b61002934611b37565b005b600092833560e01c91826301ffc9a7146111f0575081630951984d146111cf578163097aad10146111a25781630cdac96314611167578163111a98021461104d57816317589d2b14611024578163248a9ca314610ffa578163291a3d9e14610fdb5781632e17de7814610dbc5781632f2ff15d14610d5057816331d7a26214610d1857816332298be114610cdf57816336568abe14610c99578163372500ab14610c705781633896218614610c5157816368a34f9814610ba25781636f4a2cd014610aed57816376520c6d14610abc5781637b0472f01461081c578163817b1cd2146107fd5781638686b39a146107c55781639010d07c1461078457816391d148541461073d578163a217fddf14610722578163a3246ad31461067a578163b3c6cd7614610634578163b5d5b5fa146105a9578163b7fa7cfc14610506578163c0d8fd3f1461030a578163ca15c873146102e2578163d1e85a7414610246578163d50267ee14610215578163d547741f146101d2575063ee172546146101b15780610012565b346101ce57816003193601126101ce576020906008549051908152f35b5080fd5b9190503461021157806003193601126102115761020d913561020860016101f7611278565b9383875281602052862001546113b1565b611457565b5080f35b8280fd5b9050346102115760203660031901126102115791828293358252602052206001815491015482519182526020820152f35b9190503461021157602036600319011261021157813591610265611359565b610bb883116102a05750816020917f653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d493600c5551908152a180f35b6020606492519162461bcd60e51b8352820152601960248201527f50656e616c74792063616e6e6f742065786365656420333025000000000000006044820152fd5b9050346102115760203660031901126102115760209282913581526002845220549051908152f35b91905034610211576020806003193601126105025761032761125d565b84926001600160a01b0390911690835b8287526006845281872080548210156103855760056103588360ff9361133d565b5001541615610370575b61036b9061181d565b610337565b9361037d61036b9161181d565b949050610362565b50509091938561039485611d7d565b9061039e86611d7d565b936103a887611d7d565b916103bb6103b589611d7d565b98611d7d565b948196825b8984526006808d528585208054831015610496578d918c60ff8f936103e78760059261133d565b5001541615610403575b505050506103fe9061181d565b6103c0565b92858d9361046e879f60608f8f8f8f8f9a9161043d6103fe9f61048a9f9083858f9761046598610437958e9952522061133d565b506119b1565b9461044a83875192611daf565b528a85019961045b838c5192611daf565b5284015192611daf565b52015192611daf565b525188525260018787200154610484828c611daf565b5261181d565b9890508b8b8e8c6103f1565b6104c8898f8f6104f08e916104e28d8f6104d56104fe976104b5611dc3565b84519b8c9b60a08d5260a08d0190611309565b918b8303908c0152611309565b9188830390890152611309565b908582036060870152611309565b908382036080850152611309565b0390f35b8380fd5b8383346101ce5760209283600319360112610211578361052c61052761125d565b611cda565b600354845162a0785560e71b815293840191909152829060249082906001600160a01b03165afa92831561059e578093610569575b505051908152f35b909192508382813d8311610597575b61058281836116d8565b81010312610594575051908380610561565b80fd5b503d610578565b8251903d90823e3d90fd5b919050346102115780600319360112610211576105c461125d565b6001600160a01b03168352600660205280832080546024359490851015610594575060c0936105f29161133d565b5080549260018201549260028301549060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b9050346102115760203660031901126102115791828293358252602052206020825161065f8161168a565b60018354938483520154918291015282519182526020820152f35b9050823461059457602091826003193601126101ce5792919235815260028352818120908251808584549182815201908194845286842090845b81811061070e57505050816106ca9103826116d8565b83519485948186019282875251809352850193925b8281106106ee57505050500390f35b83516001600160a01b0316855286955093810193928101926001016106df565b8254845292880192600192830192016106b4565b5050346101ce57816003193601126101ce5751908152602090f35b9050346102115781600319360112610211578160209360ff9261075e611278565b90358252600186528282206001600160a01b039091168252855220549151911615158152f35b9050346102115781600319360112610211576020926107af91358152600284528260243591206112f1565b905491519160018060a01b039160031b1c168152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b036107ed61125d565b168152600a845220549051908152f35b5050346101ce57816003193601126101ce576020906007549051908152f35b9050346102115761082c3661128e565b6108379391936117fa565b8315610a8857600554811015610a4557610850906112a4565b90549060031b1c80855260208381526001838720015415610a0b57610874336118ae565b60035483516323b872dd60e01b8382015233602482015230604482015260648082018890528152906001600160a01b031660a0820167ffffffffffffffff8111838210176109f85785526108c89190611792565b6108d28242611752565b9333875260068252838720908451906108ea826116bc565b8782528382018581528683014281526060840190898252608085019242845260a08601968d8852805490600160401b8210156109e557906109309160018201815561133d565b9690966109d3579060059695949392915186555160018601555160028501555160038401555190820155019051151560ff8019835416911617905561097785600754611752565b600755670de0b6b3a764000061098f6009548761175f565b04338752600a82528387205582519485528401528201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a26001815580f35b634e487b7160e01b8e528d865260248efd5b634e487b7160e01b8f526041875260248ffd5b634e487b7160e01b895260418752602489fd5b8360649184519162461bcd60e51b8352820152601560248201527424b73b30b634b2103637b1b590323ab930ba34b7b760591b6044820152fd5b815162461bcd60e51b8152602081850152601b60248201527f496e76616c6964206c6f636b206475726174696f6e20696e64657800000000006044820152606490fd5b815162461bcd60e51b8152602081850152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b5050346101ce57816003193601126101ce576104fe90610ada611dc3565b9051918291602083526020830190611309565b91905082600319360112610211577f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea808452600160205281842033855260205260ff828520541615610b8657503415610b4d5782610b4a34611b37565b80f35b906020606492519162461bcd60e51b83528201526013602482015272043616e6e6f742064697374726962757465203606c1b6044820152fd5b60449291519163e2517d3f60e01b835233908301526024820152fd5b8383346101ce57610bb23661128e565b610bba611359565b610bc760648210156116fa565b818452846020526001838520015415610c19578394827f8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a54689552602052806001848720015582519182526020820152a180f35b825162461bcd60e51b81526020818701526012602482015271151a595c88191bd95cdb89dd08195e1a5cdd60721b6044820152606490fd5b5050346101ce57816003193601126101ce576020906009549051908152f35b8334610594578060031936011261059457610c896117fa565b610c92336118ae565b6001815580f35b8383346101ce57806003193601126101ce57610cb3611278565b90336001600160a01b03831603610cd0575061020d919235611457565b5163334bd91960e11b81528390fd5b9050346102115760203660031901126102115735916005548310156105945750610d0a6020926112a4565b91905490519160031b1c8152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b03610d4061125d565b168152600b845220549051908152f35b9050346102115781600319360112610211573590610d6c611278565b908284526001602052610d84600182862001546113b1565b610d8e82846113d7565b610d96578380f35b9183526002602052908220610db4916001600160a01b031690611509565b503880808380f35b8383346101ce5760209081600319360112610211578335610ddb6117fa565b3384526006835281842054811015610fa257610e00903385526006845282852061133d565b50916005830160ff815416610f66578354938591610e1d336118ae565b60038201544210610f14575b610e66670de0b6b3a764000092610e6f92600160ff19825416179055610e528154600754611577565b600755610e5e33611cda565b905490611577565b6009549061175f565b04338652600a83528386205560018060a01b036003541683519063a9059cbb60e01b84830152336024830152856044830152604482526080820182811067ffffffffffffffff821117610f015785527f4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e94939291610eec91611792565b82519485521515908401523392a26001815580f35b634e487b7160e01b885260418952602488fd5b949150610e6f610e66670de0b6b3a764000092610f41612710610f39600c548861175f565b048096611577565b97610f5c600196610f5481600754611577565b600755611b37565b9250925050610e29565b825162461bcd60e51b8152808701839052601660248201527514dd185ad948185b1c9958591e481d5b9b1bd8dad95960521b6044820152606490fd5b815162461bcd60e51b81528086018490526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b5050346101ce57816003193601126101ce57602090600c549051908152f35b90503461021157602036600319011261021157816020936001923581528285522001549051908152f35b5050346101ce57816003193601126101ce5760035490516001600160a01b039091168152602090f35b8383346101ce5761105d3661128e565b611065611359565b61107260648210156116fa565b818452846020526001838520015461112e57825161108f8161168a565b828152600160208201838152848752876020528587209251835551910155600554600160401b81101561111b577f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe2794955061110b6110f48260018694016005556112a4565b819391549060031b91821b91600019901b19161790565b905582519182526020820152a180f35b634e487b7160e01b855260418652602485fd5b825162461bcd60e51b815260208187015260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b5050346101ce57816003193601126101ce57602090517f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea8152f35b5050346101ce5760203660031901126101ce576020906111c86111c361125d565b6119fc565b9051908152f35b5050346101ce5760203660031901126101ce576020906111c861052761125d565b849134610211576020366003190112610211573563ffffffff60e01b81168091036102115760209250635a05180f60e01b8114908115611232575b5015158152f35b637965db0b60e01b81149150811561124c575b508361122b565b6301ffc9a760e01b14905083611245565b600435906001600160a01b038216820361127357565b600080fd5b602435906001600160a01b038216820361127357565b6040906003190112611273576004359060243590565b6005548110156112db5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112db5760005260206000200190600090565b90815180825260208080930193019160005b828110611329575050505090565b83518552938101939281019260010161131b565b80548210156112db576000526006602060002091020190600090565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16156113935750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600160205260406000203360005260205260ff60406000205416156113935750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146114525780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6114618282611492565b918261146c57505090565b60009182526002602052604090912061148e916001600160a01b03169061159a565b5090565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416600014611452578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9190600183016000908282528060205260408220541560001461157157845494600160401b86101561155d578361154d6110f4886001604098999a018555846112f1565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161158457565b634e487b7160e01b600052601160045260246000fd5b90600182019060009281845282602052604084205490811515600014611683576000199180830181811161166f5782549084820191821161165b57818103611626575b50505080548015611612578201916115f583836112f1565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6116466116366110f493866112f1565b90549060031b1c928392866112f1565b905586528460205260408620553880806115dd565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6040810190811067ffffffffffffffff8211176116a657604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176116a657604052565b90601f8019910116810190811067ffffffffffffffff8211176116a657604052565b1561170157565b60405162461bcd60e51b8152602060048201526024808201527f4d756c7469706c696572206d757374206265206174206c6561737420313030206044820152632831782960e01b6064820152608490fd5b9190820180921161158457565b8181029291811591840414171561158457565b811561177c570490565b634e487b7160e01b600052601260045260246000fd5b906000602091828151910182855af1156117ee576000513d6117e557506001600160a01b0381163b155b6117c35750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156117bc565b6040513d6000823e3d90fd5b60026000541461180b576002600055565b604051633ee5aeb560e01b8152600490fd5b60001981146115845760010190565b3d15611867573d9067ffffffffffffffff82116116a6576040519161185b601f8201601f1916602001846116d8565b82523d6000602084013e565b606090565b1561187357565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6118b781611cda565b156119ae576118c5816119fc565b806118ce575050565b909160005b6001600160a01b038416600081815260066020818152604092839020805486101561194957918594939160ff600561190f886119239a9761133d565b5001541615611928575b505050505061181d565b6118d3565b611938946000525260002061133d565b506004429101553881818080611919565b505050505050919060207ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe916119a560008080808560018060a01b038a16998a8352600b89528260408120555af161199f61182c565b5061186c565b604051908152a2565b50565b906040516119be816116bc565b60a060ff6005839580548552600181015460208601526002810154604086015260038101546060860152600481015460808601520154161515910152565b611a0581611cda565b15611b31579081611a18611a2d93611cda565b670de0b6b3a76400009384916009549061175f565b0460018060a01b03821693600090858252602090600a8252611a556040948585205490611577565b90611a608496611cda565b9182611a7f575b505050600b90611a7c95968352522054611752565b90565b909197845b818652600685528686208054821015611b1c5761043782611aa49261133d565b60a081015115611abe575b50611ab99061181d565b611a84565b80989198518581029080820487149015171561165b57916064611b0e611b1593898f611af7611af18c92611ab99a611772565b8b61175f565b049101518b5260048a5260018c8c2001549061175f565b0490611752565b9790611aaf565b50909850839250611a7c9150600b9050611a67565b50600090565b60075415611baf57670de0b6b3a7640000808202908282041482151715611584577f6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be44291611b94611b8c60209360075490611772565b600954611752565b600955611ba381600854611752565b600855604051908152a1565b6000805b6101008110611c38575b5015611bfe576000805260026020526040600020908154156112db57600080808093611bfc95825260018060a01b036020832054165af161199f61182c565b565b60405162461bcd60e51b81526020600482015260126024820152714e6f2061646d696e20617661696c61626c6560701b6044820152606490fd5b604051632404341f60e21b8152600060048201526024810182905260208082604481305afa9160009183611c9d575b50509015600014611c785750611bbd565b6001600160a01b0316611c9357611c8e9061181d565b611bb3565b5050600138611bbd565b81813d8311611cd3575b611cb181836116d8565b810103126101ce5751906001600160a01b038216820361059457503880611c67565b503d611ca7565b6000805b60018060a01b0383168060005260066020818152604092836000208054861015611d5a576005611d108760ff9361133d565b5001541615611d2c575b50505050611d279061181d565b611cde565b93611d5093819693611d4893611d27976000525260002061133d565b505490611752565b9190388080611d1a565b505050505050905090565b67ffffffffffffffff81116116a65760051b60200190565b90611d8782611d65565b611d9460405191826116d8565b8281528092611da5601f1991611d65565b0190602036910137565b80518210156112db5760209160051b010190565b60405190600554808352826020918282019060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000905b828210611e1657505050611bfc925003836116d8565b855484526001958601958895509381019390910190611e0056fea26469706673582212205de7cbfe987ca968942951ac21d1d5cb41b4365daa403b21e67379ddd239affa64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2B JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH2 0x1B37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F0 JUMPI POP DUP2 PUSH4 0x951984D EQ PUSH2 0x11CF JUMPI DUP2 PUSH4 0x97AAD10 EQ PUSH2 0x11A2 JUMPI DUP2 PUSH4 0xCDAC963 EQ PUSH2 0x1167 JUMPI DUP2 PUSH4 0x111A9802 EQ PUSH2 0x104D JUMPI DUP2 PUSH4 0x17589D2B EQ PUSH2 0x1024 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xFFA JUMPI DUP2 PUSH4 0x291A3D9E EQ PUSH2 0xFDB JUMPI DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0xDBC JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xD50 JUMPI DUP2 PUSH4 0x31D7A262 EQ PUSH2 0xD18 JUMPI DUP2 PUSH4 0x32298BE1 EQ PUSH2 0xCDF JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xC99 JUMPI DUP2 PUSH4 0x372500AB EQ PUSH2 0xC70 JUMPI DUP2 PUSH4 0x38962186 EQ PUSH2 0xC51 JUMPI DUP2 PUSH4 0x68A34F98 EQ PUSH2 0xBA2 JUMPI DUP2 PUSH4 0x6F4A2CD0 EQ PUSH2 0xAED JUMPI DUP2 PUSH4 0x76520C6D EQ PUSH2 0xABC JUMPI DUP2 PUSH4 0x7B0472F0 EQ PUSH2 0x81C JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0x8686B39A EQ PUSH2 0x7C5 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x784 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x73D JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x67A JUMPI DUP2 PUSH4 0xB3C6CD76 EQ PUSH2 0x634 JUMPI DUP2 PUSH4 0xB5D5B5FA EQ PUSH2 0x5A9 JUMPI DUP2 PUSH4 0xB7FA7CFC EQ PUSH2 0x506 JUMPI DUP2 PUSH4 0xC0D8FD3F EQ PUSH2 0x30A JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0xD1E85A74 EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xD50267EE EQ PUSH2 0x215 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xEE172546 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x20D SWAP2 CALLDATALOAD PUSH2 0x208 PUSH1 0x1 PUSH2 0x1F7 PUSH2 0x1278 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x265 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0xBB8 DUP4 GT PUSH2 0x2A0 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x653931A1F8B4E31039939D617FE0C066DC997F98127FD699E126A13766FA64D4 SWAP4 PUSH1 0xC SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50656E616C74792063616E6E6F74206578636565642033302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x502 JUMPI PUSH2 0x327 PUSH2 0x125D JUMP JUMPDEST DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x6 DUP5 MSTORE DUP2 DUP8 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x5 PUSH2 0x358 DUP4 PUSH1 0xFF SWAP4 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x36B SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST SWAP4 PUSH2 0x37D PUSH2 0x36B SWAP2 PUSH2 0x181D JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x362 JUMP JUMPDEST POP POP SWAP1 SWAP2 SWAP4 DUP6 PUSH2 0x394 DUP6 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 PUSH2 0x39E DUP7 PUSH2 0x1D7D JUMP JUMPDEST SWAP4 PUSH2 0x3A8 DUP8 PUSH2 0x1D7D JUMP JUMPDEST SWAP2 PUSH2 0x3BB PUSH2 0x3B5 DUP10 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 PUSH2 0x1D7D JUMP JUMPDEST SWAP5 DUP2 SWAP7 DUP3 JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x6 DUP1 DUP14 MSTORE DUP6 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x496 JUMPI DUP14 SWAP2 DUP13 PUSH1 0xFF DUP16 SWAP4 PUSH2 0x3E7 DUP8 PUSH1 0x5 SWAP3 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x403 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3FE SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST SWAP3 DUP6 DUP14 SWAP4 PUSH2 0x46E DUP8 SWAP16 PUSH1 0x60 DUP16 DUP16 DUP16 DUP16 DUP16 SWAP11 SWAP2 PUSH2 0x43D PUSH2 0x3FE SWAP16 PUSH2 0x48A SWAP16 SWAP1 DUP4 DUP6 DUP16 SWAP8 PUSH2 0x465 SWAP9 PUSH2 0x437 SWAP6 DUP15 SWAP10 MSTORE MSTORE KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP PUSH2 0x19B1 JUMP JUMPDEST SWAP5 PUSH2 0x44A DUP4 DUP8 MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE DUP11 DUP6 ADD SWAP10 PUSH2 0x45B DUP4 DUP13 MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE DUP5 ADD MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE ADD MLOAD SWAP3 PUSH2 0x1DAF JUMP JUMPDEST MSTORE MLOAD DUP9 MSTORE MSTORE PUSH1 0x1 DUP8 DUP8 KECCAK256 ADD SLOAD PUSH2 0x484 DUP3 DUP13 PUSH2 0x1DAF JUMP JUMPDEST MSTORE PUSH2 0x181D JUMP JUMPDEST SWAP9 SWAP1 POP DUP12 DUP12 DUP15 DUP13 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x4C8 DUP10 DUP16 DUP16 PUSH2 0x4F0 DUP15 SWAP2 PUSH2 0x4E2 DUP14 DUP16 PUSH2 0x4D5 PUSH2 0x4FE SWAP8 PUSH2 0x4B5 PUSH2 0x1DC3 JUMP JUMPDEST DUP5 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xA0 DUP14 MSTORE PUSH1 0xA0 DUP14 ADD SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP2 DUP12 DUP4 SUB SWAP1 DUP13 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x1309 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 PUSH2 0x52C PUSH2 0x527 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH3 0xA07855 PUSH1 0xE7 SHL DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x59E JUMPI DUP1 SWAP4 PUSH2 0x569 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x597 JUMPI JUMPDEST PUSH2 0x582 DUP2 DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x594 JUMPI POP MLOAD SWAP1 DUP4 DUP1 PUSH2 0x561 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x578 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x5C4 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP5 SWAP1 DUP6 LT ISZERO PUSH2 0x594 JUMPI POP PUSH1 0xC0 SWAP4 PUSH2 0x5F2 SWAP2 PUSH2 0x133D JUMP JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP3 MLOAD PUSH2 0x65F DUP2 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x594 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP3 MLOAD DUP1 DUP6 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP5 DUP5 MSTORE DUP7 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x70E JUMPI POP POP POP DUP2 PUSH2 0x6CA SWAP2 SUB DUP3 PUSH2 0x16D8 JUMP JUMPDEST DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x6EE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP9 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x75E PUSH2 0x1278 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7AF SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7ED PUSH2 0x125D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH2 0x82C CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0x837 SWAP4 SWAP2 SWAP4 PUSH2 0x17FA JUMP JUMPDEST DUP4 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH2 0x850 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD ISZERO PUSH2 0xA0B JUMPI PUSH2 0x874 CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x9F8 JUMPI DUP6 MSTORE PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x8D2 DUP3 TIMESTAMP PUSH2 0x1752 JUMP JUMPDEST SWAP4 CALLER DUP8 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP8 KECCAK256 SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x8EA DUP3 PUSH2 0x16BC JUMP JUMPDEST DUP8 DUP3 MSTORE DUP4 DUP3 ADD DUP6 DUP2 MSTORE DUP7 DUP4 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP14 DUP9 MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x9E5 JUMPI SWAP1 PUSH2 0x930 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x133D JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x9D3 JUMPI SWAP1 PUSH1 0x5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x977 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH2 0x98F PUSH1 0x9 SLOAD DUP8 PUSH2 0x175F JUMP JUMPDEST DIV CALLER DUP8 MSTORE PUSH1 0xA DUP3 MSTORE DUP4 DUP8 KECCAK256 SSTORE DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE DUP14 DUP7 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103637B1B590323AB930BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F636B206475726174696F6E20696E6465780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0x4FE SWAP1 PUSH2 0xADA PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP2 SWAP1 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xB86 JUMPI POP CALLVALUE ISZERO PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB4A CALLVALUE PUSH2 0x1B37 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616E6E6F742064697374726962757465203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 SWAP2 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0xBB2 CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x1359 JUMP JUMPDEST PUSH2 0xBC7 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FA JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH2 0xC19 JUMPI DUP4 SWAP5 DUP3 PUSH32 0x8D0FE207EA42D27EEE4D8EDB2E4D91A2B2A3F055C41EC36E19D6E007428A5468 SWAP6 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x594 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x594 JUMPI PUSH2 0xC89 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xC92 CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0xCB3 PUSH2 0x1278 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xCD0 JUMPI POP PUSH2 0x20D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1457 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 SLOAD DUP4 LT ISZERO PUSH2 0x594 JUMPI POP PUSH2 0xD0A PUSH1 0x20 SWAP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD40 PUSH2 0x125D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH2 0xD6C PUSH2 0x1278 JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xD84 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0xD8E DUP3 DUP5 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xD96 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xDB4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1509 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x17FA JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xE00 SWAP1 CALLER DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP SWAP2 PUSH1 0x5 DUP4 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0xF66 JUMPI DUP4 SLOAD SWAP4 DUP6 SWAP2 PUSH2 0xE1D CALLER PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xF14 JUMPI JUMPDEST PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xE6F SWAP3 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xE52 DUP2 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xE5E CALLER PUSH2 0x1CDA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP4 DUP7 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP4 MLOAD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF01 JUMPI DUP6 MSTORE PUSH32 0x4416CA74B4C9DD8D6070D91C267A6CF53734C0F343CED0AD02471CCB5417037E SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xEEC SWAP2 PUSH2 0x1792 JUMP JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE ISZERO ISZERO SWAP1 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP5 SWAP2 POP PUSH2 0xE6F PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xF41 PUSH2 0x2710 PUSH2 0xF39 PUSH1 0xC SLOAD DUP9 PUSH2 0x175F JUMP JUMPDEST DIV DUP1 SWAP7 PUSH2 0x1577 JUMP JUMPDEST SWAP8 PUSH2 0xF5C PUSH1 0x1 SWAP7 PUSH2 0xF54 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1B37 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xE29 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185AD948185B1C9958591E481D5B9B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6E8C2D6CA40D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP3 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0x105D CALLDATASIZE PUSH2 0x128E JUMP JUMPDEST PUSH2 0x1065 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x1072 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FA JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD PUSH2 0x112E JUMPI DUP3 MLOAD PUSH2 0x108F DUP2 PUSH2 0x168A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP4 DUP2 MSTORE DUP5 DUP8 MSTORE DUP8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x111B JUMPI PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP5 SWAP6 POP PUSH2 0x110B PUSH2 0x10F4 DUP3 PUSH1 0x1 DUP7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x12A4 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x11C8 PUSH2 0x11C3 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x11C8 PUSH2 0x527 PUSH2 0x125D JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1232 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x124C JUMPI JUMPDEST POP DUP4 PUSH2 0x122B JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1273 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1273 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1329 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x131B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1393 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1393 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1452 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1461 DUP3 DUP3 PUSH2 0x1492 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x146C JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x148E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x159A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1452 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1571 JUMPI DUP5 SLOAD SWAP5 PUSH1 0x1 PUSH1 0x40 SHL DUP7 LT ISZERO PUSH2 0x155D JUMPI DUP4 PUSH2 0x154D PUSH2 0x10F4 DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1584 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1683 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x166F JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x165B JUMPI DUP2 DUP2 SUB PUSH2 0x1626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x1612 JUMPI DUP3 ADD SWAP2 PUSH2 0x15F5 DUP4 DUP4 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1646 PUSH2 0x1636 PUSH2 0x10F4 SWAP4 DUP7 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1701 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C696572206D757374206265206174206C656173742031303020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x28317829 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1584 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1584 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x17E5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17C3 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x180B JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1584 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1867 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x185B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1873 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x18B7 DUP2 PUSH2 0x1CDA JUMP JUMPDEST ISZERO PUSH2 0x19AE JUMPI PUSH2 0x18C5 DUP2 PUSH2 0x19FC JUMP JUMPDEST DUP1 PUSH2 0x18CE JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1949 JUMPI SWAP2 DUP6 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x5 PUSH2 0x190F DUP9 PUSH2 0x1923 SWAP11 SWAP8 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1928 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x181D JUMP JUMPDEST PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x1938 SWAP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE CODESIZE DUP2 DUP2 DUP1 DUP1 PUSH2 0x1919 JUMP JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 PUSH1 0x20 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 PUSH2 0x19A5 PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP10 DUP11 DUP4 MSTORE PUSH1 0xB DUP10 MSTORE DUP3 PUSH1 0x40 DUP2 KECCAK256 SSTORE GAS CALL PUSH2 0x199F PUSH2 0x182C JUMP JUMPDEST POP PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19BE DUP2 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A05 DUP2 PUSH2 0x1CDA JUMP JUMPDEST ISZERO PUSH2 0x1B31 JUMPI SWAP1 DUP2 PUSH2 0x1A18 PUSH2 0x1A2D SWAP4 PUSH2 0x1CDA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x1A55 PUSH1 0x40 SWAP5 DUP6 DUP6 KECCAK256 SLOAD SWAP1 PUSH2 0x1577 JUMP JUMPDEST SWAP1 PUSH2 0x1A60 DUP5 SWAP7 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1A7F JUMPI JUMPDEST POP POP POP PUSH1 0xB SWAP1 PUSH2 0x1A7C SWAP6 SWAP7 DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x1752 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP8 DUP5 JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x437 DUP3 PUSH2 0x1AA4 SWAP3 PUSH2 0x133D JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO PUSH2 0x1ABE JUMPI JUMPDEST POP PUSH2 0x1AB9 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST DUP1 SWAP9 SWAP2 SWAP9 MLOAD DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x165B JUMPI SWAP2 PUSH1 0x64 PUSH2 0x1B0E PUSH2 0x1B15 SWAP4 DUP10 DUP16 PUSH2 0x1AF7 PUSH2 0x1AF1 DUP13 SWAP3 PUSH2 0x1AB9 SWAP11 PUSH2 0x1772 JUMP JUMPDEST DUP12 PUSH2 0x175F JUMP JUMPDEST DIV SWAP2 ADD MLOAD DUP12 MSTORE PUSH1 0x4 DUP11 MSTORE PUSH1 0x1 DUP13 DUP13 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x175F JUMP JUMPDEST DIV SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP8 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST POP SWAP1 SWAP9 POP DUP4 SWAP3 POP PUSH2 0x1A7C SWAP2 POP PUSH1 0xB SWAP1 POP PUSH2 0x1A67 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1BAF JUMPI PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x1584 JUMPI PUSH32 0x6D1C76D614228B523BAA4DCD9539E2C713B54FF4AB3FF2D1627E7F6CD32BE442 SWAP2 PUSH2 0x1B94 PUSH2 0x1B8C PUSH1 0x20 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1BA3 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x1C38 JUMPI JUMPDEST POP ISZERO PUSH2 0x1BFE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH2 0x1BFC SWAP6 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 KECCAK256 SLOAD AND GAS CALL PUSH2 0x199F PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2061646D696E20617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2404341F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1C9D JUMPI JUMPDEST POP POP SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1C78 JUMPI POP PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C93 JUMPI PUSH2 0x1C8E SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x1BBD JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CD3 JUMPI JUMPDEST PUSH2 0x1CB1 DUP2 DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x594 JUMPI POP CODESIZE DUP1 PUSH2 0x1C67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1D5A JUMPI PUSH1 0x5 PUSH2 0x1D10 DUP8 PUSH1 0xFF SWAP4 PUSH2 0x133D JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1D2C JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D27 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST SWAP4 PUSH2 0x1D50 SWAP4 DUP2 SWAP7 SWAP4 PUSH2 0x1D48 SWAP4 PUSH2 0x1D27 SWAP8 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133D JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x1D1A JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16A6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D87 DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16D8 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1DA5 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D65 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 SWAP2 DUP3 DUP3 ADD SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E16 JUMPI POP POP POP PUSH2 0x1BFC SWAP3 POP SUB DUP4 PUSH2 0x16D8 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E00 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xE7 0xCB INVALID SWAP9 PUSH29 0xA968942951AC21D1D5CB41B4365DAA403B21E67379DDD239AFFA64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"673:14746:16:-:0;;;;;;;;;;;;;-1:-1:-1;673:14746:16;;;;;;;;;;;15400:9;;;:::i;:::-;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:38;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;673:14746:16;;2475:4:0;673:14746:16;;;:::i;:::-;;;;;;;;;;3901:22:0;673:14746:16;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;673:14746:16;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;;;;;;;1381:51;;673:14746;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;2475:4:0;;;:::i;:::-;4916::16;4905:15;;673:14746;;;;;;5007:38;673:14746;4960:32;673:14746;;;;;5007:38;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;1933:12:2;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12943:23;;-1:-1:-1;;;;;673:14746:16;;;;12943:23;13062:3;673:14746;;;13037:10;673:14746;;;;;;;13033:27;;;;;13086:28;:19;;673:14746;13086:19;;:::i;:::-;:28;;673:14746;;13085:29;13081:81;;13062:3;;;;:::i;:::-;13021:10;;13081:81;13134:13;;13062:3;13134:13;;:::i;:::-;13081:81;;;;;13033:27;;;;;;;13229:26;;;:::i;:::-;13285;;;;:::i;:::-;13334;;;;:::i;:::-;13381;13431;13381;;;:::i;:::-;13431;;:::i;:::-;13499:17;;13531:10;;13572:3;673:14746;;;13037:10;673:14746;;;;;;;;13543:27;;;;;13596:19;;;673:14746;13596:19;;;;13086:28;13596:19;;:::i;:::-;:28;;673:14746;;13595:29;13591:461;;13572:3;;;;;;;;:::i;:::-;13531:10;;13591:461;673:14746;;;;13885:35;673:14746;;13903:17;673:14746;;;;;;;;13572:3;673:14746;14030:7;673:14746;;;;;;13828:39;673:14746;13673:19;673:14746;;;;;;13673:19;:::i;:::-;673:14746;;:::i;:::-;;13710:33;673:14746;;;13710:33;;:::i;:::-;673:14746;13788:22;;;673:14746;13761:49;673:14746;;;13761:49;;:::i;:::-;673:14746;13848:19;;673:14746;13828:39;;:::i;:::-;673:14746;13903:17;673:14746;13885:35;;:::i;:::-;673:14746;;;;;;;;;13959:53;673:14746;13938:74;;;;:::i;:::-;673:14746;14030:7;:::i;:::-;13591:461;;;;;;;;;13543:27;673:14746;13543:27;;;673:14746;13543:27;;673:14746;13543:27;;673:14746;;13543:27;673:14746;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;14436:26;673:14746;;:::i;:::-;14436:26;:::i;:::-;673:14746;;;;-1:-1:-1;;;14479:74:16;;;;;673:14746;;;;;;;;;;-1:-1:-1;;;;;673:14746:16;14479:74;;;;;;;;;;;673:14746;;;;;;;;14479:74;;;;;;;;;;;;;;;;;;:::i;:::-;;;673:14746;;;;;;14479:74;;;;;673:14746;;;14479:74;;;;;;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;673:14746:16;;;1557:49;673:14746;;;;;;;;;;;1557:49;;;;;;673:14746;1557:49;;;;:::i;:::-;673:14746;;;1557:49;673:14746;1557:49;;673:14746;1557:49;;;;673:14746;1557:49;673:14746;1557:49;673:14746;1557:49;;673:14746;1557:49;;;673:14746;1557:49;;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:12:2;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;-1:-1:-1;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:18:15;673:14746:16;;;;1633:12:2;673:14746:16;;;;;;;5016:18:15;:::i;:::-;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;-1:-1:-1;;;;;673:14746:16;;:::i;:::-;;;;1781:50;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;1640:26;673:14746;;;;;;;;;;;;;;;;:::i;:::-;2466:103:12;;;;;:::i;:::-;5332:10:16;;673:14746;;5399:13;673:14746;5379:40;;673:14746;;;5493:32;;;:::i;:::-;673:14746;;;;;;;;;;;;;5586:43;673:14746;;;5586:43;673:14746;5586:47;673:14746;;5744:10;;;:::i;:::-;673:14746;;;;-1:-1:-1;;;1797:53:8;;;;5744:10:16;1797:53:8;;;673:14746:16;5857:4;673:14746;;;;;;;;;;;1797:53:8;;673:14746:16;-1:-1:-1;;;;;673:14746:16;;;;;;;;;;;;;;;1797:53:8;;673:14746:16;1797:53:8;:::i;:::-;5936:30:16;:15;;:30;:::i;:::-;5744:10;;673:14746;;5976:10;673:14746;;;;;;;;;;;;:::i;:::-;;;;6004:238;;;673:14746;;;6004:238;;;5936:15;673:14746;;;6004:238;;673:14746;;;;6004:238;;;5936:15;;673:14746;;;6004:238;;673:14746;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;5586:43;673:14746;;;;;:::i;:::-;;;;;;;5399:13;673:14746;;;;;;;;;;5586:43;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6293:21;673:14746;6293:21;673:14746;6293:21;:::i;:::-;;673:14746;6438:4;6399:35;6408:26;673:14746;6399:35;;:::i;:::-;673:14746;5744:10;673:14746;;6368:15;673:14746;;;;;;;;;;;;;;;;;6466:49;673:14746;5744:10;6466:49;;5586:43;673:14746;;;;;-1:-1:-1;;;673:14746:16;;;;;1797:53:8;673:14746:16;;;-1:-1:-1;;;673:14746:16;;;;;1797:53:8;673:14746:16;;;-1:-1:-1;;;673:14746:16;;;;;1797:53:8;673:14746:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;840:33;673:14746;;;2954:6:0;673:14746:16;;;;;735:10:10;673:14746:16;;;;;;;;;;3519:23:0;3515:108;;10651:9:16;;:13;673:14746;;10651:9;10717;10651;10717;:::i;:::-;673:14746;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;3515:108:0;673:14746:16;;;;3565:47:0;;;;;;735:10:10;3565:47:0;;;673:14746:16;;;;;3565:47:0;673:14746:16;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;4343:72:16;4371:3;4351:23;;;4343:72;:::i;:::-;673:14746;;;;;;4433:43;673:14746;;;4433:43;673:14746;4433:48;673:14746;;;;;4609:50;673:14746;;;;;4433:43;673:14746;;;4523:43;673:14746;;;;;;;;;;4609:50;673:14746;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;4371:3;;673:14746;;;;;;;;;;;;;;;;;1716:41;673:14746;;;;;;;;;;;;;;;;;;;;2466:103:12;;:::i;:::-;8252:10:16;;;:::i;:::-;1857:1:12;673:14746:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;673:14746:16;;5421:34:0;5417:102;;673:14746:16;5529:37:0;673:14746:16;;;5529:37:0;:::i;5417:102::-;673:14746:16;-1:-1:-1;;;5478:30:0;;673:14746:16;;5478:30:0;673:14746:16;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;1475:30;673:14746;1475:30;;;;;;;673:14746;1475:30;;:::i;:::-;673:14746;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;-1:-1:-1;;;;;673:14746:16;;:::i;:::-;;;;1837:49;673:14746;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2475:4:0;673:14746:16;;;;3901:22:0;673:14746:16;2475:4:0;:::i;:::-;2865:31:2;;;;:::i;:::-;2906:69;;673:14746:16;;;2906:69:2;673:14746:16;;;2933:12:2;673:14746:16;;;;;8382:50:15;;-1:-1:-1;;;;;673:14746:16;;8382:50:15;:::i;:::-;;2906:69:2;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;2466:103:12;;:::i;:::-;6756:10:16;673:14746;;6745:10;673:14746;;;;;;6732:42;;673:14746;;;6847:34;6756:10;;673:14746;;6745:10;673:14746;;;;;6847:34;:::i;:::-;6900:18;;;;;673:14746;;;;;;;;7007:22;;6756:10;7114;6756;7114;:::i;:::-;673:14746;7208:17;;673:14746;7190:15;:35;7186:420;;673:14746;7850:51;7935:4;673:14746;7849:82;673:14746;;;;;;;;;;7733:31;673:14746;;7733:31;673:14746;7733:31;:::i;:::-;;673:14746;7850:32;6756:10;7850:32;:::i;:::-;673:14746;;7850:51;;:::i;:::-;7905:26;673:14746;7849:82;;:::i;:::-;673:14746;6756:10;673:14746;;7818:15;673:14746;;;;;;;;;;;;;;;;;;;;1380:43:8;;;;6756:10:16;1380:43:8;;;673:14746:16;;;;;;;1380:43:8;;673:14746:16;;;;;;;;;;;;;;8063:39;;673:14746;;;1380:43:8;;;:::i;:::-;673:14746:16;;;;;;;;;;;6756:10;8063:39;;673:14746;;;;;;-1:-1:-1;;;673:14746:16;;;;;1380:43:8;673:14746:16;;7186:420;673:14746;;;7849:82;7850:51;7935:4;673:14746;7369:16;7341:5;7306:31;7315:22;673:14746;7306:31;;:::i;:::-;673:14746;7369:16;;;:::i;:::-;7399;7587:7;673:14746;;7532:22;673:14746;7532:22;673:14746;7532:22;:::i;:::-;;673:14746;7587:7;:::i;:::-;7186:420;;;;;;;673:14746;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;1925:44;673:14746;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;;;;;;3901:22:0;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;3603:72:16;3631:3;3611:23;;;3603:72;:::i;:::-;673:14746;;;;;;3693:43;673:14746;;;3693:43;673:14746;;;;;;;;:::i;:::-;;;;3693:43;673:14746;3813:111;;673:14746;;;;;;;;;;;;;;;;;;;;3943:13;673:14746;-1:-1:-1;;;673:14746:16;;;;;3999:48;673:14746;;;;;;3693:43;673:14746;;;3943:13;673:14746;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:48;673:14746;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;3631:3;;673:14746;;;;;;;;;;;;;;;;;;840:33;673:14746;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;;837:57:2;;;:97;;;;673:14746:16;;;;;;;837:97:2;-1:-1:-1;;;2673:47:0;;;-1:-1:-1;2673:87:0;;;;837:97:2;;;;;2673:87:0;-1:-1:-1;;;862:40:13;;-1:-1:-1;2673:87:0;;;673:14746:16;;;;-1:-1:-1;;;;;673:14746:16;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;3943:13;673:14746;;;;;;3943:13;-1:-1:-1;673:14746:16;;;;-1:-1:-1;673:14746:16;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;673:14746:16;;-1:-1:-1;673:14746:16;;;-1:-1:-1;673:14746:16;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;673:14746:16;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;673:14746:16;;;-1:-1:-1;673:14746:16;;;;;-1:-1:-1;673:14746:16;:::o;3199:103:0:-;735:10:10;673:14746:16;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;673:14746:16;;;;3565:47:0;;;;;;735:10:10;3565:47:0;;;673:14746:16;;;;;3565:47:0;3199:103;673:14746:16;-1:-1:-1;673:14746:16;2954:6:0;673:14746:16;;;-1:-1:-1;673:14746:16;735:10:10;-1:-1:-1;673:14746:16;;;;;-1:-1:-1;673:14746:16;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;-1:-1:-1;673:14746:16;;;;2954:6:0;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;673:14746:16;;;;;;2954:6:0;673:14746:16;;;;;;;;;;;;;2954:6:0;673:14746:16;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;2954:6;6424:11;:::o;6272:217::-;6466:12;;;:::o;3108:262:2:-;3226:32;;;;:::i;:::-;3268:72;;;;3349:14;;3108:262;:::o;3268:72::-;-1:-1:-1;673:14746:16;;;3295:12:2;673:14746:16;;;;;;8703:53:15;;-1:-1:-1;;;;;673:14746:16;;8703:53:15;:::i;:::-;;3108:262:2;:::o;6730:317:0:-;;-1:-1:-1;673:14746:16;;;;2954:6:0;673:14746:16;;;;;;;;;;;;;;;;;;;;;;;;6824:217:0;673:14746:16;;;;;;2954:6:0;673:14746:16;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;2954:6;6976:11;:::o;2241:406:15:-;;;4360:14;;;-1:-1:-1;673:14746:16;;;;;;;;;;;4360:26:15;2320:321;673:14746:16;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;4360:14:15;673:14746:16;;;;;;;;;:::i;:::-;;;;;;;;;;;4360:14:15;2576:11;:::o;673:14746:16:-;-1:-1:-1;;;673:14746:16;;;;;;;;2320:321:15;-1:-1:-1;2618:12:15;-1:-1:-1;;2618:12:15:o;673:14746:16:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2815:1368:15;;3010:14;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;3046:13:15;;;;3042:1135;3046:13;;;-1:-1:-1;;673:14746:16;;;;;;;;;;;;;;;;;;;;3521:23:15;;;3517:378;;3042:1135;673:14746:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3010:14:15;4112:11;:::o;673:14746:16:-;-1:-1:-1;;;673:14746:16;;;;;;;;3517:378:15;673:14746:16;3584:22:15;3705:23;3584:22;;;:::i;:::-;673:14746:16;;;;;;3705:23:15;;;;;:::i;673:14746:16:-;;;;;;;;;;;;3517:378:15;;;;;673:14746:16;-1:-1:-1;;;673:14746:16;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;3042:1135:15;4154:12;;;;;:::o;673:14746:16:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;7738:720:8;;-1:-1:-1;7875:421:8;7738:720;7875:421;;;;;;;;;;;;-1:-1:-1;7875:421:8;;8310:15;;-1:-1:-1;;;;;;673:14746:16;;8328:26:8;:31;8310:68;8306:146;;7738:720;:::o;8306:146::-;673:14746:16;;-1:-1:-1;;;8401:40:8;;-1:-1:-1;;;;;673:14746:16;;;8401:40:8;;;673:14746:16;;;8401:40:8;8310:68;8377:1;8362:16;;8310:68;;7875:421;;;;-1:-1:-1;7875:421:8;;;;;2575:307:12;1899:1;2702:7;673:14746:16;2702:18:12;2698:86;;1899:1;2702:7;673:14746:16;2575:307:12:o;2698:86::-;673:14746:16;;-1:-1:-1;;;2743:30:12;;;;;673:14746:16;-1:-1:-1;;673:14746:16;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;673:14746:16;;;;;:::i;:::-;;;;-1:-1:-1;673:14746:16;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;673:14746:16;;;;;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;8389:861;8458:26;;;:::i;:::-;:31;8454:44;;8571:29;;;:::i;:::-;8623:11;8619:625;;8389:861;;:::o;8619:625::-;8710:10;;8488:1;8751:3;-1:-1:-1;;;;;673:14746:16;;8488:1;673:14746;;;8726:10;673:14746;;;;;;;;;;;8722:27;;;;;8779:19;;;;;673:14746;8779:28;:19;;8751:3;8779:19;;;:::i;:::-;:28;;673:14746;;8778:29;8774:133;;8751:3;;;;;;;:::i;:::-;8710:10;;8774:133;8831:19;673:14746;8488:1;673:14746;;8488:1;673:14746;8831:19;:::i;:::-;8873:15;8831:39;8873:15;8831:39;;673:14746;8774:133;;;;;;;8722:27;;;;;;;;;673:14746;9204:29;8722:27;9133:39;8488:1;673:14746;;;;;;;;;;;;;;;8984:14;673:14746;;;;;;;9090:29;;;;:::i;:::-;;9133:39;:::i;:::-;673:14746;;;;;9204:29;8389:861::o;8454:44::-;8491:7;:::o;673:14746::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9398:1082::-;9489:26;;;:::i;:::-;:31;9485:45;;9571:26;;;:55;:26;;:::i;:::-;9630:4;673:14746;;;9600:26;673:14746;9571:55;;:::i;:::-;673:14746;;;;;;;;9519:1;;673:14746;;;;;;9637:15;673:14746;;9570:88;673:14746;;;;;;9570:88;;:::i;:::-;9735:27;9798:26;9735:27;9798:26;;:::i;:::-;9847:19;;9843:567;;9398:1082;673:14746;;;10435:14;673:14746;10435:38;673:14746;;;;;;;10435:38;:::i;:::-;9398:1082;:::o;9843:567::-;9887:10;;;;9928:3;673:14746;;;9903:10;673:14746;;;;;;;9899:27;;;;;9978:19;;673:14746;9978:19;;:::i;673:14746::-;;10020:16;;673:14746;;10015:371;;9928:3;;;;;:::i;:::-;9887:10;;10015:371;673:14746;;;;;;;;;;;;;;;;;;;;10081:41;10364:3;10335:25;10315:52;10081:41;;;10168:23;10081:41;;;9928:3;10081:41;;:::i;:::-;10168:23;;:::i;:::-;673:14746;10255:20;;673:14746;;;10242:12;673:14746;;;;;;10242:51;673:14746;10335:25;;:::i;:::-;673:14746;10315:52;;:::i;:::-;10015:371;;;;9899:27;-1:-1:-1;9899:27:16;;-1:-1:-1;9899:27:16;;-1:-1:-1;10435:38:16;;-1:-1:-1;10435:14:16;;-1:-1:-1;9843:567:16;;9485:45;9522:8;9519:1;9522:8;:::o;10857:1001::-;10924:11;673:14746;10924:16;10920:711;;11739:4;673:14746;;;;;;;;;;;;;;11825:26;673:14746;11699:59;11729:29;673:14746;;10924:11;673:14746;11729:29;;:::i;:::-;11699:59;673:14746;11699:59;:::i;:::-;;673:14746;11768:33;673:14746;11768:33;673:14746;11768:33;:::i;:::-;;673:14746;;;;;;11825:26;10857:1001::o;10920:711::-;-1:-1:-1;11043:13:16;11058:7;11062:3;11058:7;;;;11038:352;673:14746;;;;-1:-1:-1;673:14746:16;;1633:12:2;11094:41:16;673:14746;;-1:-1:-1;673:14746:16;;;;;;;-1:-1:-1;673:14746:16;;;;11561:39;673:14746;;;;;;;;11094:41;673:14746;;;;11478:69;;;;:::i;11561:39::-;11614:7::o;673:14746::-;;;-1:-1:-1;;;673:14746:16;;11094:41;;673:14746;;;;;;;;-1:-1:-1;;;673:14746:16;;;;;;;11067:3;673:14746;;-1:-1:-1;;;11094:41:16;;-1:-1:-1;11094:41:16;;;673:14746;;;;;;;11094:41;;673:14746;;;11094:4;:41;;;-1:-1:-1;;11094:41:16;;;11067:3;11090:286;;;;;;;;11352:5;;;11090:286;-1:-1:-1;;;;;673:14746:16;11182:123;;11067:3;11090:286;11067:3;:::i;:::-;11043:13;;11182:123;11233:18;;673:14746;11277:5;;;11094:41;;;;;;;;;;;;;:::i;:::-;;;673:14746;;;;;;-1:-1:-1;;;;;673:14746:16;;;;;;11094:41;;;;;;;;;;12005:317;12105:1;12121:10;12162:3;673:14746;;;;;;;;12105:1;673:14746;12137:10;673:14746;;;;;;;12105:1;673:14746;;;12133:27;;;;;12186:28;:19;;673:14746;12186:19;;:::i;:::-;:28;;673:14746;;12185:29;12181:103;;12162:3;;;;;;;;:::i;:::-;12121:10;;12181:103;673:14746;12234:35;673:14746;;;;12243:19;673:14746;12162:3;673:14746;12105:1;673:14746;;12105:1;673:14746;12243:19;:::i;:::-;673:14746;;12234:35;;:::i;:::-;12181:103;;;;;;;12133:27;;;;;;;;;12005:317;:::o;673:14746::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;14771:13;673:14746;;;;;;;;;;;14771:13;-1:-1:-1;673:14746:16;;;-1:-1:-1;673:14746:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;673:14746:16;;;;;;;;;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","FEE_DISTRIBUTOR_ROLE()":"0cdac963","accumulatedRewardsPerToken()":"38962186","addStakingTier(uint256,uint256)":"111a9802","calculatePendingRewards(address)":"097aad10","claimRewards()":"372500ab","distributeRewards()":"6f4a2cd0","earlyWithdrawalPenalty()":"291a3d9e","getFeeDiscount(address)":"b7fa7cfc","getLockDurations()":"76520c6d","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","getStakesByUser(address)":"c0d8fd3f","getStakingTier(uint256)":"b3c6cd76","getTotalStakedByUser(address)":"0951984d","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","lockDurations(uint256)":"32298be1","omnToken()":"17589d2b","pendingRewards(address)":"31d7a262","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","stake(uint256,uint256)":"7b0472f0","stakingTiers(uint256)":"d50267ee","supportsInterface(bytes4)":"01ffc9a7","totalRewardsDistributed()":"ee172546","totalStaked()":"817b1cd2","unstake(uint256)":"2e17de78","updateEarlyWithdrawalPenalty(uint256)":"d1e85a74","updateStakingTier(uint256,uint256)":"68a34f98","userRewardDebts(address)":"8686b39a","userStakes(address,uint256)":"b5d5b5fa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_omnToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"EarlyWithdrawalPenaltyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"StakingTierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"StakingTierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedRewardsPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"addStakingTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculatePendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFeeDiscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockDurations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakesByUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"userLockDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"multipliers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"}],\"name\":\"getStakingTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omnToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDurationIndex\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"updateEarlyWithdrawalPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateStakingTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardDebts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addStakingTier(uint256,uint256)\":{\"params\":{\"lockDuration\":\"Duration in seconds\",\"rewardMultiplier\":\"Multiplier in basis points\"}},\"calculatePendingRewards(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Pending rewards in wei\"}},\"getFeeDiscount(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Discount in basis points\"}},\"getLockDurations()\":{\"returns\":{\"_0\":\"Array of lock durations in seconds\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"getStakesByUser(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"amounts\":\"Array of stake amounts\",\"endTimes\":\"Array of end times\",\"multipliers\":\"Array of reward multipliers\",\"startTimes\":\"Array of start times\",\"userLockDurations\":\"Array of lock durations\"}},\"getStakingTier(uint256)\":{\"params\":{\"lockDuration\":\"Duration in seconds\"},\"returns\":{\"duration\":\"Lock duration in seconds\",\"multiplier\":\"Reward multiplier in basis points\"}},\"getTotalStakedByUser(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Total staked amount\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"stake(uint256,uint256)\":{\"params\":{\"amount\":\"Amount to stake\",\"lockDurationIndex\":\"Index of the lock duration in the lockDurations array\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstake(uint256)\":{\"params\":{\"stakeIndex\":\"Index of the stake to unstake\"}},\"updateEarlyWithdrawalPenalty(uint256)\":{\"params\":{\"penalty\":\"New penalty in basis points\"}},\"updateStakingTier(uint256,uint256)\":{\"params\":{\"lockDuration\":\"Duration to update\",\"rewardMultiplier\":\"New multiplier\"}}},\"title\":\"OMN Staking Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStakingTier(uint256,uint256)\":{\"notice\":\"Adds a new staking tier\"},\"calculatePendingRewards(address)\":{\"notice\":\"Calculate pending rewards for a user\"},\"claimRewards()\":{\"notice\":\"Claims pending rewards\"},\"distributeRewards()\":{\"notice\":\"Distributes ETH rewards to stakers\"},\"getFeeDiscount(address)\":{\"notice\":\"Gets the fee discount for a user based on their staked amount\"},\"getLockDurations()\":{\"notice\":\"Gets all available lock durations\"},\"getStakesByUser(address)\":{\"notice\":\"Gets all active stakes for a user\"},\"getStakingTier(uint256)\":{\"notice\":\"Gets staking tier info for a specific lock duration\"},\"getTotalStakedByUser(address)\":{\"notice\":\"Gets the total amount staked by a user\"},\"stake(uint256,uint256)\":{\"notice\":\"Stakes OMN tokens\"},\"unstake(uint256)\":{\"notice\":\"Unstakes tokens for a specific stake\"},\"updateEarlyWithdrawalPenalty(uint256)\":{\"notice\":\"Updates the early withdrawal penalty\"},\"updateStakingTier(uint256,uint256)\":{\"notice\":\"Updates an existing staking tier\"}},\"notice\":\"Allows users to stake OMN tokens to earn ETH rewards and trading fee discounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNStaking.sol\":\"OMNStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNStaking.sol\":{\"keccak256\":\"0x978b84b8b7cbb9d42e23a8e9318c40dcb883f24a40dae10e7ebb2c1e6f980c89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0799d431668987aea99a09a6b93d6a8404b4a743ca3b01951fda53a4a8a34c04\",\"dweb:/ipfs/QmcVqrsBEk6P69MEkTGYBEGiHTwv1ttCJtZsPtscvHvbcZ\"]}},\"version\":1}"}}}}}