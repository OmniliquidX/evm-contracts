{"id":"44af79f62fdb8e268b9f7efb77f48720","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        return _roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in ERC-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) internal virtual {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n * power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224 oldValue, uint224 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224 oldValue, uint224 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint224 storage last = _unsafeAccess(self, pos - 1);\n            uint32 lastKey = last._key;\n            uint224 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace208 storage self,\n        uint48 key,\n        uint208 value\n    ) internal returns (uint208 oldValue, uint208 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint208 value\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint208 storage last = _unsafeAccess(self, pos - 1);\n            uint48 lastKey = last._key;\n            uint208 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160 oldValue, uint160 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160 oldValue, uint160 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint160 storage last = _unsafeAccess(self, pos - 1);\n            uint96 lastKey = last._key;\n            uint160 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(\n        Delay self,\n        uint48 timepoint\n    ) private pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        (valueBefore, valueAfter, effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/FeeDistributor.sol":{"content":"// FeeDistributor.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\n\n/**\n * @title Fee Distributor\n * @notice Collects protocol fees and distributes them to staking, treasury, insurance fund, and buyback\n */\ncontract FeeDistributor is AccessControlEnumerable {\n    // Roles\n    bytes32 public constant FEE_COLLECTOR_ROLE = keccak256(\"FEE_COLLECTOR_ROLE\");\n    \n    // OMNI token address\n    address public omniToken;\n    \n    // Distribution addresses\n    address public stakingContract;\n    address public treasury;\n    address public insuranceFund;\n    \n    // Distribution percentages (basis points)\n    uint256 public stakingPercentage = 5000; // 50%\n    uint256 public treasuryPercentage = 2000; // 20%\n    uint256 public buybackBurnPercentage = 1000; // 10%\n    uint256 public insuranceFundPercentage = 2000; // 20%\n    \n    // Fee collection statistics\n    uint256 public totalFeesCollected;\n    uint256 public totalStakingDistributed;\n    uint256 public totalTreasuryDistributed;\n    uint256 public totalBuybackBurned;\n    uint256 public totalInsuranceFundDistributed;\n    \n    // Events\n    event FeesCollected(uint256 amount);\n    event FeesDistributed(\n        uint256 stakingAmount,\n        uint256 treasuryAmount,\n        uint256 buybackAmount,\n        uint256 insuranceFundAmount\n    );\n    event DistributionUpdated(\n        uint256 stakingPercentage,\n        uint256 treasuryPercentage,\n        uint256 buybackBurnPercentage,\n        uint256 insuranceFundPercentage\n    );\n    event AddressesUpdated(\n        address stakingContract,\n        address treasury,\n        address insuranceFund\n    );\n    \n    constructor(\n        address _omniToken,\n        address _stakingContract,\n        address _treasury,\n        address _insuranceFund,\n        address admin\n    ) {\n        require(_omniToken != address(0), \"Invalid OMN token address\");\n        require(_stakingContract != address(0), \"Invalid staking contract address\");\n        require(_treasury != address(0), \"Invalid treasury address\");\n        require(_insuranceFund != address(0), \"Invalid insurance fund address\");\n        \n        omniToken = _omniToken;\n        stakingContract = _stakingContract;\n        treasury = _treasury;\n        insuranceFund = _insuranceFund;\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(FEE_COLLECTOR_ROLE, admin);\n    }\n    \n    /**\n     * @notice Collects fees from protocol operations\n     */\n    function collectFees() external payable onlyRole(FEE_COLLECTOR_ROLE) {\n        require(msg.value > 0, \"No fees to collect\");\n        \n        totalFeesCollected += msg.value;\n        \n        emit FeesCollected(msg.value);\n    }\n    \n    /**\n     * @notice Distributes collected fees according to distribution percentages\n     */\n    function distributeFees() external {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No fees to distribute\");\n        \n        // Calculate amounts\n        uint256 stakingAmount = (balance * stakingPercentage) / 10000;\n        uint256 treasuryAmount = (balance * treasuryPercentage) / 10000;\n        uint256 buybackAmount = (balance * buybackBurnPercentage) / 10000;\n        uint256 insuranceFundAmount = (balance * insuranceFundPercentage) / 10000;\n        \n        // Distribute to staking contract\n        if (stakingAmount > 0) {\n            (bool stakingSuccess, ) = stakingContract.call{value: stakingAmount}(\"\");\n            require(stakingSuccess, \"Staking distribution failed\");\n            totalStakingDistributed += stakingAmount;\n        }\n        \n        // Distribute to treasury\n        if (treasuryAmount > 0) {\n            (bool treasurySuccess, ) = treasury.call{value: treasuryAmount}(\"\");\n            require(treasurySuccess, \"Treasury distribution failed\");\n            totalTreasuryDistributed += treasuryAmount;\n        }\n        \n        // Distribute to insurance fund\n        if (insuranceFundAmount > 0) {\n            (bool insuranceSuccess, ) = insuranceFund.call{value: insuranceFundAmount}(\"\");\n            require(insuranceSuccess, \"Insurance fund distribution failed\");\n            totalInsuranceFundDistributed += insuranceFundAmount;\n        }\n        \n        // Use buyback amount to buy and burn OMNI tokens\n        if (buybackAmount > 0) {\n            // In a real implementation, we would use a DEX to buy tokens\n            // This is simplified to just burn tokens\n            // Mock buyback by transferring tokens from admin\n            address admin = getRoleMember(DEFAULT_ADMIN_ROLE, 0);\n            uint256 burnAmount = buybackAmount * 10; // Mocked exchange rate: 1 ETH = 10 OMNI\n            \n            try IERC20(omniToken).transferFrom(admin, address(this), burnAmount) {\n                // Burn the tokens (assuming OMNI token has a burn function)\n                try IERC20(omniToken).transfer(address(0), burnAmount) {\n                    totalBuybackBurned += buybackAmount;\n                } catch {\n                    // Fallback if token doesn't support burn by transfer to zero address\n                    (bool adminSuccess, ) = admin.call{value: buybackAmount}(\"\");\n                    require(adminSuccess, \"Admin transfer failed\");\n                }\n            } catch {\n                // If mock fails, send to admin\n                (bool adminSuccess, ) = admin.call{value: buybackAmount}(\"\");\n                require(adminSuccess, \"Admin transfer failed\");\n            }\n        }\n        \n        emit FeesDistributed(stakingAmount, treasuryAmount, buybackAmount, insuranceFundAmount);\n    }\n    \n    /**\n     * @notice Updates the fee distribution percentages\n     * @param _stakingPercentage Percentage for staking (basis points)\n     * @param _treasuryPercentage Percentage for treasury (basis points)\n     * @param _buybackBurnPercentage Percentage for buyback & burn (basis points)\n     * @param _insuranceFundPercentage Percentage for insurance fund (basis points)\n     */\n    function updateDistribution(\n        uint256 _stakingPercentage,\n        uint256 _treasuryPercentage,\n        uint256 _buybackBurnPercentage,\n        uint256 _insuranceFundPercentage\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(\n            _stakingPercentage + _treasuryPercentage + _buybackBurnPercentage + _insuranceFundPercentage == 10000,\n            \"Percentages must add up to 100%\"\n        );\n        \n        stakingPercentage = _stakingPercentage;\n        treasuryPercentage = _treasuryPercentage;\n        buybackBurnPercentage = _buybackBurnPercentage;\n        insuranceFundPercentage = _insuranceFundPercentage;\n        \n        emit DistributionUpdated(\n            _stakingPercentage,\n            _treasuryPercentage,\n            _buybackBurnPercentage,\n            _insuranceFundPercentage\n        );\n    }\n    \n    /**\n     * @notice Updates distribution addresses\n     * @param _stakingContract New staking contract address\n     * @param _treasury New treasury address\n     * @param _insuranceFund New insurance fund address\n     */\n    function updateAddresses(\n        address _stakingContract,\n        address _treasury,\n        address _insuranceFund\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(_stakingContract != address(0), \"Invalid staking contract address\");\n        require(_treasury != address(0), \"Invalid treasury address\");\n        require(_insuranceFund != address(0), \"Invalid insurance fund address\");\n        \n        stakingContract = _stakingContract;\n        treasury = _treasury;\n        insuranceFund = _insuranceFund;\n        \n        emit AddressesUpdated(\n            _stakingContract,\n            _treasury,\n            _insuranceFund\n        );\n    }\n    \n    /**\n     * @notice Allows the contract to receive ETH\n     */\n    receive() external payable {\n        totalFeesCollected += msg.value;\n        emit FeesCollected(msg.value);\n    }\n}"},"contracts/OMNIStaking.sol":{"content":"// OMNStaking.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\n\ninterface IOMNIToken {\n    function getDiscountForStakedAmount(uint256 stakedAmount) external view returns (uint256);\n}\n\ninterface IFeeDistributor {\n    function distributeToStakers() external payable;\n}\n\n/**\n * @title OMNI Staking Contract\n * @notice Allows users to stake OMNI tokens to earn ETH rewards and trading fee discounts\n */\ncontract OMNIStaking is ReentrancyGuard, AccessControlEnumerable {\n    using SafeERC20 for IERC20;\n    \n    // Roles\n    bytes32 public constant FEE_DISTRIBUTOR_ROLE = keccak256(\"FEE_DISTRIBUTOR_ROLE\");\n    \n    // Staking parameters\n    struct StakingTier {\n        uint256 lockDuration; // in seconds\n        uint256 rewardMultiplier; // in basis points (100 = 1x, 110 = 1.1x, etc.)\n    }\n    \n    struct UserStake {\n        uint256 amount;\n        uint256 lockDuration;\n        uint256 startTime;\n        uint256 endTime;\n        uint256 lastRewardClaimTime;\n        bool unlocked;\n    }\n    \n    // Token address\n    IERC20 public omniToken;\n    \n    // Mapping from lock duration -> staking tier info\n    mapping(uint256 => StakingTier) public stakingTiers;\n    \n    // Available lock durations\n    uint256[] public lockDurations;\n    \n    // Mapping from user -> staking info\n    mapping(address => UserStake[]) public userStakes;\n    \n    // Reward tracking\n    uint256 public totalStaked;\n    uint256 public totalRewardsDistributed;\n    uint256 public accumulatedRewardsPerToken; // Scaled by 1e18\n    mapping(address => uint256) public userRewardDebts;\n    mapping(address => uint256) public pendingRewards;\n    \n    // Early withdrawal fee\n    uint256 public earlyWithdrawalPenalty = 1000; // 10% in basis points\n    \n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 lockDuration, uint256 endTime);\n    event Unstaked(address indexed user, uint256 amount, bool penalized);\n    event RewardsClaimed(address indexed user, uint256 amount);\n    event RewardsDistributed(uint256 amount);\n    event StakingTierAdded(uint256 lockDuration, uint256 rewardMultiplier);\n    event StakingTierUpdated(uint256 lockDuration, uint256 rewardMultiplier);\n    event EarlyWithdrawalPenaltyUpdated(uint256 penalty);\n    \n    constructor(address _omniToken, address admin) {\n        omniToken = IERC20(_omniToken);\n        \n        // Grant admin role\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        \n        // Set up initial staking tiers\n        _addStakingTier(0, 100); // Flexible staking - 1.0x multiplier\n        _addStakingTier(30 days, 105); // 30 days - 1.05x multiplier\n        _addStakingTier(90 days, 115); // 90 days - 1.15x multiplier\n        _addStakingTier(180 days, 130); // 180 days - 1.3x multiplier\n        _addStakingTier(365 days, 150); // 365 days - 1.5x multiplier\n    }\n    \n    /**\n     * @notice Adds a new staking tier\n     * @param lockDuration Duration in seconds\n     * @param rewardMultiplier Multiplier in basis points\n     */\n    function addStakingTier(uint256 lockDuration, uint256 rewardMultiplier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _addStakingTier(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Internal function to add a staking tier\n     */\n    function _addStakingTier(uint256 lockDuration, uint256 rewardMultiplier) internal {\n        require(rewardMultiplier >= 100, \"Multiplier must be at least 100 (1x)\");\n        require(stakingTiers[lockDuration].rewardMultiplier == 0, \"Tier already exists\");\n        \n        stakingTiers[lockDuration] = StakingTier({\n            lockDuration: lockDuration,\n            rewardMultiplier: rewardMultiplier\n        });\n        \n        lockDurations.push(lockDuration);\n        \n        emit StakingTierAdded(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Updates an existing staking tier\n     * @param lockDuration Duration to update\n     * @param rewardMultiplier New multiplier\n     */\n    function updateStakingTier(uint256 lockDuration, uint256 rewardMultiplier) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(rewardMultiplier >= 100, \"Multiplier must be at least 100 (1x)\");\n        require(stakingTiers[lockDuration].rewardMultiplier != 0, \"Tier doesn't exist\");\n        \n        stakingTiers[lockDuration].rewardMultiplier = rewardMultiplier;\n        \n        emit StakingTierUpdated(lockDuration, rewardMultiplier);\n    }\n    \n    /**\n     * @notice Updates the early withdrawal penalty\n     * @param penalty New penalty in basis points\n     */\n    function updateEarlyWithdrawalPenalty(uint256 penalty) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(penalty <= 3000, \"Penalty cannot exceed 30%\");\n        earlyWithdrawalPenalty = penalty;\n        emit EarlyWithdrawalPenaltyUpdated(penalty);\n    }\n    \n    /**\n     * @notice Stakes OMNI tokens\n     * @param amount Amount to stake\n     * @param lockDurationIndex Index of the lock duration in the lockDurations array\n     */\n    function stake(uint256 amount, uint256 lockDurationIndex) external nonReentrant {\n        require(amount > 0, \"Cannot stake 0\");\n        require(lockDurationIndex < lockDurations.length, \"Invalid lock duration index\");\n        \n        uint256 lockDuration = lockDurations[lockDurationIndex];\n        // Ensure the lock duration exists\n        require(stakingTiers[lockDuration].rewardMultiplier > 0, \"Invalid lock duration\");\n        \n        // Claim any pending rewards first\n        _updateAndClaimRewards(msg.sender);\n        \n        // Transfer tokens from user\n        omniToken.safeTransferFrom(msg.sender, address(this), amount);\n        \n        // Create new stake\n        uint256 endTime = block.timestamp + lockDuration;\n        userStakes[msg.sender].push(UserStake({\n            amount: amount,\n            lockDuration: lockDuration,\n            startTime: block.timestamp,\n            endTime: endTime,\n            lastRewardClaimTime: block.timestamp,\n            unlocked: false\n        }));\n        \n        // Update total staked\n        totalStaked += amount;\n        \n        // Update user reward debt\n        userRewardDebts[msg.sender] = (amount * accumulatedRewardsPerToken) / 1e18;\n        \n        emit Staked(msg.sender, amount, lockDuration, endTime);\n    }\n    \n    /**\n     * @notice Unstakes tokens for a specific stake\n     * @param stakeIndex Index of the stake to unstake\n     */\n    function unstake(uint256 stakeIndex) external nonReentrant {\n        require(stakeIndex < userStakes[msg.sender].length, \"Invalid stake index\");\n        \n        UserStake storage userStake = userStakes[msg.sender][stakeIndex];\n        require(!userStake.unlocked, \"Stake already unlocked\");\n        \n        uint256 amount = userStake.amount;\n        bool penalized = false;\n        \n        // Claim any pending rewards first\n        _updateAndClaimRewards(msg.sender);\n        \n        // Check if lock period has ended\n        if (block.timestamp < userStake.endTime) {\n            // Apply early withdrawal penalty\n            uint256 penalty = (amount * earlyWithdrawalPenalty) / 10000;\n            amount = amount - penalty;\n            penalized = true;\n            \n            // Send penalty to rewards pool - effectively redistributing to other stakers\n            totalStaked -= penalty;\n            _distributeRewards(penalty);\n        }\n        \n        // Mark stake as unlocked\n        userStake.unlocked = true;\n        \n        // Update total staked\n        totalStaked -= userStake.amount;\n        \n        // Update user reward debt\n        userRewardDebts[msg.sender] = ((getTotalStakedByUser(msg.sender) - userStake.amount) * accumulatedRewardsPerToken) / 1e18;\n        \n        // Transfer tokens back to user\n        omniToken.safeTransfer(msg.sender, amount);\n        \n        emit Unstaked(msg.sender, amount, penalized);\n    }\n    \n    /**\n     * @notice Claims pending rewards\n     */\n    function claimRewards() external nonReentrant {\n        _updateAndClaimRewards(msg.sender);\n    }\n    \n    /**\n     * @notice Internal function to update and claim rewards\n     * @param user User address\n     */\n    function _updateAndClaimRewards(address user) internal {\n        if (getTotalStakedByUser(user) == 0) return;\n        \n        // Calculate pending rewards\n        uint256 pending = calculatePendingRewards(user);\n        \n        if (pending > 0) {\n            // Update reward claim time for all stakes\n            for (uint i = 0; i < userStakes[user].length; i++) {\n                if (!userStakes[user][i].unlocked) {\n                    userStakes[user][i].lastRewardClaimTime = block.timestamp;\n                }\n            }\n            \n            // Reset pending rewards\n            pendingRewards[user] = 0;\n            \n            // Send rewards to user\n            (bool success, ) = user.call{value: pending}(\"\");\n            require(success, \"ETH transfer failed\");\n            \n            emit RewardsClaimed(user, pending);\n        }\n    }\n    \n    /**\n     * @notice Calculate pending rewards for a user\n     * @param user User address\n     * @return Pending rewards in wei\n     */\n    function calculatePendingRewards(address user) public view returns (uint256) {\n        if (getTotalStakedByUser(user) == 0) return 0;\n        \n        uint256 newRewards = (getTotalStakedByUser(user) * accumulatedRewardsPerToken) / 1e18 - userRewardDebts[user];\n        \n        // Apply reward multipliers based on lock periods\n        uint256 adjustedRewards = 0;\n        uint256 totalUserStaked = getTotalStakedByUser(user);\n        \n        if (totalUserStaked > 0) {\n            for (uint i = 0; i < userStakes[user].length; i++) {\n                UserStake memory myStake = userStakes[user][i];\n                if (!myStake.unlocked) {\n                    uint256 stakeShare = (myStake.amount * 1e18) / totalUserStaked;\n                    uint256 stakeRewards = (newRewards * stakeShare) / 1e18;\n                    uint256 multiplier = stakingTiers[myStake.lockDuration].rewardMultiplier;\n                    adjustedRewards += (stakeRewards * multiplier) / 100;\n                }\n            }\n        }\n        \n        return pendingRewards[user] + adjustedRewards;\n    }\n    \n    /**\n     * @notice Distributes ETH rewards to stakers\n     */\n    function distributeRewards() external payable onlyRole(FEE_DISTRIBUTOR_ROLE) {\n        require(msg.value > 0, \"Cannot distribute 0\");\n        _distributeRewards(msg.value);\n    }\n    \n    /**\n     * @notice Internal function to distribute rewards\n     * @param amount Amount to distribute\n     */\n    function _distributeRewards(uint256 amount) internal {\n        if (totalStaked == 0) {\n            // If no stakers, send to admin\n            bool adminExists = false;\n            for (uint256 i = 0; i < 256; i++) {\n                try this.getRoleMember(DEFAULT_ADMIN_ROLE, i) returns (address admin) {\n                    if (admin != address(0)) {\n                        adminExists = true;\n                        break;\n                    }\n                } catch {\n                    break;\n                }\n            }\n            require(adminExists, \"No admin available\");\n            (bool success, ) = payable(getRoleMember(DEFAULT_ADMIN_ROLE, 0)).call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n            return;\n        }\n        \n        // Increase accumulated rewards per token\n        accumulatedRewardsPerToken += (amount * 1e18) / totalStaked;\n        totalRewardsDistributed += amount;\n        \n        emit RewardsDistributed(amount);\n    }\n    \n    /**\n     * @notice Gets the total amount staked by a user\n     * @param user User address\n     * @return Total staked amount\n     */\n    function getTotalStakedByUser(address user) public view returns (uint256) {\n        uint256 total = 0;\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                total += userStakes[user][i].amount;\n            }\n        }\n        return total;\n    }\n    \n    /**\n     * @notice Gets all active stakes for a user\n     * @param user User address\n     * @return amounts Array of stake amounts\n     * @return userLockDurations Array of lock durations\n     * @return startTimes Array of start times\n     * @return endTimes Array of end times\n     * @return multipliers Array of reward multipliers\n     */\n    function getStakesByUser(address user) external view returns (\n        uint256[] memory amounts,\n        uint256[] memory userLockDurations,\n        uint256[] memory startTimes,\n        uint256[] memory endTimes,\n        uint256[] memory multipliers\n    ) {\n        uint256 activeCount = 0;\n        \n        // Count active stakes\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                activeCount++;\n            }\n        }\n        \n        // Initialize arrays\n        amounts = new uint256[](activeCount);\n        userLockDurations = new uint256[](activeCount);\n        startTimes = new uint256[](activeCount);\n        endTimes = new uint256[](activeCount);\n        multipliers = new uint256[](activeCount);\n        \n        // Fill arrays\n        uint256 index = 0;\n        for (uint i = 0; i < userStakes[user].length; i++) {\n            if (!userStakes[user][i].unlocked) {\n                UserStake memory userStake = userStakes[user][i];\n                amounts[index] = userStake.amount;\n                userLockDurations[index] = userStake.lockDuration;\n                startTimes[index] = userStake.startTime;\n                endTimes[index] = userStake.endTime;\n                multipliers[index] = stakingTiers[userStake.lockDuration].rewardMultiplier;\n                index++;\n            }\n        }\n        \n        return (amounts, lockDurations, startTimes, endTimes, multipliers);\n    }\n    \n    /**\n     * @notice Gets the fee discount for a user based on their staked amount\n     * @param user User address\n     * @return Discount in basis points\n     */\n    function getFeeDiscount(address user) external view returns (uint256) {\n        uint256 totalAmountStaked = getTotalStakedByUser(user);\n        return IOMNIToken(address(omniToken)).getDiscountForStakedAmount(totalAmountStaked);\n    }\n    \n    /**\n     * @notice Gets all available lock durations\n     * @return Array of lock durations in seconds\n     */\n    function getLockDurations() external view returns (uint256[] memory) {\n        return lockDurations;\n    }\n    \n    /**\n     * @notice Gets staking tier info for a specific lock duration\n     * @param lockDuration Duration in seconds\n     * @return duration Lock duration in seconds\n     * @return multiplier Reward multiplier in basis points\n     */\n    function getStakingTier(uint256 lockDuration) external view returns (\n        uint256 duration,\n        uint256 multiplier\n    ) {\n        StakingTier memory tier = stakingTiers[lockDuration];\n        return (tier.lockDuration, tier.rewardMultiplier);\n    }\n    \n    // Allow contract to receive ETH\n    receive() external payable {\n        _distributeRewards(msg.value);\n    }\n}\n"},"contracts/OMNIToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/utils/Nonces.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title OMNI Token\n * @notice Governance and utility token for the Omniliquid protocol\n */\ncontract OMNIToken is ERC20, ERC20Burnable, ERC20Permit, ERC20Votes, AccessControl {\n    bytes32 public constant MINTER_ROLE     = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant GOVERNANCE_ROLE = keccak256(\"GOVERNANCE_ROLE\");\n\n    uint256 public maxSupply          = 100_000_000 * 1e18;\n    uint256 public yearlyInflationCap =   5_000_000 * 1e18;\n\n    uint256 public lastInflationUpdate;\n    uint256 public yearlyMinted;\n\n    mapping(uint256 => uint256) public stakingDiscountTiers;\n\n    uint256 public tradingFeeBase          = 50;    // 0.05%\n    uint256 public maxLeverage             = 20;    // 20x\n    uint256 public stakingRewardPercentage = 5000;  // 50%\n    uint256 public treasuryPercentage      = 2000;  // 20%\n    uint256 public buybackBurnPercentage   = 1000;  // 10%\n    uint256 public insuranceFundPercentage = 2000;  // 20%\n\n    address public treasury;\n    address public insuranceFund;\n\n    event Minted(address indexed to, uint256 amount);\n    event TreasuryUpdated(address indexed treasury);\n    event InsuranceFundUpdated(address indexed insuranceFund);\n    event TradingFeeBaseUpdated(uint256 newFee);\n    event MaxLeverageUpdated(uint256 newLeverage);\n    event RewardDistributionUpdated(uint256 staking, uint256 treasury, uint256 buybackBurn, uint256 insurance);\n    event DiscountTierSet(uint256 tier, uint256 discount);\n\n    constructor(address initialGovernance)\n        ERC20(\"Omniliquid\", \"OMNI\")\n        ERC20Permit(\"Omniliquid\")\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, initialGovernance);\n        _grantRole(GOVERNANCE_ROLE, initialGovernance);\n        lastInflationUpdate = block.timestamp;\n    }\n\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        require(totalSupply() + amount <= maxSupply, \"Max supply exceeded\");\n        if (block.timestamp > lastInflationUpdate + 365 days) {\n            yearlyMinted = 0;\n            lastInflationUpdate = block.timestamp;\n        }\n        require(yearlyMinted + amount <= yearlyInflationCap, \"Inflation cap exceeded\");\n        yearlyMinted += amount;\n        _mint(to, amount);\n        emit Minted(to, amount);\n    }\n\n    // Governance setters\n\n    function setTreasury(address _treasury) external onlyRole(GOVERNANCE_ROLE) {\n        treasury = _treasury;\n        emit TreasuryUpdated(_treasury);\n    }\n\n    function setInsuranceFund(address _insuranceFund) external onlyRole(GOVERNANCE_ROLE) {\n        insuranceFund = _insuranceFund;\n        emit InsuranceFundUpdated(_insuranceFund);\n    }\n\n    function setTradingFeeBase(uint256 _fee) external onlyRole(GOVERNANCE_ROLE) {\n        tradingFeeBase = _fee;\n        emit TradingFeeBaseUpdated(_fee);\n    }\n\n    function setMaxLeverage(uint256 _leverage) external onlyRole(GOVERNANCE_ROLE) {\n        maxLeverage = _leverage;\n        emit MaxLeverageUpdated(_leverage);\n    }\n\n    function setRewardDistribution(\n        uint256 _staking,\n        uint256 _treasury,\n        uint256 _buybackBurn,\n        uint256 _insurance\n    ) external onlyRole(GOVERNANCE_ROLE) {\n        require(_staking + _treasury + _buybackBurn + _insurance == 10000, \"Must equal 100%\");\n        stakingRewardPercentage = _staking;\n        treasuryPercentage = _treasury;\n        buybackBurnPercentage = _buybackBurn;\n        insuranceFundPercentage = _insurance;\n        emit RewardDistributionUpdated(_staking, _treasury, _buybackBurn, _insurance);\n    }\n\n    function setDiscountTier(uint256 tier, uint256 discountBps) external onlyRole(GOVERNANCE_ROLE) {\n        require(discountBps <= 10000, \"Max 100%\");\n        stakingDiscountTiers[tier] = discountBps;\n        emit DiscountTierSet(tier, discountBps);\n    }\n\n    function getDiscountForStakedAmount(uint256 stakedAmount) public view returns (uint256) {\n        uint256 applicableDiscount = 0;\n        for (uint256 tier = 0; tier < 10; ++tier) {\n            if (stakedAmount >= tier * 1000 ether) {\n                applicableDiscount = stakingDiscountTiers[tier];\n            }\n        }\n        return applicableDiscount;\n    }\n\n    function getDiscountTiers() external view returns (uint256[] memory) {\n        uint256[] memory discounts = new uint256[](10);\n        for (uint256 i = 0; i < 10; i++) {\n            discounts[i] = stakingDiscountTiers[i];\n        }\n        return discounts;\n    }\n\n    // OpenZeppelin v5 override\n\n    function _update(address from, address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._update(from, to, amount);\n    }\n\n    function nonces(address owner)\n        public\n        view\n        override(ERC20Permit, Nonces)\n        returns (uint256)\n    {\n        return super.nonces(owner);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[3157],"ERC165":[4702],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3158,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4703,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4702,4714,378,3157],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4701],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[536],"EnumerableSet":[10423],"IAccessControlEnumerable":[562]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:2"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":563,"src":"155:72:2","symbolAliases":[{"foreign":{"id":381,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"163:24:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":296,"src":"228:51:2","symbolAliases":[{"foreign":{"id":383,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":10424,"src":"280:68:2","symbolAliases":[{"foreign":{"id":385,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"288:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":388,"name":"IAccessControlEnumerable","nameLocations":["490:24:2"],"nodeType":"IdentifierPath","referencedDeclaration":562,"src":"490:24:2"},"id":389,"nodeType":"InheritanceSpecifier","src":"490:24:2"},{"baseName":{"id":390,"name":"AccessControl","nameLocations":["516:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:2"},"id":391,"nodeType":"InheritanceSpecifier","src":"516:13:2"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"350:94:2","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":536,"linearizedBaseContracts":[536,295,4702,4714,562,378,3157],"name":"AccessControlEnumerable","nameLocation":"463:23:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":395,"libraryName":{"id":392,"name":"EnumerableSet","nameLocations":["542:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":10423,"src":"542:13:2"},"nodeType":"UsingForDirective","src":"536:49:2","typeName":{"id":394,"nodeType":"UserDefinedTypeName","pathNode":{"id":393,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:2","574:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"560:24:2"},"referencedDeclaration":10136,"src":"560:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":400,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:2","nodeType":"VariableDeclaration","scope":536,"src":"591:70:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":399,"keyName":"role","keyNameLocation":"607:4:2","keyType":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:2","629:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"615:24:2"},"referencedDeclaration":10136,"src":"615:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":421,"nodeType":"Block","src":"820:121:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"837:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":411,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"857:24:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$562_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$562_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$562","typeString":"type(contract IAccessControlEnumerable)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":417,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"922:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":415,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"898:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":408,"id":420,"nodeType":"Return","src":"830:104:2"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"668:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:2","nodeType":"FunctionDefinition","overrides":{"id":405,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:2"},"parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:2","nodeType":"VariableDeclaration","scope":422,"src":"756:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":402,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"814:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":406,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:2"},"scope":536,"src":"729:212:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[553],"body":{"id":439,"nodeType":"Block","src":"1616:52:2","statements":[{"expression":{"arguments":[{"id":436,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1655:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":432,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1633:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":434,"indexExpression":{"id":433,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1646:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":10259,"src":"1633:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$10136_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$10136_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"1626:35:2"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"947:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":440,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"role","nameLocation":"1557:4:2","nodeType":"VariableDeclaration","scope":440,"src":"1549:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"index","nameLocation":"1571:5:2","nodeType":"VariableDeclaration","scope":440,"src":"1563:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"1607:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:2"},"scope":536,"src":"1526:142:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[561],"body":{"id":454,"nodeType":"Block","src":"1916:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":448,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1933:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":450,"indexExpression":{"id":449,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1946:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":10232,"src":"1933:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$10136_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$10136_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":447,"id":453,"nodeType":"Return","src":"1926:34:2"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1674:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":455,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:2","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"role","nameLocation":"1872:4:2","nodeType":"VariableDeclaration","scope":455,"src":"1864:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:2"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"1907:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:2"},"scope":536,"src":"1836:131:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":470,"nodeType":"Block","src":"2595:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":464,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2612:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":466,"indexExpression":{"id":465,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2625:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2612:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:6:2","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":10289,"src":"2612:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$10136_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$10136_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":463,"id":469,"nodeType":"Return","src":"2605:34:2"}]},"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"1973:532:2","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":471,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"2519:14:2","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"role","nameLocation":"2542:4:2","nodeType":"VariableDeclaration","scope":471,"src":"2534:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:14:2"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"2577:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"nodeType":"ArrayTypeName","src":"2577:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2576:18:2"},"scope":536,"src":"2510:136:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":502,"nodeType":"Block","src":"2840:165:2","statements":[{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"granted","nameLocation":"2855:7:2","nodeType":"VariableDeclaration","scope":502,"src":"2850:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"2850:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[{"id":486,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2882:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":487,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2888:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":484,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2865:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:10:2","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2865:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2850:46:2"},{"condition":{"id":490,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2910:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2906:69:2","trueBody":{"id":498,"nodeType":"Block","src":"2919:56:2","statements":[{"expression":{"arguments":[{"id":495,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2956:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":491,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2933:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":493,"indexExpression":{"id":492,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"2946:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:3:2","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":10163,"src":"2933:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$10136_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$10136_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":497,"nodeType":"ExpressionStatement","src":"2933:31:2"}]}},{"expression":{"id":500,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2991:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":481,"id":501,"nodeType":"Return","src":"2984:14:2"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"2652:91:2","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2757:10:2","nodeType":"FunctionDefinition","overrides":{"id":478,"nodeType":"OverrideSpecifier","overrides":[],"src":"2816:8:2"},"parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"role","nameLocation":"2776:4:2","nodeType":"VariableDeclaration","scope":503,"src":"2768:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"account","nameLocation":"2790:7:2","nodeType":"VariableDeclaration","scope":503,"src":"2782:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2767:31:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"2834:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":479,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2833:6:2"},"scope":536,"src":"2748:257:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":534,"nodeType":"Block","src":"3201:169:2","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"revoked","nameLocation":"3216:7:2","nodeType":"VariableDeclaration","scope":534,"src":"3211:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":521,"initialValue":{"arguments":[{"id":518,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3244:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":519,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3250:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":516,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"3226:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$536_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:11:2","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"3226:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3211:47:2"},{"condition":{"id":522,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3272:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"3268:72:2","trueBody":{"id":530,"nodeType":"Block","src":"3281:59:2","statements":[{"expression":{"arguments":[{"id":527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3321:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":523,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3295:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10136_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":525,"indexExpression":{"id":524,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3308:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3295:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:2","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":10190,"src":"3295:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$10136_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$10136_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":529,"nodeType":"ExpressionStatement","src":"3295:34:2"}]}},{"expression":{"id":532,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":513,"id":533,"nodeType":"Return","src":"3349:14:2"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"3011:92:2","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3117:11:2","nodeType":"FunctionDefinition","overrides":{"id":510,"nodeType":"OverrideSpecifier","overrides":[],"src":"3177:8:2"},"parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"role","nameLocation":"3137:4:2","nodeType":"VariableDeclaration","scope":535,"src":"3129:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3129:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"account","nameLocation":"3151:7:2","nodeType":"VariableDeclaration","scope":535,"src":"3143:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3128:31:2"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"3195:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"3195:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3194:6:2"},"scope":536,"src":"3108:262:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":537,"src":"445:2927:2","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:3244:2"},"id":2},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[562]},"id":563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":563,"sourceUnit":379,"src":"156:53:3","symbolAliases":[{"foreign":{"id":539,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":542,"name":"IAccessControl","nameLocations":["350:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"350:14:3"},"id":543,"nodeType":"InheritanceSpecifier","src":"350:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"211:100:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":562,"linearizedBaseContracts":[562,378],"name":"IAccessControlEnumerable","nameLocation":"322:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"371:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"role","nameLocation":"981:4:3","nodeType":"VariableDeclaration","scope":553,"src":"973:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"index","nameLocation":"995:5:3","nodeType":"VariableDeclaration","scope":553,"src":"987:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1025:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:3"},"scope":562,"src":"950:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1040:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:3","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"role","nameLocation":"1238:4:3","nodeType":"VariableDeclaration","scope":561,"src":"1230:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":561,"src":"1267:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:3"},"scope":562,"src":"1202:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":563,"src":"312:966:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1149:3"},"id":3},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[645]},"id":646,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"136:102:4","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":645,"linearizedBaseContracts":[645],"name":"IVotes","nameLocation":"249:6:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"262:55:4","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":570,"name":"VotesExpiredSignature","nameLocation":"328:21:4","nodeType":"ErrorDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"expiry","nameLocation":"358:6:4","nodeType":"VariableDeclaration","scope":570,"src":"350:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:4"},"src":"322:44:4"},{"anonymous":false,"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"372:71:4","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":579,"name":"DelegateChanged","nameLocation":"454:15:4","nodeType":"EventDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:4","nodeType":"VariableDeclaration","scope":579,"src":"470:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:4","nodeType":"VariableDeclaration","scope":579,"src":"497:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:4","nodeType":"VariableDeclaration","scope":579,"src":"527:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:4"},"src":"448:107:4"},{"anonymous":false,"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"561:131:4","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":588,"name":"DelegateVotesChanged","nameLocation":"703:20:4","nodeType":"EventDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:4","nodeType":"VariableDeclaration","scope":588,"src":"724:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:4","nodeType":"VariableDeclaration","scope":588,"src":"750:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:4","nodeType":"VariableDeclaration","scope":588,"src":"773:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:4"},"src":"697:94:4"},{"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"797:79:4","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:4","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"account","nameLocation":"907:7:4","nodeType":"VariableDeclaration","scope":596,"src":"899:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:4"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"939:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:4"},"scope":645,"src":"881:67:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"954:230:4","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":606,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:4","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"account","nameLocation":"1219:7:4","nodeType":"VariableDeclaration","scope":606,"src":"1211:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:4","nodeType":"VariableDeclaration","scope":606,"src":"1228:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:4"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"1270:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:4"},"scope":645,"src":"1189:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"1285:481:4","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":614,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:4","nodeType":"VariableDeclaration","scope":614,"src":"1799:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:4"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"1841:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:4"},"scope":645,"src":"1771:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"1856:71:4","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":622,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:4","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"account","nameLocation":"1959:7:4","nodeType":"VariableDeclaration","scope":622,"src":"1951:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:4"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":622,"src":"1991:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:4"},"scope":645,"src":"1932:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"2006:71:4","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":628,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:4","nodeType":"VariableDeclaration","scope":628,"src":"2100:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:4"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"2127:0:4"},"scope":645,"src":"2082:46:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2134:67:4","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":644,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:4","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:4","nodeType":"VariableDeclaration","scope":644,"src":"2229:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:4","nodeType":"VariableDeclaration","scope":644,"src":"2248:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:4","nodeType":"VariableDeclaration","scope":644,"src":"2263:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"v","nameLocation":"2285:1:4","nodeType":"VariableDeclaration","scope":644,"src":"2279:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":636,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"r","nameLocation":"2296:1:4","nodeType":"VariableDeclaration","scope":644,"src":"2288:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"s","nameLocation":"2307:1:4","nodeType":"VariableDeclaration","scope":644,"src":"2299:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:4"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"2318:0:4"},"scope":645,"src":"2206:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":646,"src":"239:2082:4","usedErrors":[570],"usedEvents":[579,588]}],"src":"110:2212:4"},"id":4},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[9810],"Context":[3157],"ECDSA":[4377],"EIP712":[4604],"IERC5805":[1318],"Nonces":[3247],"SafeCast":[8085],"Time":[10697],"Votes":[1192]},"id":1193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":647,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":1319,"src":"135:55:5","symbolAliases":[{"foreign":{"id":648,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"143:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":3158,"src":"191:48:5","symbolAliases":[{"foreign":{"id":650,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"199:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":3248,"src":"240:46:5","symbolAliases":[{"foreign":{"id":652,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"248:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":4605,"src":"287:59:5","symbolAliases":[{"foreign":{"id":654,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"295:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":9811,"src":"347:64:5","symbolAliases":[{"foreign":{"id":656,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9810,"src":"355:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":8086,"src":"412:55:5","symbolAliases":[{"foreign":{"id":658,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"420:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":4378,"src":"468:57:5","symbolAliases":[{"foreign":{"id":660,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"476:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1193,"sourceUnit":10698,"src":"526:48:5","symbolAliases":[{"foreign":{"id":662,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10697,"src":"534:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":665,"name":"Context","nameLocations":["1919:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"1919:7:5"},"id":666,"nodeType":"InheritanceSpecifier","src":"1919:7:5"},{"baseName":{"id":667,"name":"EIP712","nameLocations":["1928:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":4604,"src":"1928:6:5"},"id":668,"nodeType":"InheritanceSpecifier","src":"1928:6:5"},{"baseName":{"id":669,"name":"Nonces","nameLocations":["1936:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3247,"src":"1936:6:5"},"id":670,"nodeType":"InheritanceSpecifier","src":"1936:6:5"},{"baseName":{"id":671,"name":"IERC5805","nameLocations":["1944:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"1944:8:5"},"id":672,"nodeType":"InheritanceSpecifier","src":"1944:8:5"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"576:1315:5","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":1192,"internalFunctionIDs":{"1169":1,"1183":2},"linearizedBaseContracts":[1192,1318,645,1333,3247,4604,1307,3157],"name":"Votes","nameLocation":"1910:5:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":676,"libraryName":{"id":673,"name":"Checkpoints","nameLocations":["1965:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":9810,"src":"1965:11:5"},"nodeType":"UsingForDirective","src":"1959:43:5","typeName":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"Checkpoints.Trace208","nameLocations":["1981:11:5","1993:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"1981:20:5"},"referencedDeclaration":8766,"src":"1981:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":681,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:5","nodeType":"VariableDeclaration","scope":1192,"src":"2008:126:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":678,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2063:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":685,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:5","nodeType":"VariableDeclaration","scope":1192,"src":"2141:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":684,"keyName":"account","keyNameLocation":"2157:7:5","keyType":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":690,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:5","nodeType":"VariableDeclaration","scope":1192,"src":"2202:79:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":689,"keyName":"delegatee","keyNameLocation":"2218:9:5","keyType":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":688,"nodeType":"UserDefinedTypeName","pathNode":{"id":687,"name":"Checkpoints.Trace208","nameLocations":["2231:11:5","2243:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"2231:20:5"},"referencedDeclaration":8766,"src":"2231:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":693,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:5","nodeType":"VariableDeclaration","scope":1192,"src":"2288:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":692,"nodeType":"UserDefinedTypeName","pathNode":{"id":691,"name":"Checkpoints.Trace208","nameLocations":["2288:11:5","2300:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"2288:20:5"},"referencedDeclaration":8766,"src":"2288:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"2341:59:5","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":696,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:5","nodeType":"ErrorDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"2435:2:5"},"src":"2405:33:5"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"2444:64:5","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":703,"name":"ERC5805FutureLookup","nameLocation":"2519:19:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:5","nodeType":"VariableDeclaration","scope":703,"src":"2539:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"clock","nameLocation":"2565:5:5","nodeType":"VariableDeclaration","scope":703,"src":"2558:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":700,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:5"},"src":"2513:59:5"},{"baseFunctions":[1326],"body":{"id":713,"nodeType":"Block","src":"2843:42:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":709,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10697,"src":"2860:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$10697_$","typeString":"type(library Time)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:5","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":10458,"src":"2860:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":708,"id":712,"nodeType":"Return","src":"2853:25:5"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"2578:206:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":714,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:5","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"2803:2:5"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"2835:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":706,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:5"},"scope":1192,"src":"2789:96:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1332],"body":{"id":733,"nodeType":"Block","src":"3106:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"3169:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":722,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10697,"src":"3180:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$10697_$","typeString":"type(library Time)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:5","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":10458,"src":"3180:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":730,"nodeType":"IfStatement","src":"3165:93:5","trueBody":{"id":729,"nodeType":"Block","src":"3200:58:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":726,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"3221:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"RevertStatement","src":"3214:33:5"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":719,"id":732,"nodeType":"Return","src":"3267:38:5"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"2891:91:5","text":" @dev Machine-readable description of the clock as specified in ERC-6372."},"functionSelector":"4bf5d7e9","id":734,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:5","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"3059:2:5"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"3091:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":717,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:5"},"scope":1192,"src":"3040:272:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[596],"body":{"id":748,"nodeType":"Block","src":"3475:62:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":742,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3492:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":744,"indexExpression":{"id":743,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"3513:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:5","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8991,"src":"3492:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":741,"id":747,"nodeType":"Return","src":"3485:45:5"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"3318:79:5","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":749,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:5","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"account","nameLocation":"3428:7:5","nodeType":"VariableDeclaration","scope":749,"src":"3420:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:5"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"3466:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:5"},"scope":1192,"src":"3402:135:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[606],"body":{"id":784,"nodeType":"Block","src":"4018:268:5","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:5","nodeType":"VariableDeclaration","scope":784,"src":"4028:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":759,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":763,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":761,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"4054:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4075:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":765,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4088:16:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"4071:115:5","trueBody":{"id":772,"nodeType":"Block","src":"4106:80:5","statements":[{"errorCall":{"arguments":[{"id":768,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4147:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":769,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4158:16:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":767,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4127:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"RevertStatement","src":"4120:55:5"}]}},{"expression":{"arguments":[{"arguments":[{"id":780,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4268:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":778,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"4250:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:5","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"4250:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":774,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4202:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":776,"indexExpression":{"id":775,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4223:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:5","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8961,"src":"4202:47:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":758,"id":783,"nodeType":"Return","src":"4195:84:5"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"3543:374:5","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":785,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:5","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"account","nameLocation":"3952:7:5","nodeType":"VariableDeclaration","scope":785,"src":"3944:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:5","nodeType":"VariableDeclaration","scope":785,"src":"3961:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:5"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":785,"src":"4009:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:5"},"scope":1192,"src":"3922:364:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[614],"body":{"id":816,"nodeType":"Block","src":"5007:256:5","statements":[{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:5","nodeType":"VariableDeclaration","scope":816,"src":"5017:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":793,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"5043:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5064:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":799,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5077:16:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"IfStatement","src":"5060:115:5","trueBody":{"id":806,"nodeType":"Block","src":"5095:80:5","statements":[{"errorCall":{"arguments":[{"id":802,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5136:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":803,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5147:16:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":801,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5116:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"RevertStatement","src":"5109:55:5"}]}},{"expression":{"arguments":[{"arguments":[{"id":812,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5245:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":810,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"5227:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:5","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"5227:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":808,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5191:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:5","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8961,"src":"5191:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":792,"id":815,"nodeType":"Return","src":"5184:72:5"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"4292:625:5","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":817,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:5","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:5","nodeType":"VariableDeclaration","scope":817,"src":"4950:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:5"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":817,"src":"4998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:5"},"scope":1192,"src":"4922:341:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":827,"nodeType":"Block","src":"5407:50:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":823,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5424:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:5","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8991,"src":"5424:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":822,"id":826,"nodeType":"Return","src":"5417:33:5"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"5269:66:5","text":" @dev Returns the current total supply of votes."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"5364:2:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":828,"src":"5398:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:5"},"scope":1192,"src":"5340:117:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[622],"body":{"id":840,"nodeType":"Block","src":"5613:43:5","statements":[{"expression":{"baseExpression":{"id":836,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5630:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":838,"indexExpression":{"id":837,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5641:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":835,"id":839,"nodeType":"Return","src":"5623:26:5"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"5463:71:5","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":841,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:5","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"account","nameLocation":"5566:7:5","nodeType":"VariableDeclaration","scope":841,"src":"5558:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:5"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"5604:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:5"},"scope":1192,"src":"5539:117:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[628],"body":{"id":857,"nodeType":"Block","src":"5790:86:5","statements":[{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"account","nameLocation":"5808:7:5","nodeType":"VariableDeclaration","scope":857,"src":"5800:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":851,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":849,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"5818:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:5"},{"expression":{"arguments":[{"id":853,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5850:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"5859:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":852,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5840:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"5840:29:5"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"5662:71:5","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":858,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:5","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:5","nodeType":"VariableDeclaration","scope":858,"src":"5756:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:5"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"5790:0:5"},"scope":1192,"src":"5738:138:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[644],"body":{"id":914,"nodeType":"Block","src":"6127:381:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":874,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6141:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":876,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6159:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":883,"nodeType":"IfStatement","src":"6137:91:5","trueBody":{"id":882,"nodeType":"Block","src":"6167:61:5","statements":[{"errorCall":{"arguments":[{"id":879,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6210:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6188:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"RevertStatement","src":"6181:36:5"}]}},{"assignments":[885],"declarations":[{"constant":false,"id":885,"mutability":"mutable","name":"signer","nameLocation":"6245:6:5","nodeType":"VariableDeclaration","scope":914,"src":"6237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":903,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":892,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6319:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":893,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"6340:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6351:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6358:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":890,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"6308:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:5","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":889,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"6298:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":888,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"6281:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":899,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6381:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":900,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"6396:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":901,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6411:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":886,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"6254:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4377_$","typeString":"type(library ECDSA)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"6254:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:5"},{"expression":{"arguments":[{"id":905,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"6449:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6457:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":904,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6432:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"6432:31:5"},{"expression":{"arguments":[{"id":910,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"6483:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"6491:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6473:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"6473:28:5"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"5882:67:5","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":915,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:5","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:5","nodeType":"VariableDeclaration","scope":915,"src":"5986:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:5","nodeType":"VariableDeclaration","scope":915,"src":"6013:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:5","nodeType":"VariableDeclaration","scope":915,"src":"6036:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"v","nameLocation":"6066:1:5","nodeType":"VariableDeclaration","scope":915,"src":"6060:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":866,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"r","nameLocation":"6085:1:5","nodeType":"VariableDeclaration","scope":915,"src":"6077:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"s","nameLocation":"6104:1:5","nodeType":"VariableDeclaration","scope":915,"src":"6096:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:5"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"6127:0:5"},"scope":1192,"src":"5954:554:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":949,"nodeType":"Block","src":"6758:240:5","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:5","nodeType":"VariableDeclaration","scope":949,"src":"6768:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":928,"initialValue":{"arguments":[{"id":926,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"6800:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6790:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:5"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":929,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6818:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":931,"indexExpression":{"id":930,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"6829:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":932,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6840:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":934,"nodeType":"ExpressionStatement","src":"6818:31:5"},{"eventCall":{"arguments":[{"id":936,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"6881:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"6890:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6903:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":935,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6865:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"EmitStatement","src":"6860:53:5"},{"expression":{"arguments":[{"id":942,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"6942:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6955:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":945,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"6982:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":944,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6966:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"6923:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"6923:68:5"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"6514:167:5","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:5","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"account","nameLocation":"6713:7:5","nodeType":"VariableDeclaration","scope":950,"src":"6705:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:5","nodeType":"VariableDeclaration","scope":950,"src":"6722:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:5"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"6758:0:5"},"scope":1192,"src":"6686:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"7321:310:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"7335:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:5","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":976,"nodeType":"IfStatement","src":"7331:107:5","trueBody":{"id":975,"nodeType":"Block","src":"7355:83:5","statements":[{"expression":{"arguments":[{"id":967,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"7375:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":968,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"7394:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7419:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":969,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"7400:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:5","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"7400:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":966,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"7369:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8766_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":974,"nodeType":"ExpressionStatement","src":"7369:58:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"7451:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:5","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":993,"nodeType":"IfStatement","src":"7447:110:5","trueBody":{"id":992,"nodeType":"Block","src":"7469:88:5","statements":[{"expression":{"arguments":[{"id":984,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"7489:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":985,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7508:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":988,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7538:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":986,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"7519:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:5","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"7519:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":983,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"7483:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8766_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":991,"nodeType":"ExpressionStatement","src":"7483:63:5"}]}},{"expression":{"arguments":[{"arguments":[{"id":996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"7595:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":995,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"7585:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"7612:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"7602:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7617:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":994,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"7566:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"7566:58:5"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"7004:223:5","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:5","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"from","nameLocation":"7270:4:5","nodeType":"VariableDeclaration","scope":1005,"src":"7262:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"7284:2:5","nodeType":"VariableDeclaration","scope":1005,"src":"7276:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"amount","nameLocation":"7296:6:5","nodeType":"VariableDeclaration","scope":1005,"src":"7288:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:5"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"7321:0:5"},"scope":1192,"src":"7232:399:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1082,"nodeType":"Block","src":"7804:702:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7818:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1016,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7826:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7818:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"7832:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7832:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7818:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1081,"nodeType":"IfStatement","src":"7814:686:5","trueBody":{"id":1080,"nodeType":"Block","src":"7844:656:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7862:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7870:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"7870:7:5","typeDescriptions":{}}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7862:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"7858:315:5","trueBody":{"id":1049,"nodeType":"Block","src":"7882:291:5","statements":[{"assignments":[1029,1031],"declarations":[{"constant":false,"id":1029,"mutability":"mutable","name":"oldValue","nameLocation":"7909:8:5","nodeType":"VariableDeclaration","scope":1049,"src":"7901:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"7901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"newValue","nameLocation":"7927:8:5","nodeType":"VariableDeclaration","scope":1049,"src":"7919:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"7919:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1042,"initialValue":{"arguments":[{"baseExpression":{"id":1033,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7966:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":1035,"indexExpression":{"id":1034,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7987:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7966:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":1036,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8014:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":1039,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8064:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"8045:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8054:9:5","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"8045:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":1032,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"7939:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8766_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:150:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7900:189:5"},{"eventCall":{"arguments":[{"id":1044,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"8133:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8139:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1046,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8149:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8112:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8112:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"EmitStatement","src":"8107:51:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8190:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8204:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8196:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"8196:7:5","typeDescriptions":{}}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8196:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8190:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"8186:304:5","trueBody":{"id":1078,"nodeType":"Block","src":"8208:282:5","statements":[{"assignments":[1058,1060],"declarations":[{"constant":false,"id":1058,"mutability":"mutable","name":"oldValue","nameLocation":"8235:8:5","nodeType":"VariableDeclaration","scope":1078,"src":"8227:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"8227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"newValue","nameLocation":"8253:8:5","nodeType":"VariableDeclaration","scope":1078,"src":"8245:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1071,"initialValue":{"arguments":[{"baseExpression":{"id":1062,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"8292:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":1064,"indexExpression":{"id":1063,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8313:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8292:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":1065,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"8338:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":1068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8383:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1066,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"8364:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8373:9:5","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"8364:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":1061,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"8265:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8766_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8265:143:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8226:182:5"},{"eventCall":{"arguments":[{"id":1073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8452:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"8456:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1075,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"8466:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8431:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"EmitStatement","src":"8426:49:5"}]}}]}}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"7637:75:5","text":" @dev Moves delegated votes from one delegate to another."},"id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:5","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"from","nameLocation":"7753:4:5","nodeType":"VariableDeclaration","scope":1083,"src":"7745:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"to","nameLocation":"7767:2:5","nodeType":"VariableDeclaration","scope":1083,"src":"7759:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"amount","nameLocation":"7779:6:5","nodeType":"VariableDeclaration","scope":1083,"src":"7771:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:5"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"7804:0:5"},"scope":1192,"src":"7717:789:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"8662:81:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1093,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"8697:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":1095,"indexExpression":{"id":1094,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8718:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8697:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8727:6:5","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":9054,"src":"8697:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1091,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"8679:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8688:8:5","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7131,"src":"8679:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8679:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1090,"id":1099,"nodeType":"Return","src":"8672:64:5"}]},"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"8512:64:5","text":" @dev Get number of checkpoints for `account`."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8590:15:5","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"account","nameLocation":"8614:7:5","nodeType":"VariableDeclaration","scope":1101,"src":"8606:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"8606:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8605:17:5"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"8654:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1088,"name":"uint32","nodeType":"ElementaryTypeName","src":"8654:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8653:8:5"},"scope":1192,"src":"8581:162:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"8958:61:5","statements":[{"expression":{"arguments":[{"id":1116,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9008:3:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":1112,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"8975:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8766_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":1114,"indexExpression":{"id":1113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8996:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8975:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9005:2:5","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":9072,"src":"8975:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8771_memory_ptr_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8975:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":1111,"id":1118,"nodeType":"Return","src":"8968:44:5"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"8749:66:5","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8829:12:5","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"account","nameLocation":"8859:7:5","nodeType":"VariableDeclaration","scope":1120,"src":"8851:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"8851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"pos","nameLocation":"8883:3:5","nodeType":"VariableDeclaration","scope":1120,"src":"8876:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1105,"name":"uint32","nodeType":"ElementaryTypeName","src":"8876:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8841:51:5"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"8924:32:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":1109,"nodeType":"UserDefinedTypeName","pathNode":{"id":1108,"name":"Checkpoints.Checkpoint208","nameLocations":["8924:11:5","8936:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"8924:25:5"},"referencedDeclaration":8771,"src":"8924:25:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8923:34:5"},"scope":1192,"src":"8820:199:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"9228:70:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1144,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9256:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9256:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1147,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9268:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9274:6:5","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8991,"src":"9268:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8766_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9268:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":1150,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9284:5:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":1146,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"9265:2:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":1142,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9245:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9251:4:5","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":8794,"src":"9245:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8766_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$8766_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9245:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":1141,"id":1153,"nodeType":"Return","src":"9238:53:5"}]},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9034:5:5","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"store","nameLocation":"9078:5:5","nodeType":"VariableDeclaration","scope":1155,"src":"9049:34:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":1122,"nodeType":"UserDefinedTypeName","pathNode":{"id":1121,"name":"Checkpoints.Trace208","nameLocations":["9049:11:5","9061:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"9049:20:5"},"referencedDeclaration":8766,"src":"9049:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"op","nameLocation":"9143:2:5","nodeType":"VariableDeclaration","scope":1155,"src":"9093:52:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":1132,"nodeType":"FunctionTypeName","parameterTypes":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"9102:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1124,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"9111:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1126,"name":"uint208","nodeType":"ElementaryTypeName","src":"9111:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9101:18:5"},"returnParameterTypes":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"9134:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1129,"name":"uint208","nodeType":"ElementaryTypeName","src":"9134:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9133:9:5"},"src":"9093:52:5","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"delta","nameLocation":"9163:5:5","nodeType":"VariableDeclaration","scope":1155,"src":"9155:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1134,"name":"uint208","nodeType":"ElementaryTypeName","src":"9155:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9039:135:5"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"oldValue","nameLocation":"9200:8:5","nodeType":"VariableDeclaration","scope":1155,"src":"9192:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1137,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"newValue","nameLocation":"9218:8:5","nodeType":"VariableDeclaration","scope":1155,"src":"9210:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1139,"name":"uint208","nodeType":"ElementaryTypeName","src":"9210:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9191:36:5"},"scope":1192,"src":"9025:273:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1168,"nodeType":"Block","src":"9371:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9388:1:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"9392:1:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9388:5:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1163,"id":1167,"nodeType":"Return","src":"9381:12:5"}]},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9313:4:5","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"a","nameLocation":"9326:1:5","nodeType":"VariableDeclaration","scope":1169,"src":"9318:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1156,"name":"uint208","nodeType":"ElementaryTypeName","src":"9318:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"b","nameLocation":"9337:1:5","nodeType":"VariableDeclaration","scope":1169,"src":"9329:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1158,"name":"uint208","nodeType":"ElementaryTypeName","src":"9329:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9317:22:5"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"9362:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1161,"name":"uint208","nodeType":"ElementaryTypeName","src":"9362:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9361:9:5"},"scope":1192,"src":"9304:96:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1182,"nodeType":"Block","src":"9478:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"9495:1:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9499:1:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9495:5:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1177,"id":1181,"nodeType":"Return","src":"9488:12:5"}]},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9415:9:5","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"a","nameLocation":"9433:1:5","nodeType":"VariableDeclaration","scope":1183,"src":"9425:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1170,"name":"uint208","nodeType":"ElementaryTypeName","src":"9425:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"b","nameLocation":"9444:1:5","nodeType":"VariableDeclaration","scope":1183,"src":"9436:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1172,"name":"uint208","nodeType":"ElementaryTypeName","src":"9436:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9424:22:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"9469:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1175,"name":"uint208","nodeType":"ElementaryTypeName","src":"9469:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9468:9:5"},"scope":1192,"src":"9406:101:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"9513:72:5","text":" @dev Must return the voting units held by an account."},"id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9599:15:5","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"9615:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9614:9:5"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"9655:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9654:9:5"},"scope":1192,"src":"9590:74:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1193,"src":"1892:7774:5","usedErrors":[570,696,703,3189,3382,3384,4040,4045,4050,6330,8237],"usedEvents":[579,588,1287]}],"src":"109:9558:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1274],"IERC165":[4714],"IERC20":[2063]},"id":1275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1194,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1275,"sourceUnit":1283,"src":"133:36:6","symbolAliases":[{"foreign":{"id":1195,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"141:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1275,"sourceUnit":1279,"src":"170:38:6","symbolAliases":[{"foreign":{"id":1197,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"178:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1200,"name":"IERC20","nameLocations":["590:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"590:6:6"},"id":1201,"nodeType":"InheritanceSpecifier","src":"590:6:6"},{"baseName":{"id":1202,"name":"IERC165","nameLocations":["598:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"598:7:6"},"id":1203,"nodeType":"InheritanceSpecifier","src":"598:7:6"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"210:357:6","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1274,"linearizedBaseContracts":[1274,4714,2063],"name":"IERC1363","nameLocation":"578:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"1148:370:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1213,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:6","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"to","nameLocation":"1556:2:6","nodeType":"VariableDeclaration","scope":1213,"src":"1548:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"value","nameLocation":"1568:5:6","nodeType":"VariableDeclaration","scope":1213,"src":"1560:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:6"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"1593:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1210,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:6"},"scope":1274,"src":"1523:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"1605:453:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1225,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:6","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"to","nameLocation":"2096:2:6","nodeType":"VariableDeclaration","scope":1225,"src":"2088:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"value","nameLocation":"2108:5:6","nodeType":"VariableDeclaration","scope":1225,"src":"2100:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"2130:4:6","nodeType":"VariableDeclaration","scope":1225,"src":"2115:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"2154:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:6"},"scope":1274,"src":"2063:97:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"2166:453:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1237,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:6","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"from","nameLocation":"2661:4:6","nodeType":"VariableDeclaration","scope":1237,"src":"2653:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"to","nameLocation":"2675:2:6","nodeType":"VariableDeclaration","scope":1237,"src":"2667:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"value","nameLocation":"2687:5:6","nodeType":"VariableDeclaration","scope":1237,"src":"2679:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:6"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"2712:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:6"},"scope":1274,"src":"2624:94:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"2724:536:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1251,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:6","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"from","nameLocation":"3302:4:6","nodeType":"VariableDeclaration","scope":1251,"src":"3294:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"to","nameLocation":"3316:2:6","nodeType":"VariableDeclaration","scope":1251,"src":"3308:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"3328:5:6","nodeType":"VariableDeclaration","scope":1251,"src":"3320:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"data","nameLocation":"3350:4:6","nodeType":"VariableDeclaration","scope":1251,"src":"3335:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1245,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:6"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"3374:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:6"},"scope":1274,"src":"3265:115:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"3386:390:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1261,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:6","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"spender","nameLocation":"3813:7:6","nodeType":"VariableDeclaration","scope":1261,"src":"3805:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"value","nameLocation":"3830:5:6","nodeType":"VariableDeclaration","scope":1261,"src":"3822:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:6"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3855:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:6"},"scope":1274,"src":"3781:80:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3867:478:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1273,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:6","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"spender","nameLocation":"4382:7:6","nodeType":"VariableDeclaration","scope":1273,"src":"4374:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"value","nameLocation":"4399:5:6","nodeType":"VariableDeclaration","scope":1273,"src":"4391:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"data","nameLocation":"4421:4:6","nodeType":"VariableDeclaration","scope":1273,"src":"4406:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:6"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1273,"src":"4445:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1270,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:6"},"scope":1274,"src":"4350:101:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1275,"src":"568:3885:6","usedErrors":[],"usedEvents":[1997,2006]}],"src":"107:4347:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4714]},"id":1279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1276,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1279,"sourceUnit":4715,"src":"132:59:7","symbolAliases":[{"foreign":{"id":1277,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"140:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2063]},"id":1283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1280,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1283,"sourceUnit":2064,"src":"131:49:8","symbolAliases":[{"foreign":{"id":1281,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1307]},"id":1308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1284,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1307,"linearizedBaseContracts":[1307],"name":"IERC5267","nameLocation":"143:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"158:84:9","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1287,"name":"EIP712DomainChanged","nameLocation":"253:19:9","nodeType":"EventDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"272:2:9"},"src":"247:28:9"},{"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"281:140:9","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1306,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:9","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"447:2:9"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"fields","nameLocation":"517:6:9","nodeType":"VariableDeclaration","scope":1306,"src":"510:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1290,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"name","nameLocation":"551:4:9","nodeType":"VariableDeclaration","scope":1306,"src":"537:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1292,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"version","nameLocation":"583:7:9","nodeType":"VariableDeclaration","scope":1306,"src":"569:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1294,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"chainId","nameLocation":"612:7:9","nodeType":"VariableDeclaration","scope":1306,"src":"604:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:9","nodeType":"VariableDeclaration","scope":1306,"src":"633:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"salt","nameLocation":"680:4:9","nodeType":"VariableDeclaration","scope":1306,"src":"672:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"extensions","nameLocation":"715:10:9","nodeType":"VariableDeclaration","scope":1306,"src":"698:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ArrayTypeName","src":"698:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:9"},"scope":1307,"src":"426:310:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1308,"src":"133:605:9","usedErrors":[],"usedEvents":[1287]}],"src":"107:632:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[1318],"IERC6372":[1333],"IVotes":[645]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1309,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":1311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":646,"src":"133:54:10","symbolAliases":[{"foreign":{"id":1310,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"141:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":1313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":1334,"src":"188:40:10","symbolAliases":[{"foreign":{"id":1312,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"196:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1314,"name":"IERC6372","nameLocations":["252:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1333,"src":"252:8:10"},"id":1315,"nodeType":"InheritanceSpecifier","src":"252:8:10"},{"baseName":{"id":1316,"name":"IVotes","nameLocations":["262:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":645,"src":"262:6:10"},"id":1317,"nodeType":"InheritanceSpecifier","src":"262:6:10"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318,645,1333],"name":"IERC5805","nameLocation":"240:8:10","nodeType":"ContractDefinition","nodes":[],"scope":1319,"src":"230:41:10","usedErrors":[570],"usedEvents":[579,588]}],"src":"107:165:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[1333]},"id":1334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1333,"linearizedBaseContracts":[1333],"name":"IERC6372","nameLocation":"143:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"158:133:11","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1326,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:11","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"310:2:11"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"336:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1323,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:11"},"scope":1333,"src":"296:48:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"350:48:11","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1332,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:11","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"475:2:11"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"501:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1329,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:11"},"scope":1333,"src":"456:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1334,"src":"133:385:11","usedErrors":[],"usedEvents":[]}],"src":"107:412:11"},"id":11},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1470],"IERC20Errors":[1375],"IERC721Errors":[1423]},"id":1471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1335,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"138:141:12","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1375,"linearizedBaseContracts":[1375],"name":"IERC20Errors","nameLocation":"290:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"309:309:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1345,"name":"ERC20InsufficientBalance","nameLocation":"629:24:12","nodeType":"ErrorDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"sender","nameLocation":"662:6:12","nodeType":"VariableDeclaration","scope":1345,"src":"654:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"balance","nameLocation":"678:7:12","nodeType":"VariableDeclaration","scope":1345,"src":"670:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"needed","nameLocation":"695:6:12","nodeType":"VariableDeclaration","scope":1345,"src":"687:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:12"},"src":"623:80:12"},{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"709:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1350,"name":"ERC20InvalidSender","nameLocation":"872:18:12","nodeType":"ErrorDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"sender","nameLocation":"899:6:12","nodeType":"VariableDeclaration","scope":1350,"src":"891:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:12"},"src":"866:41:12"},{"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"913:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1355,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:12","nodeType":"ErrorDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:12","nodeType":"VariableDeclaration","scope":1355,"src":"1104:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:12"},"src":"1077:45:12"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"1128:345:12","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1364,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:12","nodeType":"ErrorDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"spender","nameLocation":"1519:7:12","nodeType":"VariableDeclaration","scope":1364,"src":"1511:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:12","nodeType":"VariableDeclaration","scope":1364,"src":"1528:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"needed","nameLocation":"1555:6:12","nodeType":"VariableDeclaration","scope":1364,"src":"1547:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:12"},"src":"1478:85:12"},{"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"1569:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1369,"name":"ERC20InvalidApprover","nameLocation":"1754:20:12","nodeType":"ErrorDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"approver","nameLocation":"1783:8:12","nodeType":"VariableDeclaration","scope":1369,"src":"1775:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:12"},"src":"1748:45:12"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"1799:195:12","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1374,"name":"ERC20InvalidSpender","nameLocation":"2005:19:12","nodeType":"ErrorDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"spender","nameLocation":"2033:7:12","nodeType":"VariableDeclaration","scope":1374,"src":"2025:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:12"},"src":"1999:43:12"}],"scope":1471,"src":"280:1764:12","usedErrors":[1345,1350,1355,1364,1369,1374],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"2046:143:12","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1423,"linearizedBaseContracts":[1423],"name":"IERC721Errors","nameLocation":"2200:13:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"2220:219:12","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1381,"name":"ERC721InvalidOwner","nameLocation":"2450:18:12","nodeType":"ErrorDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"owner","nameLocation":"2477:5:12","nodeType":"VariableDeclaration","scope":1381,"src":"2469:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:12"},"src":"2444:40:12"},{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"2490:132:12","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1386,"name":"ERC721NonexistentToken","nameLocation":"2633:22:12","nodeType":"ErrorDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:12","nodeType":"VariableDeclaration","scope":1386,"src":"2656:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:12"},"src":"2627:46:12"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"2679:289:12","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1395,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:12","nodeType":"ErrorDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"sender","nameLocation":"3008:6:12","nodeType":"VariableDeclaration","scope":1395,"src":"3000:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:12","nodeType":"VariableDeclaration","scope":1395,"src":"3016:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"owner","nameLocation":"3041:5:12","nodeType":"VariableDeclaration","scope":1395,"src":"3033:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:12"},"src":"2973:75:12"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"3054:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1400,"name":"ERC721InvalidSender","nameLocation":"3217:19:12","nodeType":"ErrorDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"sender","nameLocation":"3245:6:12","nodeType":"VariableDeclaration","scope":1400,"src":"3237:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:12"},"src":"3211:42:12"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"3259:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1405,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:12","nodeType":"ErrorDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:12","nodeType":"VariableDeclaration","scope":1405,"src":"3451:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:12"},"src":"3423:46:12"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"3475:247:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1412,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:12","nodeType":"ErrorDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"operator","nameLocation":"3768:8:12","nodeType":"VariableDeclaration","scope":1412,"src":"3760:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:12","nodeType":"VariableDeclaration","scope":1412,"src":"3778:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:12"},"src":"3727:68:12"},{"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"3801:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1417,"name":"ERC721InvalidApprover","nameLocation":"3986:21:12","nodeType":"ErrorDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"approver","nameLocation":"4016:8:12","nodeType":"VariableDeclaration","scope":1417,"src":"4008:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:12"},"src":"3980:46:12"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"4032:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1422,"name":"ERC721InvalidOperator","nameLocation":"4240:21:12","nodeType":"ErrorDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"operator","nameLocation":"4270:8:12","nodeType":"VariableDeclaration","scope":1422,"src":"4262:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:12"},"src":"4234:46:12"}],"scope":1471,"src":"2190:2092:12","usedErrors":[1381,1386,1395,1400,1405,1412,1417,1422],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"4284:145:12","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1470,"linearizedBaseContracts":[1470],"name":"IERC1155Errors","nameLocation":"4440:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"4461:361:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1435,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:12","nodeType":"ErrorDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"sender","nameLocation":"4868:6:12","nodeType":"VariableDeclaration","scope":1435,"src":"4860:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"balance","nameLocation":"4884:7:12","nodeType":"VariableDeclaration","scope":1435,"src":"4876:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"needed","nameLocation":"4901:6:12","nodeType":"VariableDeclaration","scope":1435,"src":"4893:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:12","nodeType":"VariableDeclaration","scope":1435,"src":"4909:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:12"},"src":"4827:99:12"},{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"4932:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1440,"name":"ERC1155InvalidSender","nameLocation":"5095:20:12","nodeType":"ErrorDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"sender","nameLocation":"5124:6:12","nodeType":"VariableDeclaration","scope":1440,"src":"5116:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:12"},"src":"5089:43:12"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"5138:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1445,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:12","nodeType":"ErrorDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:12","nodeType":"VariableDeclaration","scope":1445,"src":"5331:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:12"},"src":"5302:47:12"},{"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"5355:256:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1452,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:12","nodeType":"ErrorDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"operator","nameLocation":"5659:8:12","nodeType":"VariableDeclaration","scope":1452,"src":"5651:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"owner","nameLocation":"5677:5:12","nodeType":"VariableDeclaration","scope":1452,"src":"5669:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:12"},"src":"5616:68:12"},{"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"5690:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1457,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:12","nodeType":"ErrorDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"approver","nameLocation":"5906:8:12","nodeType":"VariableDeclaration","scope":1457,"src":"5898:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:12"},"src":"5869:47:12"},{"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"5922:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1462,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:12","nodeType":"ErrorDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"operator","nameLocation":"6161:8:12","nodeType":"VariableDeclaration","scope":1462,"src":"6153:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:12"},"src":"6124:47:12"},{"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"6177:280:12","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1469,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:12","nodeType":"ErrorDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:12","nodeType":"VariableDeclaration","scope":1469,"src":"6494:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:12","nodeType":"VariableDeclaration","scope":1469,"src":"6513:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:12"},"src":"6462:73:12"}],"scope":1471,"src":"4430:2107:12","usedErrors":[1435,1440,1445,1452,1457,1462,1469],"usedEvents":[]}],"src":"112:6426:12"},"id":12},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3157],"ERC20":[1985],"IERC20":[2063],"IERC20Errors":[1375],"IERC20Metadata":[2421]},"id":1986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1472,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1986,"sourceUnit":2064,"src":"131:36:13","symbolAliases":[{"foreign":{"id":1473,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"139:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1986,"sourceUnit":2422,"src":"168:63:13","symbolAliases":[{"foreign":{"id":1475,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"176:14:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1986,"sourceUnit":3158,"src":"232:48:13","symbolAliases":[{"foreign":{"id":1477,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"240:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1986,"sourceUnit":1471,"src":"281:65:13","symbolAliases":[{"foreign":{"id":1479,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"289:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1482,"name":"Context","nameLocations":["1133:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"1133:7:13"},"id":1483,"nodeType":"InheritanceSpecifier","src":"1133:7:13"},{"baseName":{"id":1484,"name":"IERC20","nameLocations":["1142:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"1142:6:13"},"id":1485,"nodeType":"InheritanceSpecifier","src":"1142:6:13"},{"baseName":{"id":1486,"name":"IERC20Metadata","nameLocations":["1150:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"1150:14:13"},"id":1487,"nodeType":"InheritanceSpecifier","src":"1150:14:13"},{"baseName":{"id":1488,"name":"IERC20Errors","nameLocations":["1166:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1375,"src":"1166:12:13"},"id":1489,"nodeType":"InheritanceSpecifier","src":"1166:12:13"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"348:757:13","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1985,"linearizedBaseContracts":[1985,1375,2421,2063,3157],"name":"ERC20","nameLocation":"1124:5:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1493,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:13","nodeType":"VariableDeclaration","scope":1985,"src":"1185:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1492,"keyName":"account","keyNameLocation":"1201:7:13","keyType":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1499,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:13","nodeType":"VariableDeclaration","scope":1985,"src":"1245:83:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1498,"keyName":"account","keyNameLocation":"1261:7:13","keyType":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1497,"keyName":"spender","keyNameLocation":"1288:7:13","keyType":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1501,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:13","nodeType":"VariableDeclaration","scope":1985,"src":"1335:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1503,"mutability":"mutable","name":"_name","nameLocation":"1385:5:13","nodeType":"VariableDeclaration","scope":1985,"src":"1370:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1505,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:13","nodeType":"VariableDeclaration","scope":1985,"src":"1396:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1521,"nodeType":"Block","src":"1657:57:13","statements":[{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1513,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1667:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1514,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"1675:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1516,"nodeType":"ExpressionStatement","src":"1667:13:13"},{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1517,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1690:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1518,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1700:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1520,"nodeType":"ExpressionStatement","src":"1690:17:13"}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"1425:171:13","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1522,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"name_","nameLocation":"1627:5:13","nodeType":"VariableDeclaration","scope":1522,"src":"1613:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1507,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:13","nodeType":"VariableDeclaration","scope":1522,"src":"1634:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1509,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:13"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"1657:0:13"},"scope":1985,"src":"1601:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2408],"body":{"id":1530,"nodeType":"Block","src":"1839:29:13","statements":[{"expression":{"id":1528,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1856:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1527,"id":1529,"nodeType":"Return","src":"1849:12:13"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"1720:54:13","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:13","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[],"src":"1792:2:13"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"1824:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1525,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:13"},"scope":1985,"src":"1779:89:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2414],"body":{"id":1539,"nodeType":"Block","src":"2043:31:13","statements":[{"expression":{"id":1537,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"2060:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1536,"id":1538,"nodeType":"Return","src":"2053:14:13"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1874:102:13","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:13","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"1996:2:13"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"2028:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1534,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:13"},"scope":1985,"src":"1981:93:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2420],"body":{"id":1548,"nodeType":"Block","src":"2763:26:13","statements":[{"expression":{"hexValue":"3138","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1545,"id":1547,"nodeType":"Return","src":"2773:9:13"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"2080:622:13","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:13","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"2724:2:13"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"2756:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1543,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:13"},"scope":1985,"src":"2707:82:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2012],"body":{"id":1557,"nodeType":"Block","src":"2910:36:13","statements":[{"expression":{"id":1555,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2927:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1554,"id":1556,"nodeType":"Return","src":"2920:19:13"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"2795:49:13","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:13","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"2869:2:13"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1558,"src":"2901:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:13"},"scope":1985,"src":"2849:97:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2020],"body":{"id":1570,"nodeType":"Block","src":"3078:42:13","statements":[{"expression":{"baseExpression":{"id":1566,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3095:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1568,"indexExpression":{"id":1567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"3105:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1565,"id":1569,"nodeType":"Return","src":"3088:25:13"}]},"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"2952:47:13","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:13","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"account","nameLocation":"3031:7:13","nodeType":"VariableDeclaration","scope":1571,"src":"3023:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:13"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"3069:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:13"},"scope":1985,"src":"3004:116:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2030],"body":{"id":1594,"nodeType":"Block","src":"3390:103:13","statements":[{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"owner","nameLocation":"3408:5:13","nodeType":"VariableDeclaration","scope":1594,"src":"3400:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1585,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1583,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"3416:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:13"},{"expression":{"arguments":[{"id":1587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"3448:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"3455:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"3459:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"3438:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"3438:27:13"},{"expression":{"hexValue":"74727565","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1580,"id":1593,"nodeType":"Return","src":"3475:11:13"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"3126:184:13","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:13","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"to","nameLocation":"3341:2:13","nodeType":"VariableDeclaration","scope":1595,"src":"3333:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"value","nameLocation":"3353:5:13","nodeType":"VariableDeclaration","scope":1595,"src":"3345:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:13"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"3384:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1578,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:13"},"scope":1985,"src":"3315:178:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2040],"body":{"id":1611,"nodeType":"Block","src":"3640:51:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1605,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3657:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1607,"indexExpression":{"id":1606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3669:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1609,"indexExpression":{"id":1608,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3676:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1604,"id":1610,"nodeType":"Return","src":"3650:34:13"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"3499:47:13","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:13","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"owner","nameLocation":"3578:5:13","nodeType":"VariableDeclaration","scope":1612,"src":"3570:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"spender","nameLocation":"3593:7:13","nodeType":"VariableDeclaration","scope":1612,"src":"3585:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:13"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"3631:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:13"},"scope":1985,"src":"3551:140:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2050],"body":{"id":1635,"nodeType":"Block","src":"4077:107:13","statements":[{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"owner","nameLocation":"4095:5:13","nodeType":"VariableDeclaration","scope":1635,"src":"4087:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1626,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1624,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4103:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:13"},{"expression":{"arguments":[{"id":1628,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4134:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"4141:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4150:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1627,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1876,1936],"referencedDeclaration":1876,"src":"4125:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"4125:31:13"},{"expression":{"hexValue":"74727565","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1621,"id":1634,"nodeType":"Return","src":"4166:11:13"}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"3697:296:13","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:13","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"spender","nameLocation":"4023:7:13","nodeType":"VariableDeclaration","scope":1636,"src":"4015:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"value","nameLocation":"4040:5:13","nodeType":"VariableDeclaration","scope":1636,"src":"4032:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:13"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"4071:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1619,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:13"},"scope":1985,"src":"3998:186:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2062],"body":{"id":1667,"nodeType":"Block","src":"4869:151:13","statements":[{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"spender","nameLocation":"4887:7:13","nodeType":"VariableDeclaration","scope":1667,"src":"4879:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1650,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4897:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:13"},{"expression":{"arguments":[{"id":1654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4935:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"4941:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"4950:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1653,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"4919:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"ExpressionStatement","src":"4919:37:13"},{"expression":{"arguments":[{"id":1660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4976:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"4982:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"4986:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"4966:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"4966:26:13"},{"expression":{"hexValue":"74727565","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1647,"id":1666,"nodeType":"Return","src":"5002:11:13"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"4190:581:13","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:13","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"from","nameLocation":"4806:4:13","nodeType":"VariableDeclaration","scope":1668,"src":"4798:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"to","nameLocation":"4820:2:13","nodeType":"VariableDeclaration","scope":1668,"src":"4812:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"value","nameLocation":"4832:5:13","nodeType":"VariableDeclaration","scope":1668,"src":"4824:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:13"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"4863:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1645,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:13"},"scope":1985,"src":"4776:244:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1714,"nodeType":"Block","src":"5462:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5476:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:13","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"nodeType":"IfStatement","src":"5472:86:13","trueBody":{"id":1691,"nodeType":"Block","src":"5496:62:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:13","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1684,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"5517:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"RevertStatement","src":"5510:37:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5571:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:13","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1707,"nodeType":"IfStatement","src":"5567:86:13","trueBody":{"id":1706,"nodeType":"Block","src":"5589:64:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:13","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1699,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"5610:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"RevertStatement","src":"5603:39:13"}]}},{"expression":{"arguments":[{"id":1709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5670:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5676:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5680:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1708,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5662:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"5662:24:13"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"5026:362:13","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:13","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"from","nameLocation":"5420:4:13","nodeType":"VariableDeclaration","scope":1715,"src":"5412:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"to","nameLocation":"5434:2:13","nodeType":"VariableDeclaration","scope":1715,"src":"5426:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"value","nameLocation":"5446:5:13","nodeType":"VariableDeclaration","scope":1715,"src":"5438:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:13"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"5462:0:13"},"scope":1985,"src":"5393:300:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"6083:1032:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6097:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:13","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1762,"nodeType":"Block","src":"6271:362:13","statements":[{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:13","nodeType":"VariableDeclaration","scope":1762,"src":"6285:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1741,"initialValue":{"baseExpression":{"id":1738,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6307:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1740,"indexExpression":{"id":1739,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6317:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"6340:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6354:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"nodeType":"IfStatement","src":"6336:115:13","trueBody":{"id":1751,"nodeType":"Block","src":"6361:90:13","statements":[{"errorCall":{"arguments":[{"id":1746,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6411:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1747,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"6417:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6430:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1745,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6386:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"RevertStatement","src":"6379:57:13"}]}},{"id":1761,"nodeType":"UncheckedBlock","src":"6464:159:13","statements":[{"expression":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1753,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6571:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1755,"indexExpression":{"id":1754,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6581:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"6589:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6603:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1760,"nodeType":"ExpressionStatement","src":"6571:37:13"}]}]},"id":1763,"nodeType":"IfStatement","src":"6093:540:13","trueBody":{"id":1735,"nodeType":"Block","src":"6117:148:13","statements":[{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"6233:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6249:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"6233:21:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"6647:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:13","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1783,"nodeType":"Block","src":"6862:206:13","statements":[{"id":1782,"nodeType":"UncheckedBlock","src":"6876:182:13","statements":[{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1776,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"7021:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1778,"indexExpression":{"id":1777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"7031:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7038:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"nodeType":"ExpressionStatement","src":"7021:22:13"}]}]},"id":1784,"nodeType":"IfStatement","src":"6643:425:13","trueBody":{"id":1775,"nodeType":"Block","src":"6665:191:13","statements":[{"id":1774,"nodeType":"UncheckedBlock","src":"6679:167:13","statements":[{"expression":{"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1770,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"6810:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6826:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1773,"nodeType":"ExpressionStatement","src":"6810:21:13"}]}]}},{"eventCall":{"arguments":[{"id":1786,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"7092:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1787,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"7098:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7102:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7083:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"EmitStatement","src":"7078:30:13"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"5699:304:13","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:13","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"from","nameLocation":"6033:4:13","nodeType":"VariableDeclaration","scope":1792,"src":"6025:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"to","nameLocation":"6047:2:13","nodeType":"VariableDeclaration","scope":1792,"src":"6039:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"value","nameLocation":"6059:5:13","nodeType":"VariableDeclaration","scope":1792,"src":"6051:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:13"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"6083:0:13"},"scope":1985,"src":"6008:1107:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"7514:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"7528:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:13","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"7524:91:13","trueBody":{"id":1813,"nodeType":"Block","src":"7551:64:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:13","typeDescriptions":{}}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1806,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"7572:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"RevertStatement","src":"7565:39:13"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:13","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"7644:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"7653:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7624:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"7624:35:13"}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"7121:332:13","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:13","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"account","nameLocation":"7481:7:13","nodeType":"VariableDeclaration","scope":1825,"src":"7473:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"value","nameLocation":"7498:5:13","nodeType":"VariableDeclaration","scope":1825,"src":"7490:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:13"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"7514:0:13"},"scope":1985,"src":"7458:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"8040:150:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"8054:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:13","typeDescriptions":{}}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1847,"nodeType":"IfStatement","src":"8050:89:13","trueBody":{"id":1846,"nodeType":"Block","src":"8077:62:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:13","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1839,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"8098:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"RevertStatement","src":"8091:37:13"}]}},{"expression":{"arguments":[{"id":1849,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"8156:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:13","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"8177:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"8148:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"ExpressionStatement","src":"8148:35:13"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"7672:307:13","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:13","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"account","nameLocation":"8007:7:13","nodeType":"VariableDeclaration","scope":1858,"src":"7999:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"8024:5:13","nodeType":"VariableDeclaration","scope":1858,"src":"8016:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:13"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"8040:0:13"},"scope":1985,"src":"7984:206:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"8800:54:13","statements":[{"expression":{"arguments":[{"id":1869,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"8819:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8826:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1868,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1876,1936],"referencedDeclaration":1936,"src":"8810:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"8810:37:13"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"8196:525:13","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:13","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"owner","nameLocation":"8752:5:13","nodeType":"VariableDeclaration","scope":1876,"src":"8744:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"spender","nameLocation":"8767:7:13","nodeType":"VariableDeclaration","scope":1876,"src":"8759:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"value","nameLocation":"8784:5:13","nodeType":"VariableDeclaration","scope":1876,"src":"8776:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:13"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[],"src":"8800:0:13"},"scope":1985,"src":"8726:128:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1935,"nodeType":"Block","src":"9799:334:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"9813:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:13","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"9809:89:13","trueBody":{"id":1901,"nodeType":"Block","src":"9834:64:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:13","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1894,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"9855:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"RevertStatement","src":"9848:39:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"9911:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:13","typeDescriptions":{}}},"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"IfStatement","src":"9907:90:13","trueBody":{"id":1916,"nodeType":"Block","src":"9934:63:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:13","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1909,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9955:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"RevertStatement","src":"9948:38:13"}]}},{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1918,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"10006:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1921,"indexExpression":{"id":1919,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"10018:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1922,"indexExpression":{"id":1920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"10025:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"10036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"10006:35:13"},{"condition":{"id":1926,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"10055:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"10051:76:13","trueBody":{"id":1933,"nodeType":"Block","src":"10066:61:13","statements":[{"eventCall":{"arguments":[{"id":1928,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"10094:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1929,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"10101:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"10110:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10085:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"EmitStatement","src":"10080:36:13"}]}}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"8860:836:13","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:13","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"owner","nameLocation":"9727:5:13","nodeType":"VariableDeclaration","scope":1936,"src":"9719:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"spender","nameLocation":"9742:7:13","nodeType":"VariableDeclaration","scope":1936,"src":"9734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"value","nameLocation":"9759:5:13","nodeType":"VariableDeclaration","scope":1936,"src":"9751:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:13","nodeType":"VariableDeclaration","scope":1936,"src":"9766:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1884,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:13"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"9799:0:13"},"scope":1985,"src":"9701:432:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1983,"nodeType":"Block","src":"10504:388:13","statements":[{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:13","nodeType":"VariableDeclaration","scope":1983,"src":"10514:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1952,"initialValue":{"arguments":[{"id":1949,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"10551:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"10558:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1948,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"10541:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10580:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1954,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10600:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:13","memberName":"max","nodeType":"MemberAccess","src":"10600:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1982,"nodeType":"IfStatement","src":"10576:310:13","trueBody":{"id":1981,"nodeType":"Block","src":"10619:267:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10637:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"10656:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"10633:130:13","trueBody":{"id":1969,"nodeType":"Block","src":"10663:100:13","statements":[{"errorCall":{"arguments":[{"id":1964,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"10715:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10724:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"10742:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"10688:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"RevertStatement","src":"10681:67:13"}]}},{"id":1980,"nodeType":"UncheckedBlock","src":"10776:100:13","statements":[{"expression":{"arguments":[{"id":1972,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"10813:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"10820:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10829:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"10848:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1971,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1876,1936],"referencedDeclaration":1936,"src":"10804:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1979,"nodeType":"ExpressionStatement","src":"10804:57:13"}]}]}}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"10139:271:13","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:13","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"owner","nameLocation":"10448:5:13","nodeType":"VariableDeclaration","scope":1984,"src":"10440:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"spender","nameLocation":"10463:7:13","nodeType":"VariableDeclaration","scope":1984,"src":"10455:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"value","nameLocation":"10480:5:13","nodeType":"VariableDeclaration","scope":1984,"src":"10472:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:13"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"10504:0:13"},"scope":1985,"src":"10415:477:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1986,"src":"1106:9788:13","usedErrors":[1345,1350,1355,1364,1369,1374],"usedEvents":[1997,2006]}],"src":"105:10790:13"},"id":13},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2063]},"id":2064,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"132:71:14","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2063,"linearizedBaseContracts":[2063],"name":"IERC20","nameLocation":"214:6:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"227:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1997,"name":"Transfer","nameLocation":"396:8:14","nodeType":"EventDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:14","nodeType":"VariableDeclaration","scope":1997,"src":"405:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1993,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:14","nodeType":"VariableDeclaration","scope":1997,"src":"427:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:14","nodeType":"VariableDeclaration","scope":1997,"src":"447:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:14"},"src":"390:72:14"},{"anonymous":false,"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"468:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2006,"name":"Approval","nameLocation":"627:8:14","nodeType":"EventDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:14","nodeType":"VariableDeclaration","scope":2006,"src":"636:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:14","nodeType":"VariableDeclaration","scope":2006,"src":"659:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:14","nodeType":"VariableDeclaration","scope":2006,"src":"684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:14"},"src":"621:78:14"},{"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"705:65:14","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2012,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:14","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"795:2:14"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2012,"src":"821:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:14"},"scope":2063,"src":"775:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"836:71:14","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2020,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:14","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"account","nameLocation":"939:7:14","nodeType":"VariableDeclaration","scope":2020,"src":"931:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:14"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"971:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:14"},"scope":2063,"src":"912:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"986:213:14","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2030,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:14","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"to","nameLocation":"1230:2:14","nodeType":"VariableDeclaration","scope":2030,"src":"1222:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"value","nameLocation":"1242:5:14","nodeType":"VariableDeclaration","scope":2030,"src":"1234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:14"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"1267:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2027,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:14"},"scope":2063,"src":"1204:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"1279:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2040,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:14","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"owner","nameLocation":"1575:5:14","nodeType":"VariableDeclaration","scope":2040,"src":"1567:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"spender","nameLocation":"1590:7:14","nodeType":"VariableDeclaration","scope":2040,"src":"1582:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:14"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"1622:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:14"},"scope":2063,"src":"1548:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"1637:667:14","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2050,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:14","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"spender","nameLocation":"2334:7:14","nodeType":"VariableDeclaration","scope":2050,"src":"2326:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"value","nameLocation":"2351:5:14","nodeType":"VariableDeclaration","scope":2050,"src":"2343:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:14"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"2376:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2047,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:14"},"scope":2063,"src":"2309:73:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"2388:297:14","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2062,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:14","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"from","nameLocation":"2720:4:14","nodeType":"VariableDeclaration","scope":2062,"src":"2712:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"to","nameLocation":"2734:2:14","nodeType":"VariableDeclaration","scope":2062,"src":"2726:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"value","nameLocation":"2746:5:14","nodeType":"VariableDeclaration","scope":2062,"src":"2738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:14"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"2771:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:14"},"scope":2063,"src":"2690:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2064,"src":"204:2575:14","usedErrors":[],"usedEvents":[1997,2006]}],"src":"106:2674:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[3157],"ERC20":[1985],"ERC20Burnable":[2109]},"id":2110,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2065,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2067,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2110,"sourceUnit":1986,"src":"150:35:15","symbolAliases":[{"foreign":{"id":2066,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"158:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2110,"sourceUnit":3158,"src":"186:51:15","symbolAliases":[{"foreign":{"id":2068,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"194:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2071,"name":"Context","nameLocations":["483:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"483:7:15"},"id":2072,"nodeType":"InheritanceSpecifier","src":"483:7:15"},{"baseName":{"id":2073,"name":"ERC20","nameLocations":["492:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"492:5:15"},"id":2074,"nodeType":"InheritanceSpecifier","src":"492:5:15"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"239:208:15","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":2109,"linearizedBaseContracts":[2109,1985,1375,2421,2063,3157],"name":"ERC20Burnable","nameLocation":"466:13:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2086,"nodeType":"Block","src":"662:43:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"678:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"692:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2080,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2085,"nodeType":"ExpressionStatement","src":"672:26:15"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"504:109:15","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:15","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"value","nameLocation":"640:5:15","nodeType":"VariableDeclaration","scope":2087,"src":"632:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:15"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"662:0:15"},"scope":2109,"src":"618:87:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2107,"nodeType":"Block","src":"1086:93:15","statements":[{"expression":{"arguments":[{"id":2096,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1112:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2097,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1121:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1135:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1096:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"1096:45:15"},{"expression":{"arguments":[{"id":2103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1157:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1166:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"1151:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2106,"nodeType":"ExpressionStatement","src":"1151:21:15"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"711:305:15","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:15","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"account","nameLocation":"1047:7:15","nodeType":"VariableDeclaration","scope":2108,"src":"1039:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"value","nameLocation":"1064:5:15","nodeType":"VariableDeclaration","scope":2108,"src":"1056:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:15"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"1086:0:15"},"scope":2109,"src":"1021:158:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2110,"src":"448:733:15","usedErrors":[1345,1350,1355,1364,1369,1374],"usedEvents":[1997,2006]}],"src":"124:1058:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4377],"EIP712":[4604],"ERC20":[1985],"ERC20Permit":[2263],"IERC20Permit":[2457],"Nonces":[3247]},"id":2264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2111,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":2113,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":2458,"src":"148:48:16","symbolAliases":[{"foreign":{"id":2112,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"156:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":1986,"src":"197:35:16","symbolAliases":[{"foreign":{"id":2114,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"205:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":2117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":4378,"src":"233:60:16","symbolAliases":[{"foreign":{"id":2116,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"241:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":2119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":4605,"src":"294:62:16","symbolAliases":[{"foreign":{"id":2118,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"302:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":2121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":3248,"src":"357:49:16","symbolAliases":[{"foreign":{"id":2120,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"365:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2123,"name":"ERC20","nameLocations":["931:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"931:5:16"},"id":2124,"nodeType":"InheritanceSpecifier","src":"931:5:16"},{"baseName":{"id":2125,"name":"IERC20Permit","nameLocations":["938:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"938:12:16"},"id":2126,"nodeType":"InheritanceSpecifier","src":"938:12:16"},{"baseName":{"id":2127,"name":"EIP712","nameLocations":["952:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":4604,"src":"952:6:16"},"id":2128,"nodeType":"InheritanceSpecifier","src":"952:6:16"},{"baseName":{"id":2129,"name":"Nonces","nameLocations":["960:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3247,"src":"960:6:16"},"id":2130,"nodeType":"InheritanceSpecifier","src":"960:6:16"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"408:489:16","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2263,"linearizedBaseContracts":[2263,3247,4604,1307,2457,1985,1375,2421,2063,3157],"name":"ERC20Permit","nameLocation":"916:11:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2135,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:16","nodeType":"VariableDeclaration","scope":2263,"src":"973:146:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"1024:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"1126:52:16","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":2140,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:16","nodeType":"ErrorDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:16","nodeType":"VariableDeclaration","scope":2140,"src":"1213:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:16"},"src":"1183:48:16"},{"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"1237:45:16","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":2147,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:16","nodeType":"ErrorDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"signer","nameLocation":"1322:6:16","nodeType":"VariableDeclaration","scope":2147,"src":"1314:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"owner","nameLocation":"1338:5:16","nodeType":"VariableDeclaration","scope":2147,"src":"1330:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:16"},"src":"1287:58:16"},{"body":{"id":2157,"nodeType":"Block","src":"1627:2:16","statements":[]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"1351:221:16","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":2158,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2153,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"1616:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":2155,"kind":"baseConstructorSpecifier","modifierName":{"id":2152,"name":"EIP712","nameLocations":["1609:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":4604,"src":"1609:6:16"},"nodeType":"ModifierInvocation","src":"1609:17:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"name","nameLocation":"1603:4:16","nodeType":"VariableDeclaration","scope":2158,"src":"1589:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2149,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:16"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"1627:0:16"},"scope":2263,"src":"1577:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2442],"body":{"id":2234,"nodeType":"Block","src":"1872:483:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2176,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"1886:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2178,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"1904:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"1882:97:16","trueBody":{"id":2184,"nodeType":"Block","src":"1914:65:16","statements":[{"errorCall":{"arguments":[{"id":2181,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"1959:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1935:23:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"RevertStatement","src":"1928:40:16"}]}},{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:16","nodeType":"VariableDeclaration","scope":2234,"src":"1989:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2201,"initialValue":{"arguments":[{"arguments":[{"id":2191,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2031:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2048:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2055:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2064:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2196,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2081:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2195,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"2071:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2198,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2089:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2189,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2020:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:16","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2188,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2010:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:16"},{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"hash","nameLocation":"2118:4:16","nodeType":"VariableDeclaration","scope":2234,"src":"2110:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2207,"initialValue":{"arguments":[{"id":2205,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"2142:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2204,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"2125:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:16"},{"assignments":[2209],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"signer","nameLocation":"2172:6:16","nodeType":"VariableDeclaration","scope":2234,"src":"2164:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2217,"initialValue":{"arguments":[{"id":2212,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"2195:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2213,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2201:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2214,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"2204:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2215,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2207:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2210,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"2181:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4377_$","typeString":"type(library ECDSA)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:16","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"2181:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2223:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2233:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2227,"nodeType":"IfStatement","src":"2219:88:16","trueBody":{"id":2226,"nodeType":"Block","src":"2240:67:16","statements":[{"errorCall":{"arguments":[{"id":2222,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2282:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2223,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2290:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2221,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2261:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2225,"nodeType":"RevertStatement","src":"2254:42:16"}]}},{"expression":{"arguments":[{"id":2229,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2326:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2230,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2333:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2342:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1876,1936],"referencedDeclaration":1876,"src":"2317:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"ExpressionStatement","src":"2317:31:16"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"1635:43:16","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:16","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"owner","nameLocation":"1716:5:16","nodeType":"VariableDeclaration","scope":2235,"src":"1708:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"spender","nameLocation":"1739:7:16","nodeType":"VariableDeclaration","scope":2235,"src":"1731:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"1764:5:16","nodeType":"VariableDeclaration","scope":2235,"src":"1756:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:16","nodeType":"VariableDeclaration","scope":2235,"src":"1779:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"v","nameLocation":"1811:1:16","nodeType":"VariableDeclaration","scope":2235,"src":"1805:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2168,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"r","nameLocation":"1830:1:16","nodeType":"VariableDeclaration","scope":2235,"src":"1822:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"s","nameLocation":"1849:1:16","nodeType":"VariableDeclaration","scope":2235,"src":"1841:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:16"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[],"src":"1872:0:16"},"scope":2263,"src":"1683:672:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2450,3206],"body":{"id":2251,"nodeType":"Block","src":"2509:43:16","statements":[{"expression":{"arguments":[{"id":2248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"2539:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2246,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2526:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2263_$","typeString":"type(contract super ERC20Permit)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"2526:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2250,"nodeType":"Return","src":"2519:26:16"}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"2361:43:16","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:16","nodeType":"FunctionDefinition","overrides":{"id":2242,"nodeType":"OverrideSpecifier","overrides":[{"id":2240,"name":"IERC20Permit","nameLocations":["2469:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2469:12:16"},{"id":2241,"name":"Nonces","nameLocations":["2483:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3247,"src":"2483:6:16"}],"src":"2460:30:16"},"parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"owner","nameLocation":"2433:5:16","nodeType":"VariableDeclaration","scope":2252,"src":"2425:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:16"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"2500:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:16"},"scope":2263,"src":"2409:143:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2456],"body":{"id":2261,"nodeType":"Block","src":"2727:44:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2258,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"2744:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2257,"id":2260,"nodeType":"Return","src":"2737:27:16"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"2558:43:16","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:16","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[],"src":"2684:2:16"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2262,"src":"2718:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:16"},"scope":2263,"src":"2659:112:16","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2264,"src":"898:1875:16","usedErrors":[1345,1350,1355,1364,1369,1374,2140,2147,3189,3382,3384,4040,4045,4050],"usedEvents":[1287,1997,2006]}],"src":"122:2652:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[9810],"ERC20":[1985],"ERC20Votes":[2395],"Votes":[1192]},"id":2396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2265,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":1986,"src":"147:35:17","symbolAliases":[{"foreign":{"id":2266,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"155:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":1193,"src":"183:58:17","symbolAliases":[{"foreign":{"id":2268,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"191:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":2271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2396,"sourceUnit":9811,"src":"242:67:17","symbolAliases":[{"foreign":{"id":2270,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9810,"src":"250:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2273,"name":"ERC20","nameLocations":["1226:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"1226:5:17"},"id":2274,"nodeType":"InheritanceSpecifier","src":"1226:5:17"},{"baseName":{"id":2275,"name":"Votes","nameLocations":["1233:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1192,"src":"1233:5:17"},"id":2276,"nodeType":"InheritanceSpecifier","src":"1233:5:17"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"311:882:17","text":" @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2395,"internalFunctionIDs":{"1169":1,"1183":2},"linearizedBaseContracts":[2395,1192,1318,645,1333,3247,4604,1307,1985,1375,2421,2063,3157],"name":"ERC20Votes","nameLocation":"1212:10:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"1245:100:17","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":2283,"name":"ERC20ExceededSafeSupply","nameLocation":"1356:23:17","nodeType":"ErrorDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"increasedSupply","nameLocation":"1388:15:17","nodeType":"VariableDeclaration","scope":2283,"src":"1380:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"cap","nameLocation":"1413:3:17","nodeType":"VariableDeclaration","scope":2283,"src":"1405:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:38:17"},"src":"1350:68:17"},{"body":{"id":2295,"nodeType":"Block","src":"2175:41:17","statements":[{"expression":{"expression":{"arguments":[{"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2290,"name":"uint208","nodeType":"ElementaryTypeName","src":"2197:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2192:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2206:3:17","memberName":"max","nodeType":"MemberAccess","src":"2192:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2288,"id":2294,"nodeType":"Return","src":"2185:24:17"}]},"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"1424:684:17","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2122:10:17","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"2132:2:17"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2296,"src":"2166:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:17"},"scope":2395,"src":"2113:103:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1792],"body":{"id":2349,"nodeType":"Block","src":"2440:329:17","statements":[{"expression":{"arguments":[{"id":2310,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2464:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2470:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2474:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2307,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2450:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2395_$","typeString":"type(contract super ERC20Votes)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:17","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1792,"src":"2450:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2314,"nodeType":"ExpressionStatement","src":"2450:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2494:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:17","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"nodeType":"IfStatement","src":"2490:226:17","trueBody":{"id":2341,"nodeType":"Block","src":"2514:202:17","statements":[{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"supply","nameLocation":"2536:6:17","nodeType":"VariableDeclaration","scope":2341,"src":"2528:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2325,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2323,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2545:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2528:30:17"},{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"cap","nameLocation":"2580:3:17","nodeType":"VariableDeclaration","scope":2341,"src":"2572:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2328,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2586:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2616:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2332,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2625:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2340,"nodeType":"IfStatement","src":"2612:94:17","trueBody":{"id":2339,"nodeType":"Block","src":"2630:76:17","statements":[{"errorCall":{"arguments":[{"id":2335,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2336,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2687:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2655:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"RevertStatement","src":"2648:43:17"}]}}]}},{"expression":{"arguments":[{"id":2344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2746:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2752:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2756:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2725:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"ExpressionStatement","src":"2725:37:17"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"2222:129:17","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2365:7:17","nodeType":"FunctionDefinition","overrides":{"id":2305,"nodeType":"OverrideSpecifier","overrides":[],"src":"2431:8:17"},"parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"from","nameLocation":"2381:4:17","nodeType":"VariableDeclaration","scope":2350,"src":"2373:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"to","nameLocation":"2395:2:17","nodeType":"VariableDeclaration","scope":2350,"src":"2387:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"value","nameLocation":"2407:5:17","nodeType":"VariableDeclaration","scope":2350,"src":"2399:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:41:17"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"2440:0:17"},"scope":2395,"src":"2356:413:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1191],"body":{"id":2363,"nodeType":"Block","src":"3120:42:17","statements":[{"expression":{"arguments":[{"id":2360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3147:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2359,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3137:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2358,"id":2362,"nodeType":"Return","src":"3130:25:17"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"2775:249:17","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3038:15:17","nodeType":"FunctionDefinition","overrides":{"id":2355,"nodeType":"OverrideSpecifier","overrides":[],"src":"3093:8:17"},"parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"account","nameLocation":"3062:7:17","nodeType":"VariableDeclaration","scope":2364,"src":"3054:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3053:17:17"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2364,"src":"3111:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:9:17"},"scope":2395,"src":"3029:133:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2376,"nodeType":"Block","src":"3315:48:17","statements":[{"expression":{"arguments":[{"id":2373,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3348:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2372,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3332:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2371,"id":2375,"nodeType":"Return","src":"3325:31:17"}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"3168:64:17","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2377,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3246:14:17","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"account","nameLocation":"3269:7:17","nodeType":"VariableDeclaration","scope":2377,"src":"3261:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3260:17:17"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2377,"src":"3307:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2369,"name":"uint32","nodeType":"ElementaryTypeName","src":"3307:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3306:8:17"},"scope":2395,"src":"3237:126:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2393,"nodeType":"Block","src":"3553:50:17","statements":[{"expression":{"arguments":[{"id":2389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3583:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2390,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3592:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2388,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3570:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8771_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2387,"id":2392,"nodeType":"Return","src":"3563:33:17"}]},"documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"3369:66:17","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3449:11:17","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"account","nameLocation":"3469:7:17","nodeType":"VariableDeclaration","scope":2394,"src":"3461:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"pos","nameLocation":"3485:3:17","nodeType":"VariableDeclaration","scope":2394,"src":"3478:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2381,"name":"uint32","nodeType":"ElementaryTypeName","src":"3478:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3460:29:17"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"3519:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2385,"nodeType":"UserDefinedTypeName","pathNode":{"id":2384,"name":"Checkpoints.Checkpoint208","nameLocations":["3519:11:17","3531:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"3519:25:17"},"referencedDeclaration":8771,"src":"3519:25:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3518:34:17"},"scope":2395,"src":"3440:163:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2396,"src":"1194:2411:17","usedErrors":[570,696,703,1345,1350,1355,1364,1369,1374,2283,3189,3382,3384,4040,4045,4050,6330,8237],"usedEvents":[579,588,1287,1997,2006]}],"src":"121:3485:17"},"id":17},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2063],"IERC20Metadata":[2421]},"id":2422,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2397,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2422,"sourceUnit":2064,"src":"151:37:18","symbolAliases":[{"foreign":{"id":2398,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"159:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2401,"name":"IERC20","nameLocations":["306:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"306:6:18"},"id":2402,"nodeType":"InheritanceSpecifier","src":"306:6:18"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"190:87:18","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2421,"linearizedBaseContracts":[2421,2063],"name":"IERC20Metadata","nameLocation":"288:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"319:54:18","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2408,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:18","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"391:2:18"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"417:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:18"},"scope":2421,"src":"378:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"438:56:18","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2414,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:18","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"514:2:18"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"540:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:18"},"scope":2421,"src":"499:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"561:65:18","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2420,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:18","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[],"src":"648:2:18"},"returnParameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2420,"src":"674:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2417,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:18"},"scope":2421,"src":"631:50:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2422,"src":"278:405:18","usedErrors":[],"usedEvents":[1997,2006]}],"src":"125:559:18"},"id":18},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2457]},"id":2458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2423,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"149:1965:19","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2457,"linearizedBaseContracts":[2457],"name":"IERC20Permit","nameLocation":"2125:12:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"2144:850:19","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2442,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:19","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"owner","nameLocation":"3032:5:19","nodeType":"VariableDeclaration","scope":2442,"src":"3024:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"spender","nameLocation":"3055:7:19","nodeType":"VariableDeclaration","scope":2442,"src":"3047:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"value","nameLocation":"3080:5:19","nodeType":"VariableDeclaration","scope":2442,"src":"3072:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:19","nodeType":"VariableDeclaration","scope":2442,"src":"3095:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"v","nameLocation":"3127:1:19","nodeType":"VariableDeclaration","scope":2442,"src":"3121:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2434,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"r","nameLocation":"3146:1:19","nodeType":"VariableDeclaration","scope":2442,"src":"3138:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"s","nameLocation":"3165:1:19","nodeType":"VariableDeclaration","scope":2442,"src":"3157:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:19"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"3181:0:19"},"scope":2457,"src":"2999:183:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"3188:294:19","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2450,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:19","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"owner","nameLocation":"3511:5:19","nodeType":"VariableDeclaration","scope":2450,"src":"3503:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:19"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2450,"src":"3541:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:19"},"scope":2457,"src":"3487:63:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"3556:128:19","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2456,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:19","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"3767:2:19"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2456,"src":"3793:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:19"},"scope":2457,"src":"3742:60:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2458,"src":"2115:1689:19","usedErrors":[],"usedEvents":[]}],"src":"123:3682:19"},"id":19},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[3127],"IERC1363":[1274],"IERC20":[2063],"SafeERC20":[2868]},"id":2869,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2459,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2869,"sourceUnit":2064,"src":"141:37:20","symbolAliases":[{"foreign":{"id":2460,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"149:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2869,"sourceUnit":1275,"src":"179:58:20","symbolAliases":[{"foreign":{"id":2462,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"187:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":2465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2869,"sourceUnit":3128,"src":"238:51:20","symbolAliases":[{"foreign":{"id":2464,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"246:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"291:458:20","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2868,"linearizedBaseContracts":[2868],"name":"SafeERC20","nameLocation":"758:9:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"774:65:20","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2471,"name":"SafeERC20FailedOperation","nameLocation":"850:24:20","nodeType":"ErrorDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"token","nameLocation":"883:5:20","nodeType":"VariableDeclaration","scope":2471,"src":"875:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:20"},"src":"844:46:20"},{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"896:71:20","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2480,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:20","nodeType":"ErrorDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"spender","nameLocation":"1019:7:20","nodeType":"VariableDeclaration","scope":2480,"src":"1011:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2473,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:20","nodeType":"VariableDeclaration","scope":2480,"src":"1028:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:20","nodeType":"VariableDeclaration","scope":2480,"src":"1054:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:20"},"src":"972:109:20"},{"body":{"id":2503,"nodeType":"Block","src":"1343:88:20","statements":[{"expression":{"arguments":[{"id":2492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"1373:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"1395:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"1395:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2497,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"1412:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1416:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2493,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1380:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:20","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2491,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1353:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2502,"nodeType":"ExpressionStatement","src":"1353:71:20"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"1087:179:20","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:20","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"token","nameLocation":"1300:5:20","nodeType":"VariableDeclaration","scope":2504,"src":"1293:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2483,"nodeType":"UserDefinedTypeName","pathNode":{"id":2482,"name":"IERC20","nameLocations":["1293:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"1293:6:20"},"referencedDeclaration":2063,"src":"1293:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"to","nameLocation":"1315:2:20","nodeType":"VariableDeclaration","scope":2504,"src":"1307:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"1327:5:20","nodeType":"VariableDeclaration","scope":2504,"src":"1319:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:20"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"1343:0:20"},"scope":2868,"src":"1271:160:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2530,"nodeType":"Block","src":"1760:98:20","statements":[{"expression":{"arguments":[{"id":2518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"1790:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2521,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"1812:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"1812:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1833:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1839:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"1843:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2519,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1797:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:20","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2517,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1770:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"1770:81:20"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"1437:228:20","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:20","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"token","nameLocation":"1703:5:20","nodeType":"VariableDeclaration","scope":2531,"src":"1696:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2507,"nodeType":"UserDefinedTypeName","pathNode":{"id":2506,"name":"IERC20","nameLocations":["1696:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"1696:6:20"},"referencedDeclaration":2063,"src":"1696:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"from","nameLocation":"1718:4:20","nodeType":"VariableDeclaration","scope":2531,"src":"1710:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"to","nameLocation":"1732:2:20","nodeType":"VariableDeclaration","scope":2531,"src":"1724:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"value","nameLocation":"1744:5:20","nodeType":"VariableDeclaration","scope":2531,"src":"1736:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:20"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"1760:0:20"},"scope":2868,"src":"1670:188:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"2600:139:20","statements":[{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:20","nodeType":"VariableDeclaration","scope":2561,"src":"2610:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"arguments":[{"id":2548,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2657:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2868","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2868","typeString":"library SafeERC20"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:20","typeDescriptions":{}}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2550,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"2664:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2633:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:20","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2040,"src":"2633:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:20"},{"expression":{"arguments":[{"id":2554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2695:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"id":2555,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"2702:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2711:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2726:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2553,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2682:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"2682:50:20"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"1864:645:20","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:20","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"token","nameLocation":"2552:5:20","nodeType":"VariableDeclaration","scope":2562,"src":"2545:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2534,"nodeType":"UserDefinedTypeName","pathNode":{"id":2533,"name":"IERC20","nameLocations":["2545:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"2545:6:20"},"referencedDeclaration":2063,"src":"2545:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"spender","nameLocation":"2567:7:20","nodeType":"VariableDeclaration","scope":2562,"src":"2559:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"value","nameLocation":"2584:5:20","nodeType":"VariableDeclaration","scope":2562,"src":"2576:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:20"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[],"src":"2600:0:20"},"scope":2868,"src":"2514:225:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2604,"nodeType":"Block","src":"3505:370:20","statements":[{"id":2603,"nodeType":"UncheckedBlock","src":"3515:354:20","statements":[{"assignments":[2574],"declarations":[{"constant":false,"id":2574,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:20","nodeType":"VariableDeclaration","scope":2603,"src":"3539:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"initialValue":{"arguments":[{"arguments":[{"id":2579,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3590:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2868","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2868","typeString":"library SafeERC20"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:20","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2581,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3597:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2575,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3566:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:20","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2040,"src":"3566:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"3623:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2585,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3642:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2594,"nodeType":"IfStatement","src":"3619:160:20","trueBody":{"id":2593,"nodeType":"Block","src":"3661:118:20","statements":[{"errorCall":{"arguments":[{"id":2588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3719:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2589,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"3728:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2590,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3746:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2587,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3686:32:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"RevertStatement","src":"3679:85:20"}]}},{"expression":{"arguments":[{"id":2596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3805:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"id":2597,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3812:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"3821:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2599,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3840:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2595,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"3792:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"ExpressionStatement","src":"3792:66:20"}]}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"2745:657:20","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:20","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"token","nameLocation":"3445:5:20","nodeType":"VariableDeclaration","scope":2605,"src":"3438:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2565,"nodeType":"UserDefinedTypeName","pathNode":{"id":2564,"name":"IERC20","nameLocations":["3438:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"3438:6:20"},"referencedDeclaration":2063,"src":"3438:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"spender","nameLocation":"3460:7:20","nodeType":"VariableDeclaration","scope":2605,"src":"3452:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:20","nodeType":"VariableDeclaration","scope":2605,"src":"3469:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:20"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[],"src":"3505:0:20"},"scope":2868,"src":"3407:468:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"4529:303:20","statements":[{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:20","nodeType":"VariableDeclaration","scope":2651,"src":"4539:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2626,"initialValue":{"arguments":[{"expression":{"id":2620,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4582:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"4582:13:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2622,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"4598:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4607:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2618,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4567:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:20","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:20"},{"condition":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:20","subExpression":{"arguments":[{"id":2628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4654:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"id":2629,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4661:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2627,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"4630:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"4625:201:20","trueBody":{"id":2649,"nodeType":"Block","src":"4676:150:20","statements":[{"expression":{"arguments":[{"id":2633,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4710:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2636,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4732:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"4732:13:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2638,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"4748:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2634,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4717:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:20","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2632,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4690:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2643,"nodeType":"ExpressionStatement","src":"4690:71:20"},{"expression":{"arguments":[{"id":2645,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4795:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},{"id":2646,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4802:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2644,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4775:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"4775:40:20"}]}}]},"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"3881:566:20","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:20","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"token","nameLocation":"4481:5:20","nodeType":"VariableDeclaration","scope":2652,"src":"4474:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2608,"nodeType":"UserDefinedTypeName","pathNode":{"id":2607,"name":"IERC20","nameLocations":["4474:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"4474:6:20"},"referencedDeclaration":2063,"src":"4474:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"spender","nameLocation":"4496:7:20","nodeType":"VariableDeclaration","scope":2652,"src":"4488:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"value","nameLocation":"4513:5:20","nodeType":"VariableDeclaration","scope":2652,"src":"4505:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:20"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[],"src":"4529:0:20"},"scope":2868,"src":"4452:380:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2694,"nodeType":"Block","src":"5279:219:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"5293:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:20","memberName":"code","nodeType":"MemberAccess","src":"5293:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:20","memberName":"length","nodeType":"MemberAccess","src":"5293:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:20","subExpression":{"arguments":[{"id":2679,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"5402:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"5406:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"5413:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2677,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"5380:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:20","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1225,"src":"5380:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"nodeType":"IfStatement","src":"5375:117:20","trueBody":{"id":2691,"nodeType":"Block","src":"5420:72:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2687,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"5474:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}],"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:20","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2684,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5441:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"RevertStatement","src":"5434:47:20"}]}},"id":2693,"nodeType":"IfStatement","src":"5289:203:20","trueBody":{"id":2676,"nodeType":"Block","src":"5314:55:20","statements":[{"expression":{"arguments":[{"id":2671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"5341:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},{"id":2672,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"5348:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"5352:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2670,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"5328:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2675,"nodeType":"ExpressionStatement","src":"5328:30:20"}]}}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"4838:333:20","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:20","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"token","nameLocation":"5217:5:20","nodeType":"VariableDeclaration","scope":2695,"src":"5208:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},"typeName":{"id":2655,"nodeType":"UserDefinedTypeName","pathNode":{"id":2654,"name":"IERC1363","nameLocations":["5208:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"5208:8:20"},"referencedDeclaration":1274,"src":"5208:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"to","nameLocation":"5232:2:20","nodeType":"VariableDeclaration","scope":2695,"src":"5224:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"value","nameLocation":"5244:5:20","nodeType":"VariableDeclaration","scope":2695,"src":"5236:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"data","nameLocation":"5264:4:20","nodeType":"VariableDeclaration","scope":2695,"src":"5251:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2661,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:20"},"returnParameters":{"id":2664,"nodeType":"ParameterList","parameters":[],"src":"5279:0:20"},"scope":2868,"src":"5176:322:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"6017:239:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6031:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:20","memberName":"code","nodeType":"MemberAccess","src":"6031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:20","memberName":"length","nodeType":"MemberAccess","src":"6031:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:20","subExpression":{"arguments":[{"id":2725,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6154:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6160:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"6164:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"6171:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2723,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6128:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:20","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"6128:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2739,"nodeType":"IfStatement","src":"6123:127:20","trueBody":{"id":2738,"nodeType":"Block","src":"6178:72:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2734,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6232:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:20","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2731,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"6199:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"RevertStatement","src":"6192:47:20"}]}},"id":2740,"nodeType":"IfStatement","src":"6027:223:20","trueBody":{"id":2722,"nodeType":"Block","src":"6052:65:20","statements":[{"expression":{"arguments":[{"id":2716,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6083:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},{"id":2717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6090:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6096:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"6100:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2715,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"6066:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"ExpressionStatement","src":"6066:40:20"}]}}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"5504:341:20","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:20","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"token","nameLocation":"5904:5:20","nodeType":"VariableDeclaration","scope":2742,"src":"5895:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"IERC1363","nameLocations":["5895:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"5895:8:20"},"referencedDeclaration":1274,"src":"5895:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"from","nameLocation":"5927:4:20","nodeType":"VariableDeclaration","scope":2742,"src":"5919:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"to","nameLocation":"5949:2:20","nodeType":"VariableDeclaration","scope":2742,"src":"5941:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"5969:5:20","nodeType":"VariableDeclaration","scope":2742,"src":"5961:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"data","nameLocation":"5997:4:20","nodeType":"VariableDeclaration","scope":2742,"src":"5984:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2706,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:20"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[],"src":"6017:0:20"},"scope":2868,"src":"5850:406:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2784,"nodeType":"Block","src":"7023:218:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"7037:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:20","memberName":"code","nodeType":"MemberAccess","src":"7037:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:20","memberName":"length","nodeType":"MemberAccess","src":"7037:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:20","subExpression":{"arguments":[{"id":2769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"7145:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7149:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"7156:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2767,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7124:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:20","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1273,"src":"7124:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2782,"nodeType":"IfStatement","src":"7119:116:20","trueBody":{"id":2781,"nodeType":"Block","src":"7163:72:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2777,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7217:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}],"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:20","typeDescriptions":{}}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2774,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"7184:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"RevertStatement","src":"7177:47:20"}]}},"id":2783,"nodeType":"IfStatement","src":"7033:202:20","trueBody":{"id":2766,"nodeType":"Block","src":"7058:55:20","statements":[{"expression":{"arguments":[{"id":2761,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7085:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},{"id":2762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"7092:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7096:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7072:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"7072:30:20"}]}}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"6262:654:20","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:20","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"token","nameLocation":"6961:5:20","nodeType":"VariableDeclaration","scope":2785,"src":"6952:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"},"typeName":{"id":2745,"nodeType":"UserDefinedTypeName","pathNode":{"id":2744,"name":"IERC1363","nameLocations":["6952:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"6952:8:20"},"referencedDeclaration":1274,"src":"6952:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1274","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"to","nameLocation":"6976:2:20","nodeType":"VariableDeclaration","scope":2785,"src":"6968:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"value","nameLocation":"6988:5:20","nodeType":"VariableDeclaration","scope":2785,"src":"6980:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"data","nameLocation":"7008:4:20","nodeType":"VariableDeclaration","scope":2785,"src":"6995:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2751,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:20"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"7023:0:20"},"scope":2868,"src":"6921:320:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2825,"nodeType":"Block","src":"7808:650:20","statements":[{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:20","nodeType":"VariableDeclaration","scope":2825,"src":"7818:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"nodeType":"VariableDeclarationStatement","src":"7818:18:20"},{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:20","nodeType":"VariableDeclaration","scope":2825,"src":"7846:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2799,"nodeType":"VariableDeclarationStatement","src":"7846:19:20"},{"AST":{"nodeType":"YulBlock","src":"7900:396:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7914:75:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7934:3:20"},"nodeType":"YulFunctionCall","src":"7934:5:20"},{"name":"token","nodeType":"YulIdentifier","src":"7941:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7948:1:20","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7955:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"7961:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:20"},"nodeType":"YulFunctionCall","src":"7951:15:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7974:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7968:5:20"},"nodeType":"YulFunctionCall","src":"7968:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"7981:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7984:4:20","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"7929:4:20"},"nodeType":"YulFunctionCall","src":"7929:60:20"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"7918:7:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8050:157:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8068:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8085:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8079:5:20"},"nodeType":"YulFunctionCall","src":"8079:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8072:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8122:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8127:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8130:14:20"},"nodeType":"YulFunctionCall","src":"8130:16:20"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8107:14:20"},"nodeType":"YulFunctionCall","src":"8107:40:20"},"nodeType":"YulExpressionStatement","src":"8107:40:20"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8171:3:20"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8176:14:20"},"nodeType":"YulFunctionCall","src":"8176:16:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8164:6:20"},"nodeType":"YulFunctionCall","src":"8164:29:20"},"nodeType":"YulExpressionStatement","src":"8164:29:20"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8041:7:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8034:6:20"},"nodeType":"YulFunctionCall","src":"8034:15:20"},"nodeType":"YulIf","src":"8031:176:20"},{"nodeType":"YulAssignment","src":"8220:30:20","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8234:14:20"},"nodeType":"YulFunctionCall","src":"8234:16:20"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8220:10:20"}]},{"nodeType":"YulAssignment","src":"8263:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8284:1:20","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8278:5:20"},"nodeType":"YulFunctionCall","src":"8278:8:20"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8263:11:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2791,"isOffset":false,"isSlot":false,"src":"7955:4:20","valueSize":1},{"declaration":2791,"isOffset":false,"isSlot":false,"src":"7974:4:20","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"8220:10:20","valueSize":1},{"declaration":2798,"isOffset":false,"isSlot":false,"src":"8263:11:20","valueSize":1},{"declaration":2789,"isOffset":false,"isSlot":false,"src":"7941:5:20","valueSize":1}],"flags":["memory-safe"],"id":2800,"nodeType":"InlineAssembly","src":"7875:421:20"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"8310:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8362:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"8336:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}],"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:20","typeDescriptions":{}}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:20","memberName":"code","nodeType":"MemberAccess","src":"8328:19:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:20","memberName":"length","nodeType":"MemberAccess","src":"8328:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2824,"nodeType":"IfStatement","src":"8306:146:20","trueBody":{"id":2823,"nodeType":"Block","src":"8380:72:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2819,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"8434:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:20","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2816,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8401:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"RevertStatement","src":"8394:47:20"}]}}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"7247:486:20","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:20","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"token","nameLocation":"7774:5:20","nodeType":"VariableDeclaration","scope":2826,"src":"7767:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"IERC20","nameLocations":["7767:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"7767:6:20"},"referencedDeclaration":2063,"src":"7767:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"data","nameLocation":"7794:4:20","nodeType":"VariableDeclaration","scope":2826,"src":"7781:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2790,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:20"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[],"src":"7808:0:20"},"scope":2868,"src":"7738:720:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2866,"nodeType":"Block","src":"9049:391:20","statements":[{"assignments":[2838],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"success","nameLocation":"9064:7:20","nodeType":"VariableDeclaration","scope":2866,"src":"9059:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2839,"nodeType":"VariableDeclarationStatement","src":"9059:12:20"},{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:20","nodeType":"VariableDeclaration","scope":2866,"src":"9081:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2842,"nodeType":"VariableDeclarationStatement","src":"9081:18:20"},{"assignments":[2844],"declarations":[{"constant":false,"id":2844,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:20","nodeType":"VariableDeclaration","scope":2866,"src":"9109:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2845,"nodeType":"VariableDeclarationStatement","src":"9109:19:20"},{"AST":{"nodeType":"YulBlock","src":"9163:174:20","statements":[{"nodeType":"YulAssignment","src":"9177:71:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9193:3:20"},"nodeType":"YulFunctionCall","src":"9193:5:20"},{"name":"token","nodeType":"YulIdentifier","src":"9200:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9207:1:20","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9214:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"9220:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9210:3:20"},"nodeType":"YulFunctionCall","src":"9210:15:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9233:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9227:5:20"},"nodeType":"YulFunctionCall","src":"9227:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"9240:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:20","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9188:4:20"},"nodeType":"YulFunctionCall","src":"9188:60:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9177:7:20"}]},{"nodeType":"YulAssignment","src":"9261:30:20","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9275:14:20"},"nodeType":"YulFunctionCall","src":"9275:16:20"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9261:10:20"}]},{"nodeType":"YulAssignment","src":"9304:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9325:1:20","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9319:5:20"},"nodeType":"YulFunctionCall","src":"9319:8:20"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9304:11:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2832,"isOffset":false,"isSlot":false,"src":"9214:4:20","valueSize":1},{"declaration":2832,"isOffset":false,"isSlot":false,"src":"9233:4:20","valueSize":1},{"declaration":2841,"isOffset":false,"isSlot":false,"src":"9261:10:20","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"9304:11:20","valueSize":1},{"declaration":2838,"isOffset":false,"isSlot":false,"src":"9177:7:20","valueSize":1},{"declaration":2830,"isOffset":false,"isSlot":false,"src":"9200:5:20","valueSize":1}],"flags":["memory-safe"],"id":2846,"nodeType":"InlineAssembly","src":"9138:199:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"9353:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"9365:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2859,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"9416:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"9391:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:20","typeDescriptions":{}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:20","memberName":"code","nodeType":"MemberAccess","src":"9383:19:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:20","memberName":"length","nodeType":"MemberAccess","src":"9383:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2836,"id":2865,"nodeType":"Return","src":"9346:87:20"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"8464:491:20","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2867,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:20","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"token","nameLocation":"9000:5:20","nodeType":"VariableDeclaration","scope":2867,"src":"8993:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":2829,"nodeType":"UserDefinedTypeName","pathNode":{"id":2828,"name":"IERC20","nameLocations":["8993:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"8993:6:20"},"referencedDeclaration":2063,"src":"8993:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"data","nameLocation":"9020:4:20","nodeType":"VariableDeclaration","scope":2867,"src":"9007:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:20"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2867,"src":"9043:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2834,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:20"},"scope":2868,"src":"8960:480:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2869,"src":"750:8692:20","usedErrors":[2471,2480],"usedEvents":[]}],"src":"115:9328:20"},"id":20},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3127],"Errors":[3179]},"id":3128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2870,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3128,"sourceUnit":3180,"src":"127:36:21","symbolAliases":[{"foreign":{"id":2871,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"135:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"165:67:21","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3127,"linearizedBaseContracts":[3127],"name":"Address","nameLocation":"241:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"255:75:21","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2878,"name":"AddressEmptyCode","nameLocation":"341:16:21","nodeType":"ErrorDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"target","nameLocation":"366:6:21","nodeType":"VariableDeclaration","scope":2878,"src":"358:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:21"},"src":"335:39:21"},{"body":{"id":2924,"nodeType":"Block","src":"1361:278:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2888,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1383:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}],"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:21","typeDescriptions":{}}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:21","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1399:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"1371:125:21","trueBody":{"id":2904,"nodeType":"Block","src":"1407:89:21","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2898,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1463:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:21","typeDescriptions":{}}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:21","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1478:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2893,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1428:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3179_$","typeString":"type(library Errors)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:21","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3167,"src":"1428:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"RevertStatement","src":"1421:64:21"}]}},{"assignments":[2907,null],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"success","nameLocation":"1512:7:21","nodeType":"VariableDeclaration","scope":2924,"src":"1507:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2906,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2914,"initialValue":{"arguments":[{"hexValue":"","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2908,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"1525:9:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:21","memberName":"call","nodeType":"MemberAccess","src":"1525:14:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2910,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1547:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:21"},{"condition":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:21","subExpression":{"id":2915,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1573:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"1568:65:21","trueBody":{"id":2922,"nodeType":"Block","src":"1582:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2917,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1603:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3179_$","typeString":"type(library Errors)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:21","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"1603:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"RevertStatement","src":"1596:26:21"}]}}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"380:905:21","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:21","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:21","nodeType":"VariableDeclaration","scope":2925,"src":"1309:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"amount","nameLocation":"1344:6:21","nodeType":"VariableDeclaration","scope":2925,"src":"1336:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:21"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[],"src":"1361:0:21"},"scope":3127,"src":"1290:349:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2941,"nodeType":"Block","src":"2573:62:21","statements":[{"expression":{"arguments":[{"id":2936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2612:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2620:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2935,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"2590:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2934,"id":2940,"nodeType":"Return","src":"2583:45:21"}]},"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"1645:834:21","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2942,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:21","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"target","nameLocation":"2514:6:21","nodeType":"VariableDeclaration","scope":2942,"src":"2506:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"data","nameLocation":"2535:4:21","nodeType":"VariableDeclaration","scope":2942,"src":"2522:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2929,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:21"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2942,"src":"2559:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2932,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:21"},"scope":3127,"src":"2484:151:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2991,"nodeType":"Block","src":"3072:294:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2956,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3094:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:21","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:21","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"3110:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2973,"nodeType":"IfStatement","src":"3082:123:21","trueBody":{"id":2972,"nodeType":"Block","src":"3117:88:21","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3173:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3127","typeString":"library Address"}],"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:21","typeDescriptions":{}}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:21","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"3188:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2961,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"3138:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3179_$","typeString":"type(library Errors)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:21","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3167,"src":"3138:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2971,"nodeType":"RevertStatement","src":"3131:63:21"}]}},{"assignments":[2975,2977],"declarations":[{"constant":false,"id":2975,"mutability":"mutable","name":"success","nameLocation":"3220:7:21","nodeType":"VariableDeclaration","scope":2991,"src":"3215:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2974,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:21","nodeType":"VariableDeclaration","scope":2991,"src":"3229:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2976,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2984,"initialValue":{"arguments":[{"id":2982,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"3282:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"3256:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:21","memberName":"call","nodeType":"MemberAccess","src":"3256:11:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"3275:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:21"},{"expression":{"arguments":[{"id":2986,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"3331:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"3339:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2988,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"3348:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2985,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"3304:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2953,"id":2990,"nodeType":"Return","src":"3297:62:21"}]},"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"2641:313:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:21","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"target","nameLocation":"2998:6:21","nodeType":"VariableDeclaration","scope":2992,"src":"2990:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"data","nameLocation":"3019:4:21","nodeType":"VariableDeclaration","scope":2992,"src":"3006:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"value","nameLocation":"3033:5:21","nodeType":"VariableDeclaration","scope":2992,"src":"3025:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:21"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2992,"src":"3058:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:21"},"scope":3127,"src":"2959:407:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"3605:154:21","statements":[{"assignments":[3003,3005],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"success","nameLocation":"3621:7:21","nodeType":"VariableDeclaration","scope":3017,"src":"3616:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3002,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:21","nodeType":"VariableDeclaration","scope":3017,"src":"3630:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3010,"initialValue":{"arguments":[{"id":3008,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3675:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3006,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"3657:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:21","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:21","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:21"},{"expression":{"arguments":[{"id":3012,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"3724:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3013,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3732:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3014,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3741:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3011,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"3697:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3001,"id":3016,"nodeType":"Return","src":"3690:62:21"}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"3372:128:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:21","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"target","nameLocation":"3541:6:21","nodeType":"VariableDeclaration","scope":3018,"src":"3533:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"data","nameLocation":"3562:4:21","nodeType":"VariableDeclaration","scope":3018,"src":"3549:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2996,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:21"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"3591:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2999,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:21"},"scope":3127,"src":"3505:254:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3043,"nodeType":"Block","src":"3997:156:21","statements":[{"assignments":[3029,3031],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"success","nameLocation":"4013:7:21","nodeType":"VariableDeclaration","scope":3043,"src":"4008:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3028,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:21","nodeType":"VariableDeclaration","scope":3043,"src":"4022:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3030,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3036,"initialValue":{"arguments":[{"id":3034,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4069:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3032,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"4049:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:21","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:21"},{"expression":{"arguments":[{"id":3038,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"4118:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3039,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4126:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3040,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"4135:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3037,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"4091:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3027,"id":3042,"nodeType":"Return","src":"4084:62:21"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"3765:130:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3044,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:21","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"target","nameLocation":"3938:6:21","nodeType":"VariableDeclaration","scope":3044,"src":"3930:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"data","nameLocation":"3959:4:21","nodeType":"VariableDeclaration","scope":3044,"src":"3946:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3022,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:21"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3044,"src":"3983:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3025,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:21"},"scope":3127,"src":"3900:253:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"4579:424:21","statements":[{"condition":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:21","subExpression":{"id":3056,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4594:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3081,"nodeType":"Block","src":"4653:344:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3063,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"4841:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:21","memberName":"length","nodeType":"MemberAccess","src":"4841:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3067,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4867:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:21","memberName":"code","nodeType":"MemberAccess","src":"4867:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:21","memberName":"length","nodeType":"MemberAccess","src":"4867:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3078,"nodeType":"IfStatement","src":"4837:119:21","trueBody":{"id":3077,"nodeType":"Block","src":"4892:64:21","statements":[{"errorCall":{"arguments":[{"id":3074,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4934:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3073,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"4917:16:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"RevertStatement","src":"4910:31:21"}]}},{"expression":{"id":3079,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"4976:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3055,"id":3080,"nodeType":"Return","src":"4969:17:21"}]},"id":3082,"nodeType":"IfStatement","src":"4589:408:21","trueBody":{"id":3062,"nodeType":"Block","src":"4603:44:21","statements":[{"expression":{"arguments":[{"id":3059,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"4625:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3058,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4617:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3061,"nodeType":"ExpressionStatement","src":"4617:19:21"}]}}]},"documentation":{"id":3045,"nodeType":"StructuredDocumentation","src":"4159:257:21","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:21","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"target","nameLocation":"4474:6:21","nodeType":"VariableDeclaration","scope":3084,"src":"4466:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"success","nameLocation":"4495:7:21","nodeType":"VariableDeclaration","scope":3084,"src":"4490:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3048,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:21","nodeType":"VariableDeclaration","scope":3084,"src":"4512:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:21"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"4565:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3053,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:21"},"scope":3127,"src":"4421:582:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3105,"nodeType":"Block","src":"5307:122:21","statements":[{"condition":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:21","subExpression":{"id":3094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5322:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3103,"nodeType":"Block","src":"5381:42:21","statements":[{"expression":{"id":3101,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"5402:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3093,"id":3102,"nodeType":"Return","src":"5395:17:21"}]},"id":3104,"nodeType":"IfStatement","src":"5317:106:21","trueBody":{"id":3100,"nodeType":"Block","src":"5331:44:21","statements":[{"expression":{"arguments":[{"id":3097,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"5353:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3096,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5345:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"5345:19:21"}]}}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"5009:191:21","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:21","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"success","nameLocation":"5236:7:21","nodeType":"VariableDeclaration","scope":3106,"src":"5231:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3086,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:21","nodeType":"VariableDeclaration","scope":3106,"src":"5245:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3088,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:21"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3106,"src":"5293:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:21"},"scope":3127,"src":"5205:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"5598:432:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3112,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"5674:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:21","memberName":"length","nodeType":"MemberAccess","src":"5674:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3123,"nodeType":"Block","src":"5973:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3118,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5994:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3179_$","typeString":"type(library Errors)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:21","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"5994:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3122,"nodeType":"RevertStatement","src":"5987:26:21"}]},"id":3124,"nodeType":"IfStatement","src":"5670:354:21","trueBody":{"id":3117,"nodeType":"Block","src":"5697:270:21","statements":[{"AST":{"nodeType":"YulBlock","src":"5824:133:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5842:40:21","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5871:10:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5865:5:21"},"nodeType":"YulFunctionCall","src":"5865:17:21"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"5846:15:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5910:2:21","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"5914:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:21"},"nodeType":"YulFunctionCall","src":"5906:19:21"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"5927:15:21"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5899:6:21"},"nodeType":"YulFunctionCall","src":"5899:44:21"},"nodeType":"YulExpressionStatement","src":"5899:44:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3109,"isOffset":false,"isSlot":false,"src":"5871:10:21","valueSize":1},{"declaration":3109,"isOffset":false,"isSlot":false,"src":"5914:10:21","valueSize":1}],"flags":["memory-safe"],"id":3116,"nodeType":"InlineAssembly","src":"5799:158:21"}]}}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"5435:103:21","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:21","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:21","nodeType":"VariableDeclaration","scope":3126,"src":"5560:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3108,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:21"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"5598:0:21"},"scope":3127,"src":"5543:487:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3128,"src":"233:5799:21","usedErrors":[2878],"usedEvents":[]}],"src":"101:5932:21"},"id":21},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3157]},"id":3158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3129,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"127:496:22","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3157,"linearizedBaseContracts":[3157],"name":"Context","nameLocation":"642:7:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3138,"nodeType":"Block","src":"718:34:22","statements":[{"expression":{"expression":{"id":3135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:22","memberName":"sender","nodeType":"MemberAccess","src":"735:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3134,"id":3137,"nodeType":"Return","src":"728:17:22"}]},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:22","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[],"src":"675:2:22"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3139,"src":"709:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:22"},"scope":3157,"src":"656:96:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3147,"nodeType":"Block","src":"825:32:22","statements":[{"expression":{"expression":{"id":3144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:22","memberName":"data","nodeType":"MemberAccess","src":"842:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3143,"id":3146,"nodeType":"Return","src":"835:15:22"}]},"id":3148,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:22","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[],"src":"775:2:22"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"809:14:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3141,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:22"},"scope":3157,"src":"758:99:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"935:25:22","statements":[{"expression":{"hexValue":"30","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3152,"id":3154,"nodeType":"Return","src":"945:8:22"}]},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:22","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"892:2:22"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"926:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:22"},"scope":3157,"src":"863:97:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3158,"src":"624:338:22","usedErrors":[],"usedEvents":[]}],"src":"101:862:22"},"id":22},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3179]},"id":3180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"126:284:23","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3179,"linearizedBaseContracts":[3179],"name":"Errors","nameLocation":"419:6:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"432:94:23","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3167,"name":"InsufficientBalance","nameLocation":"537:19:23","nodeType":"ErrorDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"balance","nameLocation":"565:7:23","nodeType":"VariableDeclaration","scope":3167,"src":"557:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"needed","nameLocation":"582:6:23","nodeType":"VariableDeclaration","scope":3167,"src":"574:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:23"},"src":"531:59:23"},{"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"596:89:23","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3170,"name":"FailedCall","nameLocation":"696:10:23","nodeType":"ErrorDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"706:2:23"},"src":"690:19:23"},{"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"715:46:23","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3173,"name":"FailedDeployment","nameLocation":"772:16:23","nodeType":"ErrorDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[],"src":"788:2:23"},"src":"766:25:23"},{"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"797:58:23","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3178,"name":"MissingPrecompile","nameLocation":"866:17:23","nodeType":"ErrorDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"884:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:23"},"src":"860:33:23"}],"scope":3180,"src":"411:484:23","usedErrors":[3167,3170,3173,3178],"usedEvents":[]}],"src":"100:796:23"},"id":23},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[3247]},"id":3248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:24"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"125:83:24","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":3247,"linearizedBaseContracts":[3247],"name":"Nonces","nameLocation":"227:6:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"240:90:24","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":3189,"name":"InvalidAccountNonce","nameLocation":"341:19:24","nodeType":"ErrorDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"account","nameLocation":"369:7:24","nodeType":"VariableDeclaration","scope":3189,"src":"361:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:24","nodeType":"VariableDeclaration","scope":3189,"src":"378:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:24"},"src":"335:65:24"},{"constant":false,"id":3193,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:24","nodeType":"VariableDeclaration","scope":3247,"src":"406:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3192,"keyName":"account","keyNameLocation":"422:7:24","keyType":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":3205,"nodeType":"Block","src":"607:38:24","statements":[{"expression":{"baseExpression":{"id":3201,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"624:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3203,"indexExpression":{"id":3202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"632:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3200,"id":3204,"nodeType":"Return","src":"617:21:24"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"464:69:24","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:24","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"owner","nameLocation":"562:5:24","nodeType":"VariableDeclaration","scope":3206,"src":"554:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:24"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"598:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:24"},"scope":3247,"src":"538:107:24","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3220,"nodeType":"Block","src":"828:326:24","statements":[{"id":3219,"nodeType":"UncheckedBlock","src":"1031:117:24","statements":[{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:24","subExpression":{"baseExpression":{"id":3214,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"1121:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3216,"indexExpression":{"id":3215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"1129:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3213,"id":3218,"nodeType":"Return","src":"1114:23:24"}]}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"651:103:24","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:24","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"owner","nameLocation":"786:5:24","nodeType":"VariableDeclaration","scope":3221,"src":"778:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:24"},"returnParameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"819:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:24"},"scope":3247,"src":"759:395:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"1338:149:24","statements":[{"assignments":[3230],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"current","nameLocation":"1356:7:24","nodeType":"VariableDeclaration","scope":3245,"src":"1348:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"initialValue":{"arguments":[{"id":3232,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"1376:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3231,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1366:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"1396:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3236,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1405:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"IfStatement","src":"1392:89:24","trueBody":{"id":3243,"nodeType":"Block","src":"1414:67:24","statements":[{"errorCall":{"arguments":[{"id":3239,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"1455:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3240,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1462:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3238,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"1435:19:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3242,"nodeType":"RevertStatement","src":"1428:42:24"}]}}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"1160:100:24","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:24","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"owner","nameLocation":"1299:5:24","nodeType":"VariableDeclaration","scope":3246,"src":"1291:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:24","nodeType":"VariableDeclaration","scope":3246,"src":"1306:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:24"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[],"src":"1338:0:24"},"scope":3247,"src":"1265:222:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3248,"src":"209:1280:24","usedErrors":[3189],"usedEvents":[]}],"src":"99:1391:24"},"id":24},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3299]},"id":3300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"125:489:25","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3299,"linearizedBaseContracts":[3299],"name":"Panic","nameLocation":"665:5:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"677:36:25","text":"@dev generic / unspecified error"},"id":3254,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:25","nodeType":"VariableDeclaration","scope":3299,"src":"718:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"764:37:25","text":"@dev used by the assert() builtin"},"id":3258,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:25","nodeType":"VariableDeclaration","scope":3299,"src":"806:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"851:41:25","text":"@dev arithmetic underflow or overflow"},"id":3262,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:25","nodeType":"VariableDeclaration","scope":3299,"src":"897:47:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:25","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"950:35:25","text":"@dev division or modulo by zero"},"id":3266,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:25","nodeType":"VariableDeclaration","scope":3299,"src":"990:49:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"1045:30:25","text":"@dev enum conversion error"},"id":3270,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:25","nodeType":"VariableDeclaration","scope":3299,"src":"1080:54:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:25","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"1140:36:25","text":"@dev invalid encoding in storage"},"id":3274,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:25","nodeType":"VariableDeclaration","scope":3299,"src":"1181:55:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:25","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"1242:24:25","text":"@dev empty array pop"},"id":3278,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:25","nodeType":"VariableDeclaration","scope":3299,"src":"1271:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:25","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"1325:35:25","text":"@dev array out of bounds access"},"id":3282,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:25","nodeType":"VariableDeclaration","scope":3299,"src":"1365:52:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:25","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"1423:65:25","text":"@dev resource error (too large allocation or too large array)"},"id":3286,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:25","nodeType":"VariableDeclaration","scope":3299,"src":"1493:47:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"1546:42:25","text":"@dev calling invalid internal function"},"id":3290,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:25","nodeType":"VariableDeclaration","scope":3299,"src":"1593:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:25","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3297,"nodeType":"Block","src":"1819:151:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:25"},"nodeType":"YulFunctionCall","src":"1868:24:25"},"nodeType":"YulExpressionStatement","src":"1868:24:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:25","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:25"},"nodeType":"YulFunctionCall","src":"1905:18:25"},"nodeType":"YulExpressionStatement","src":"1905:18:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:25","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:25"},"nodeType":"YulFunctionCall","src":"1936:18:25"},"nodeType":"YulExpressionStatement","src":"1936:18:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":3293,"isOffset":false,"isSlot":false,"src":"1918:4:25","valueSize":1}],"flags":["memory-safe"],"id":3296,"nodeType":"InlineAssembly","src":"1829:135:25"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"1658:113:25","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:25","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"code","nameLocation":"1799:4:25","nodeType":"VariableDeclaration","scope":3298,"src":"1791:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:25"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"1819:0:25"},"scope":3299,"src":"1776:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3300,"src":"657:1315:25","usedErrors":[],"usedEvents":[]}],"src":"99:1874:25"},"id":25},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3368]},"id":3369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3301,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"135:894:26","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3368,"linearizedBaseContracts":[3368],"name":"ReentrancyGuard","nameLocation":"1048:15:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3305,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:26","nodeType":"VariableDeclaration","scope":3368,"src":"1818:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3308,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:26","nodeType":"VariableDeclaration","scope":3368,"src":"1864:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3310,"mutability":"mutable","name":"_status","nameLocation":"1923:7:26","nodeType":"VariableDeclaration","scope":3368,"src":"1907:23:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"1937:52:26","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3313,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:26","nodeType":"ErrorDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[],"src":"2028:2:26"},"src":"1994:37:26"},{"body":{"id":3320,"nodeType":"Block","src":"2051:38:26","statements":[{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3316,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2061:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3317,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"2071:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"2061:21:26"}]},"id":3321,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[],"src":"2048:2:26"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[],"src":"2051:0:26"},"scope":3368,"src":"2037:52:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3331,"nodeType":"Block","src":"2490:79:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3324,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2500:19:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3326,"nodeType":"ExpressionStatement","src":"2500:21:26"},{"id":3327,"nodeType":"PlaceholderStatement","src":"2531:1:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3328,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"2542:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"ExpressionStatement","src":"2542:20:26"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"2095:366:26","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3332,"name":"nonReentrant","nameLocation":"2475:12:26","nodeType":"ModifierDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[],"src":"2487:2:26"},"src":"2466:103:26","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"2614:268:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3336,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"2698:86:26","trueBody":{"id":3341,"nodeType":"Block","src":"2722:62:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3338,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"2743:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"RevertStatement","src":"2736:37:26"}]}},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3344,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2868:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"2858:17:26"}]},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:26","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"2603:2:26"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[],"src":"2614:0:26"},"scope":3368,"src":"2575:307:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3355,"nodeType":"Block","src":"2926:170:26","statements":[{"expression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3351,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3068:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3352,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3078:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3354,"nodeType":"ExpressionStatement","src":"3068:21:26"}]},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:26","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[],"src":"2915:2:26"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[],"src":"2926:0:26"},"scope":3368,"src":"2888:208:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3366,"nodeType":"Block","src":"3339:42:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3356:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3363,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"3367:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3361,"id":3365,"nodeType":"Return","src":"3349:25:26"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"3102:168:26","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:26","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[],"src":"3307:2:26"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"3333:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3359,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:26"},"scope":3368,"src":"3275:106:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3369,"src":"1030:2353:26","usedErrors":[3313],"usedEvents":[]}],"src":"109:3275:26"},"id":26},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[3374],"ShortStrings":[3585],"StorageSlot":[3709]},"id":3586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3370,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3586,"sourceUnit":3710,"src":"132:46:27","symbolAliases":[{"foreign":{"id":3371,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"140:11:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":3374,"name":"ShortString","nameLocation":"353:11:27","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:27","underlyingType":{"id":3373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"378:876:27","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":3585,"linearizedBaseContracts":[3585],"name":"ShortStrings","nameLocation":"1263:12:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3378,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:27","nodeType":"VariableDeclaration","scope":3585,"src":"1345:111:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":3382,"name":"StringTooLong","nameLocation":"1469:13:27","nodeType":"ErrorDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"str","nameLocation":"1490:3:27","nodeType":"VariableDeclaration","scope":3382,"src":"1483:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3379,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:27"},"src":"1463:32:27"},{"errorSelector":"b3512b0c","id":3384,"name":"InvalidShortString","nameLocation":"1506:18:27","nodeType":"ErrorDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[],"src":"1524:2:27"},"src":"1500:27:27"},{"body":{"id":3427,"nodeType":"Block","src":"1786:208:27","statements":[{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:27","nodeType":"VariableDeclaration","scope":3427,"src":"1796:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3393,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3399,"initialValue":{"arguments":[{"id":3397,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1822:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3395,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:27","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3400,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"1840:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:27","memberName":"length","nodeType":"MemberAccess","src":"1840:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:27","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3409,"nodeType":"IfStatement","src":"1836:72:27","trueBody":{"id":3408,"nodeType":"Block","src":"1858:50:27","statements":[{"errorCall":{"arguments":[{"id":3405,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1893:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3404,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"1879:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"RevertStatement","src":"1872:25:27"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3418,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"1965:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:27","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:27","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":3421,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"1974:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:27","memberName":"length","nodeType":"MemberAccess","src":"1974:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:27","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3410,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"1924:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"type(ShortString)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:27","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:27","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"functionReturnParameters":3392,"id":3426,"nodeType":"Return","src":"1917:70:27"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"1533:170:27","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:27","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"str","nameLocation":"1745:3:27","nodeType":"VariableDeclaration","scope":3428,"src":"1731:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3386,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:27"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3428,"src":"1773:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"ShortString","nameLocations":["1773:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"1773:11:27"},"referencedDeclaration":3374,"src":"1773:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:27"},"scope":3585,"src":"1708:286:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"2152:304:27","statements":[{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"len","nameLocation":"2170:3:27","nodeType":"VariableDeclaration","scope":3453,"src":"2162:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3442,"initialValue":{"arguments":[{"id":3440,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"2187:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"id":3439,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"2176:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:27"},{"assignments":[3444],"declarations":[{"constant":false,"id":3444,"mutability":"mutable","name":"str","nameLocation":"2294:3:27","nodeType":"VariableDeclaration","scope":3453,"src":"2280:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3443,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3449,"initialValue":{"arguments":[{"hexValue":"3332","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3445,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:27"},{"AST":{"nodeType":"YulBlock","src":"2349:81:27","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:27"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:27"},"nodeType":"YulFunctionCall","src":"2363:16:27"},"nodeType":"YulExpressionStatement","src":"2363:16:27"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:27"},"nodeType":"YulFunctionCall","src":"2399:14:27"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:27"},"nodeType":"YulFunctionCall","src":"2392:28:27"},"nodeType":"YulExpressionStatement","src":"2392:28:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":3438,"isOffset":false,"isSlot":false,"src":"2375:3:27","valueSize":1},{"declaration":3432,"isOffset":false,"isSlot":false,"src":"2415:4:27","valueSize":1},{"declaration":3444,"isOffset":false,"isSlot":false,"src":"2370:3:27","valueSize":1},{"declaration":3444,"isOffset":false,"isSlot":false,"src":"2403:3:27","valueSize":1}],"flags":["memory-safe"],"id":3450,"nodeType":"InlineAssembly","src":"2324:106:27"},{"expression":{"id":3451,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"2446:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3436,"id":3452,"nodeType":"Return","src":"2439:10:27"}]},"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"2000:73:27","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:27","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:27","nodeType":"VariableDeclaration","scope":3454,"src":"2096:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3431,"nodeType":"UserDefinedTypeName","pathNode":{"id":3430,"name":"ShortString","nameLocations":["2096:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"2096:11:27"},"referencedDeclaration":3374,"src":"2096:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:27"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3454,"src":"2137:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3434,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:27"},"scope":3585,"src":"2078:378:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"2598:175:27","statements":[{"assignments":[3464],"declarations":[{"constant":false,"id":3464,"mutability":"mutable","name":"result","nameLocation":"2616:6:27","nodeType":"VariableDeclaration","scope":3485,"src":"2608:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3474,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3469,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"2652:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"expression":{"id":3467,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2633:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"type(ShortString)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:27","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:27","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:27","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"2679:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:27","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3482,"nodeType":"IfStatement","src":"2675:69:27","trueBody":{"id":3481,"nodeType":"Block","src":"2692:52:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3478,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"2713:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3480,"nodeType":"RevertStatement","src":"2706:27:27"}]}},{"expression":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"2760:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3462,"id":3484,"nodeType":"Return","src":"2753:13:27"}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"2462:61:27","text":" @dev Return the length of a `ShortString`."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:27","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:27","nodeType":"VariableDeclaration","scope":3486,"src":"2548:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3457,"nodeType":"UserDefinedTypeName","pathNode":{"id":3456,"name":"ShortString","nameLocations":["2548:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"2548:11:27"},"referencedDeclaration":3374,"src":"2548:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:27"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"2589:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:27"},"scope":3585,"src":"2528:245:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3525,"nodeType":"Block","src":"2996:231:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3016:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3497,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:27","typeDescriptions":{}}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:27","memberName":"length","nodeType":"MemberAccess","src":"3010:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3523,"nodeType":"Block","src":"3094:127:27","statements":[{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3512,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"3134:5:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":3509,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"3108:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3709_$","typeString":"type(library StorageSlot)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:27","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3686,"src":"3108:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$3606_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3606_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":3514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:27","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"3108:38:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3149:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3517,"nodeType":"ExpressionStatement","src":"3108:46:27"},{"expression":{"arguments":[{"id":3520,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3192:17:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3518,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"3175:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"type(ShortString)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:27","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:27","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"functionReturnParameters":3496,"id":3522,"nodeType":"Return","src":"3168:42:27"}]},"id":3524,"nodeType":"IfStatement","src":"3006:215:27","trueBody":{"id":3508,"nodeType":"Block","src":"3036:52:27","statements":[{"expression":{"arguments":[{"id":3505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3071:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3504,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"3057:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"functionReturnParameters":3496,"id":3507,"nodeType":"Return","src":"3050:27:27"}]}}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"2779:103:27","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":3526,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:27","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"value","nameLocation":"2936:5:27","nodeType":"VariableDeclaration","scope":3526,"src":"2922:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3488,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"store","nameLocation":"2958:5:27","nodeType":"VariableDeclaration","scope":3526,"src":"2943:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3490,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:27"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3526,"src":"2983:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3494,"nodeType":"UserDefinedTypeName","pathNode":{"id":3493,"name":"ShortString","nameLocations":["2983:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"2983:11:27"},"referencedDeclaration":3374,"src":"2983:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:27"},"scope":3585,"src":"2887:340:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3552,"nodeType":"Block","src":"3467:158:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"3500:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"expression":{"id":3537,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"3481:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"type(ShortString)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:27","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:27","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3541,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3510:17:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3550,"nodeType":"Block","src":"3582:37:27","statements":[{"expression":{"id":3548,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"3603:5:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":3536,"id":3549,"nodeType":"Return","src":"3596:12:27"}]},"id":3551,"nodeType":"IfStatement","src":"3477:142:27","trueBody":{"id":3547,"nodeType":"Block","src":"3529:47:27","statements":[{"expression":{"arguments":[{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"3559:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"id":3543,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3550:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3536,"id":3546,"nodeType":"Return","src":"3543:22:27"}]}}]},"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"3233:120:27","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:27","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"value","nameLocation":"3400:5:27","nodeType":"VariableDeclaration","scope":3553,"src":"3388:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3529,"nodeType":"UserDefinedTypeName","pathNode":{"id":3528,"name":"ShortString","nameLocations":["3388:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"3388:11:27"},"referencedDeclaration":3374,"src":"3388:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"store","nameLocation":"3422:5:27","nodeType":"VariableDeclaration","scope":3553,"src":"3407:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3531,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:27"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3553,"src":"3452:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3534,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:27"},"scope":3585,"src":"3358:267:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"4105:174:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4138:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"expression":{"id":3564,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"4119:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"type(ShortString)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:27","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:27","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3568,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4148:17:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3581,"nodeType":"Block","src":"4222:51:27","statements":[{"expression":{"expression":{"arguments":[{"id":3577,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"4249:5:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3575,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:27","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:27","memberName":"length","nodeType":"MemberAccess","src":"4243:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3563,"id":3580,"nodeType":"Return","src":"4236:26:27"}]},"id":3582,"nodeType":"IfStatement","src":"4115:158:27","trueBody":{"id":3574,"nodeType":"Block","src":"4167:49:27","statements":[{"expression":{"arguments":[{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4199:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}],"id":3570,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4188:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3374_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3563,"id":3573,"nodeType":"Return","src":"4181:24:27"}]}}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"3631:364:27","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:27","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"value","nameLocation":"4044:5:27","nodeType":"VariableDeclaration","scope":3584,"src":"4032:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"ShortString","nameLocations":["4032:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"4032:11:27"},"referencedDeclaration":3374,"src":"4032:11:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"store","nameLocation":"4066:5:27","nodeType":"VariableDeclaration","scope":3584,"src":"4051:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3558,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:27"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"4096:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:27"},"scope":3585,"src":"4000:279:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3586,"src":"1255:3026:27","usedErrors":[3382,3384],"usedEvents":[]}],"src":"106:4176:27"},"id":27},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3709]},"id":3710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"219:1187:28","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3709,"linearizedBaseContracts":[3709],"name":"StorageSlot","nameLocation":"1415:11:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3591,"members":[{"constant":false,"id":3590,"mutability":"mutable","name":"value","nameLocation":"1470:5:28","nodeType":"VariableDeclaration","scope":3591,"src":"1462:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:28","nodeType":"StructDefinition","scope":3709,"src":"1433:49:28","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3594,"members":[{"constant":false,"id":3593,"mutability":"mutable","name":"value","nameLocation":"1522:5:28","nodeType":"VariableDeclaration","scope":3594,"src":"1517:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3592,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:28","nodeType":"StructDefinition","scope":3709,"src":"1488:46:28","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3597,"members":[{"constant":false,"id":3596,"mutability":"mutable","name":"value","nameLocation":"1577:5:28","nodeType":"VariableDeclaration","scope":3597,"src":"1569:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:28","nodeType":"StructDefinition","scope":3709,"src":"1540:49:28","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3600,"members":[{"constant":false,"id":3599,"mutability":"mutable","name":"value","nameLocation":"1632:5:28","nodeType":"VariableDeclaration","scope":3600,"src":"1624:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:28","nodeType":"StructDefinition","scope":3709,"src":"1595:49:28","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3603,"members":[{"constant":false,"id":3602,"mutability":"mutable","name":"value","nameLocation":"1685:5:28","nodeType":"VariableDeclaration","scope":3603,"src":"1678:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3601,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:28","nodeType":"StructDefinition","scope":3709,"src":"1650:47:28","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3606,"members":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"1738:5:28","nodeType":"VariableDeclaration","scope":3606,"src":"1731:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:28","nodeType":"StructDefinition","scope":3709,"src":"1703:47:28","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3609,"members":[{"constant":false,"id":3608,"mutability":"mutable","name":"value","nameLocation":"1789:5:28","nodeType":"VariableDeclaration","scope":3609,"src":"1783:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:28","nodeType":"StructDefinition","scope":3709,"src":"1756:45:28","visibility":"public"},{"body":{"id":3619,"nodeType":"Block","src":"1983:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:28","statements":[{"nodeType":"YulAssignment","src":"2032:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3616,"isOffset":false,"isSlot":true,"src":"2032:6:28","suffix":"slot","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"2042:4:28","valueSize":1}],"flags":["memory-safe"],"id":3618,"nodeType":"InlineAssembly","src":"1993:63:28"}]},"documentation":{"id":3610,"nodeType":"StructuredDocumentation","src":"1807:87:28","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:28","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"slot","nameLocation":"1931:4:28","nodeType":"VariableDeclaration","scope":3620,"src":"1923:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:28"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"r","nameLocation":"1980:1:28","nodeType":"VariableDeclaration","scope":3620,"src":"1960:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3591_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3615,"nodeType":"UserDefinedTypeName","pathNode":{"id":3614,"name":"AddressSlot","nameLocations":["1960:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":3591,"src":"1960:11:28"},"referencedDeclaration":3591,"src":"1960:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3591_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:28"},"scope":3709,"src":"1899:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"2243:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:28","statements":[{"nodeType":"YulAssignment","src":"2292:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3627,"isOffset":false,"isSlot":true,"src":"2292:6:28","suffix":"slot","valueSize":1},{"declaration":3623,"isOffset":false,"isSlot":false,"src":"2302:4:28","valueSize":1}],"flags":["memory-safe"],"id":3629,"nodeType":"InlineAssembly","src":"2253:63:28"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"2068:86:28","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:28","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"slot","nameLocation":"2191:4:28","nodeType":"VariableDeclaration","scope":3631,"src":"2183:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:28"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"r","nameLocation":"2240:1:28","nodeType":"VariableDeclaration","scope":3631,"src":"2220:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3594_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3626,"nodeType":"UserDefinedTypeName","pathNode":{"id":3625,"name":"BooleanSlot","nameLocations":["2220:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"2220:11:28"},"referencedDeclaration":3594,"src":"2220:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3594_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:28"},"scope":3709,"src":"2159:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"2503:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:28","statements":[{"nodeType":"YulAssignment","src":"2552:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3638,"isOffset":false,"isSlot":true,"src":"2552:6:28","suffix":"slot","valueSize":1},{"declaration":3634,"isOffset":false,"isSlot":false,"src":"2562:4:28","valueSize":1}],"flags":["memory-safe"],"id":3640,"nodeType":"InlineAssembly","src":"2513:63:28"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"2328:86:28","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:28","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"slot","nameLocation":"2451:4:28","nodeType":"VariableDeclaration","scope":3642,"src":"2443:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:28"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"r","nameLocation":"2500:1:28","nodeType":"VariableDeclaration","scope":3642,"src":"2480:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3597_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3637,"nodeType":"UserDefinedTypeName","pathNode":{"id":3636,"name":"Bytes32Slot","nameLocations":["2480:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":3597,"src":"2480:11:28"},"referencedDeclaration":3597,"src":"2480:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3597_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:28"},"scope":3709,"src":"2419:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"2763:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:28","statements":[{"nodeType":"YulAssignment","src":"2812:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":true,"src":"2812:6:28","suffix":"slot","valueSize":1},{"declaration":3645,"isOffset":false,"isSlot":false,"src":"2822:4:28","valueSize":1}],"flags":["memory-safe"],"id":3651,"nodeType":"InlineAssembly","src":"2773:63:28"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"2588:86:28","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:28","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"slot","nameLocation":"2711:4:28","nodeType":"VariableDeclaration","scope":3653,"src":"2703:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:28"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"r","nameLocation":"2760:1:28","nodeType":"VariableDeclaration","scope":3653,"src":"2740:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3600_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3648,"nodeType":"UserDefinedTypeName","pathNode":{"id":3647,"name":"Uint256Slot","nameLocations":["2740:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"2740:11:28"},"referencedDeclaration":3600,"src":"2740:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3600_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:28"},"scope":3709,"src":"2679:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"3020:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:28","statements":[{"nodeType":"YulAssignment","src":"3069:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3660,"isOffset":false,"isSlot":true,"src":"3069:6:28","suffix":"slot","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"3079:4:28","valueSize":1}],"flags":["memory-safe"],"id":3662,"nodeType":"InlineAssembly","src":"3030:63:28"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"2848:85:28","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:28","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"slot","nameLocation":"2969:4:28","nodeType":"VariableDeclaration","scope":3664,"src":"2961:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:28"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"r","nameLocation":"3017:1:28","nodeType":"VariableDeclaration","scope":3664,"src":"2998:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3603_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3659,"nodeType":"UserDefinedTypeName","pathNode":{"id":3658,"name":"Int256Slot","nameLocations":["2998:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":3603,"src":"2998:10:28"},"referencedDeclaration":3603,"src":"2998:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3603_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:28"},"scope":3709,"src":"2938:161:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"3277:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:28","statements":[{"nodeType":"YulAssignment","src":"3326:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3671,"isOffset":false,"isSlot":true,"src":"3326:6:28","suffix":"slot","valueSize":1},{"declaration":3667,"isOffset":false,"isSlot":false,"src":"3336:4:28","valueSize":1}],"flags":["memory-safe"],"id":3673,"nodeType":"InlineAssembly","src":"3287:63:28"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"3105:85:28","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:28","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"slot","nameLocation":"3226:4:28","nodeType":"VariableDeclaration","scope":3675,"src":"3218:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:28"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"r","nameLocation":"3274:1:28","nodeType":"VariableDeclaration","scope":3675,"src":"3255:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3606_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3670,"nodeType":"UserDefinedTypeName","pathNode":{"id":3669,"name":"StringSlot","nameLocations":["3255:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":3606,"src":"3255:10:28"},"referencedDeclaration":3606,"src":"3255:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3606_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:28"},"scope":3709,"src":"3195:161:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"3558:85:28","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:28","statements":[{"nodeType":"YulAssignment","src":"3607:20:28","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3682,"isOffset":false,"isSlot":true,"src":"3607:6:28","suffix":"slot","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":true,"src":"3617:10:28","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3684,"nodeType":"InlineAssembly","src":"3568:69:28"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"3362:101:28","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:28","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"store","nameLocation":"3506:5:28","nodeType":"VariableDeclaration","scope":3686,"src":"3491:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3677,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:28"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"r","nameLocation":"3555:1:28","nodeType":"VariableDeclaration","scope":3686,"src":"3536:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3606_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3681,"nodeType":"UserDefinedTypeName","pathNode":{"id":3680,"name":"StringSlot","nameLocations":["3536:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":3606,"src":"3536:10:28"},"referencedDeclaration":3606,"src":"3536:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3606_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:28"},"scope":3709,"src":"3468:175:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"3818:79:28","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:28","statements":[{"nodeType":"YulAssignment","src":"3867:14:28","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3693,"isOffset":false,"isSlot":true,"src":"3867:6:28","suffix":"slot","valueSize":1},{"declaration":3689,"isOffset":false,"isSlot":false,"src":"3877:4:28","valueSize":1}],"flags":["memory-safe"],"id":3695,"nodeType":"InlineAssembly","src":"3828:63:28"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"3649:84:28","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:28","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"slot","nameLocation":"3768:4:28","nodeType":"VariableDeclaration","scope":3697,"src":"3760:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:28"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"r","nameLocation":"3815:1:28","nodeType":"VariableDeclaration","scope":3697,"src":"3797:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3609_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3692,"nodeType":"UserDefinedTypeName","pathNode":{"id":3691,"name":"BytesSlot","nameLocations":["3797:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":3609,"src":"3797:9:28"},"referencedDeclaration":3609,"src":"3797:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3609_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:28"},"scope":3709,"src":"3738:159:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3707,"nodeType":"Block","src":"4094:85:28","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:28","statements":[{"nodeType":"YulAssignment","src":"4143:20:28","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:28"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3704,"isOffset":false,"isSlot":true,"src":"4143:6:28","suffix":"slot","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":true,"src":"4153:10:28","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3706,"nodeType":"InlineAssembly","src":"4104:69:28"}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"3903:99:28","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3708,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:28","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"store","nameLocation":"4043:5:28","nodeType":"VariableDeclaration","scope":3708,"src":"4029:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3699,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:28"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"r","nameLocation":"4091:1:28","nodeType":"VariableDeclaration","scope":3708,"src":"4073:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3609_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3703,"nodeType":"UserDefinedTypeName","pathNode":{"id":3702,"name":"BytesSlot","nameLocations":["4073:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":3609,"src":"4073:9:28"},"referencedDeclaration":3609,"src":"4073:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3609_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:28"},"scope":3709,"src":"4007:172:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3710,"src":"1407:2774:28","usedErrors":[],"usedEvents":[]}],"src":"193:3989:28"},"id":28},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6320],"SignedMath":[8229],"Strings":[4029]},"id":4030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3711,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4030,"sourceUnit":6321,"src":"127:37:29","symbolAliases":[{"foreign":{"id":3712,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"135:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4030,"sourceUnit":8230,"src":"165:49:29","symbolAliases":[{"foreign":{"id":3714,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"173:10:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"216:34:29","text":" @dev String operations."},"fullyImplemented":true,"id":4029,"linearizedBaseContracts":[4029],"name":"Strings","nameLocation":"259:7:29","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3719,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:29","nodeType":"VariableDeclaration","scope":4029,"src":"273:56:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3717,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:29","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3722,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:29","nodeType":"VariableDeclaration","scope":4029,"src":"335:42:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3720,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:29","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"384:81:29","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3729,"name":"StringsInsufficientHexLength","nameLocation":"476:28:29","nodeType":"ErrorDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"value","nameLocation":"513:5:29","nodeType":"VariableDeclaration","scope":3729,"src":"505:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"length","nameLocation":"528:6:29","nodeType":"VariableDeclaration","scope":3729,"src":"520:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:29"},"src":"470:66:29"},{"body":{"id":3776,"nodeType":"Block","src":"708:561:29","statements":[{"id":3775,"nodeType":"UncheckedBlock","src":"718:545:29","statements":[{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"length","nameLocation":"750:6:29","nodeType":"VariableDeclaration","scope":3775,"src":"742:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3745,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"770:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3739,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"759:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:29","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"759:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:29"},{"assignments":[3747],"declarations":[{"constant":false,"id":3747,"mutability":"mutable","name":"buffer","nameLocation":"808:6:29","nodeType":"VariableDeclaration","scope":3775,"src":"794:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3746,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3752,"initialValue":{"arguments":[{"id":3750,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"828:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3748,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:29"},{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"ptr","nameLocation":"857:3:29","nodeType":"VariableDeclaration","scope":3775,"src":"849:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3755,"nodeType":"VariableDeclarationStatement","src":"849:11:29"},{"AST":{"nodeType":"YulBlock","src":"899:67:29","statements":[{"nodeType":"YulAssignment","src":"917:35:29","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:29","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:29"},"nodeType":"YulFunctionCall","src":"936:15:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:29"},"nodeType":"YulFunctionCall","src":"924:28:29"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3747,"isOffset":false,"isSlot":false,"src":"928:6:29","valueSize":1},{"declaration":3738,"isOffset":false,"isSlot":false,"src":"944:6:29","valueSize":1},{"declaration":3754,"isOffset":false,"isSlot":false,"src":"917:3:29","valueSize":1}],"flags":["memory-safe"],"id":3756,"nodeType":"InlineAssembly","src":"874:92:29"},{"body":{"id":3771,"nodeType":"Block","src":"992:234:29","statements":[{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:29","subExpression":{"id":3758,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"1010:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ExpressionStatement","src":"1010:5:29"},{"AST":{"nodeType":"YulBlock","src":"1058:86:29","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:29","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:29"},"nodeType":"YulFunctionCall","src":"1098:14:29"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:29"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:29"},"nodeType":"YulFunctionCall","src":"1093:32:29"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:29"},"nodeType":"YulFunctionCall","src":"1080:46:29"},"nodeType":"YulExpressionStatement","src":"1080:46:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":3719,"isOffset":false,"isSlot":false,"src":"1114:10:29","valueSize":1},{"declaration":3754,"isOffset":false,"isSlot":false,"src":"1088:3:29","valueSize":1},{"declaration":3732,"isOffset":false,"isSlot":false,"src":"1102:5:29","valueSize":1}],"flags":["memory-safe"],"id":3761,"nodeType":"InlineAssembly","src":"1033:111:29"},{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1161:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"1161:11:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1194:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3770,"nodeType":"IfStatement","src":"1190:21:29","trueBody":{"id":3769,"nodeType":"Break","src":"1206:5:29"}}]},"condition":{"hexValue":"74727565","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3772,"nodeType":"WhileStatement","src":"979:247:29"},{"expression":{"id":3773,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"1246:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3736,"id":3774,"nodeType":"Return","src":"1239:13:29"}]}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"542:90:29","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:29","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"value","nameLocation":"663:5:29","nodeType":"VariableDeclaration","scope":3777,"src":"655:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:29"},"returnParameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3777,"src":"693:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3734,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:29"},"scope":4029,"src":"637:632:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3802,"nodeType":"Block","src":"1445:92:29","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"1476:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:29","trueExpression":{"hexValue":"2d","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"1522:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3795,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"1507:10:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8229_$","typeString":"type(library SignedMath)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:29","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8228,"src":"1507:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"1498:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3785,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:29","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:29","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:29","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3784,"id":3801,"nodeType":"Return","src":"1455:75:29"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"1275:89:29","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:29","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"value","nameLocation":"1400:5:29","nodeType":"VariableDeclaration","scope":3803,"src":"1393:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3779,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:29"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"1430:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3782,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:29"},"scope":4029,"src":"1369:168:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3822,"nodeType":"Block","src":"1716:100:29","statements":[{"id":3821,"nodeType":"UncheckedBlock","src":"1726:84:29","statements":[{"expression":{"arguments":[{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"1769:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"1788:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3813,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"1776:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:29","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6263,"src":"1776:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3823,3906,3926],"referencedDeclaration":3906,"src":"1757:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3810,"id":3820,"nodeType":"Return","src":"1750:49:29"}]}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"1543:94:29","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3823,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:29","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"value","nameLocation":"1671:5:29","nodeType":"VariableDeclaration","scope":3823,"src":"1663:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:29"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"1701:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3808,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:29"},"scope":4029,"src":"1642:174:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3905,"nodeType":"Block","src":"2029:435:29","statements":[{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:29","nodeType":"VariableDeclaration","scope":3905,"src":"2039:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"initialValue":{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"2060:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:29"},{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:29","nodeType":"VariableDeclaration","scope":3905,"src":"2075:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3847,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3842,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"2111:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3839,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:29"},{"expression":{"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3848,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2132:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3850,"indexExpression":{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3853,"nodeType":"ExpressionStatement","src":"2132:15:29"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2157:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3856,"indexExpression":{"hexValue":"31","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3859,"nodeType":"ExpressionStatement","src":"2157:15:29"},{"body":{"id":3888,"nodeType":"Block","src":"2227:95:29","statements":[{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3874,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2241:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3876,"indexExpression":{"id":3875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"2248:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3877,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"2253:10:29","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3881,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2264:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3883,"nodeType":"ExpressionStatement","src":"2241:40:29"},{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2295:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3887,"nodeType":"ExpressionStatement","src":"2295:16:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"2215:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"initializationExpression":{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"i","nameLocation":"2195:1:29","nodeType":"VariableDeclaration","scope":3889,"src":"2187:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3867,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3863,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"2203:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:29"},"loopExpression":{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:29","subExpression":{"id":3871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"2224:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"2222:3:29"},"nodeType":"ForStatement","src":"2182:140:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3890,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2335:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"2331:96:29","trueBody":{"id":3898,"nodeType":"Block","src":"2352:75:29","statements":[{"errorCall":{"arguments":[{"id":3894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"2402:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3895,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"2409:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"2373:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3897,"nodeType":"RevertStatement","src":"2366:50:29"}]}},{"expression":{"arguments":[{"id":3902,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2450:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3900,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:29","typeDescriptions":{}}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3832,"id":3904,"nodeType":"Return","src":"2436:21:29"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"1822:112:29","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:29","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"value","nameLocation":"1968:5:29","nodeType":"VariableDeclaration","scope":3906,"src":"1960:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"length","nameLocation":"1983:6:29","nodeType":"VariableDeclaration","scope":3906,"src":"1975:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:29"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"2014:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3830,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:29"},"scope":4029,"src":"1939:525:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3925,"nodeType":"Block","src":"2696:75:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3919,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"2741:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3917,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:29","typeDescriptions":{}}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:29","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2749:14:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3914,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3823,3906,3926],"referencedDeclaration":3906,"src":"2713:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3913,"id":3924,"nodeType":"Return","src":"2706:58:29"}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"2470:148:29","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3926,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:29","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"addr","nameLocation":"2652:4:29","nodeType":"VariableDeclaration","scope":3926,"src":"2644:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3908,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:29"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"2681:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3911,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:29"},"scope":4029,"src":"2623:148:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"3028:642:29","statements":[{"assignments":[3935],"declarations":[{"constant":false,"id":3935,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:29","nodeType":"VariableDeclaration","scope":3990,"src":"3038:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3934,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3942,"initialValue":{"arguments":[{"arguments":[{"id":3939,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"3078:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3938,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3823,3906,3926],"referencedDeclaration":3926,"src":"3066:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3936,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:29","typeDescriptions":{}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:29"},{"assignments":[3944],"declarations":[{"constant":false,"id":3944,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:29","nodeType":"VariableDeclaration","scope":3990,"src":"3169:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"nodeType":"VariableDeclarationStatement","src":"3169:17:29"},{"AST":{"nodeType":"YulBlock","src":"3221:78:29","statements":[{"nodeType":"YulAssignment","src":"3235:54:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:29","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:29","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:29"},"nodeType":"YulFunctionCall","src":"3266:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:29","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:29"},"nodeType":"YulFunctionCall","src":"3256:32:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:29"},"nodeType":"YulFunctionCall","src":"3248:41:29"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3935,"isOffset":false,"isSlot":false,"src":"3270:6:29","valueSize":1},{"declaration":3944,"isOffset":false,"isSlot":false,"src":"3235:9:29","valueSize":1}],"flags":["memory-safe"],"id":3946,"nodeType":"InlineAssembly","src":"3196:103:29"},{"body":{"id":3983,"nodeType":"Block","src":"3342:291:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"3448:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:29","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3964,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"3477:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3966,"indexExpression":{"id":3965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3484:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3962,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:29","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3978,"nodeType":"IfStatement","src":"3444:150:29","trueBody":{"id":3977,"nodeType":"Block","src":"3494:100:29","statements":[{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3971,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"3562:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3973,"indexExpression":{"id":3972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3569:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3976,"nodeType":"ExpressionStatement","src":"3562:17:29"}]}},{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3979,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"3607:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"nodeType":"ExpressionStatement","src":"3607:15:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3330:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3984,"initializationExpression":{"assignments":[3948],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"i","nameLocation":"3322:1:29","nodeType":"VariableDeclaration","scope":3984,"src":"3314:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3950,"initialValue":{"hexValue":"3431","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:29","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:29"},"loopExpression":{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:29","subExpression":{"id":3954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3339:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ExpressionStatement","src":"3337:3:29"},"nodeType":"ForStatement","src":"3309:324:29"},{"expression":{"arguments":[{"id":3987,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"3656:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3985,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:29","typeDescriptions":{}}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3933,"id":3989,"nodeType":"Return","src":"3642:21:29"}]},"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"2777:165:29","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:29","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"addr","nameLocation":"2984:4:29","nodeType":"VariableDeclaration","scope":3991,"src":"2976:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:29"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"3013:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3931,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:29"},"scope":4029,"src":"2947:723:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"3825:104:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"3848:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4001,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:29","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:29","memberName":"length","nodeType":"MemberAccess","src":"3842:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"3867:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:29","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:29","memberName":"length","nodeType":"MemberAccess","src":"3861:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"3896:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4013,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:29","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3880:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"3919:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4019,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:29","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3903:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4000,"id":4026,"nodeType":"Return","src":"3835:87:29"}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"3676:66:29","text":" @dev Returns true if the two strings are equal."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:29","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"a","nameLocation":"3776:1:29","nodeType":"VariableDeclaration","scope":4028,"src":"3762:15:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3993,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"b","nameLocation":"3793:1:29","nodeType":"VariableDeclaration","scope":4028,"src":"3779:15:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3995,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:29"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"3819:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3998,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:29"},"scope":4029,"src":"3747:182:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4030,"src":"251:3680:29","usedErrors":[3729],"usedEvents":[]}],"src":"101:3831:29"},"id":29},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4377]},"id":4378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4031,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"138:205:30","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4377,"linearizedBaseContracts":[4377],"name":"ECDSA","nameLocation":"352:5:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4037,"members":[{"id":4033,"name":"NoError","nameLocation":"392:7:30","nodeType":"EnumValue","src":"392:7:30"},{"id":4034,"name":"InvalidSignature","nameLocation":"409:16:30","nodeType":"EnumValue","src":"409:16:30"},{"id":4035,"name":"InvalidSignatureLength","nameLocation":"435:22:30","nodeType":"EnumValue","src":"435:22:30"},{"id":4036,"name":"InvalidSignatureS","nameLocation":"467:17:30","nodeType":"EnumValue","src":"467:17:30"}],"name":"RecoverError","nameLocation":"369:12:30","nodeType":"EnumDefinition","src":"364:126:30"},{"documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"496:63:30","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4040,"name":"ECDSAInvalidSignature","nameLocation":"570:21:30","nodeType":"ErrorDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[],"src":"591:2:30"},"src":"564:30:30"},{"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"600:60:30","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4045,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:30","nodeType":"ErrorDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"length","nameLocation":"707:6:30","nodeType":"VariableDeclaration","scope":4045,"src":"699:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:30"},"src":"665:50:30"},{"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"721:85:30","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4050,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:30","nodeType":"ErrorDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"s","nameLocation":"848:1:30","nodeType":"VariableDeclaration","scope":4050,"src":"840:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:30"},"src":"811:40:30"},{"body":{"id":4102,"nodeType":"Block","src":"2285:622:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4065,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"2299:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:30","memberName":"length","nodeType":"MemberAccess","src":"2299:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:30","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4100,"nodeType":"Block","src":"2793:108:30","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4087,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:30","typeDescriptions":{}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4091,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"2827:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:30","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4035,"src":"2827:35:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4095,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"2872:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:30","memberName":"length","nodeType":"MemberAccess","src":"2872:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:30","typeDescriptions":{}}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4064,"id":4099,"nodeType":"Return","src":"2807:83:30"}]},"id":4101,"nodeType":"IfStatement","src":"2295:606:30","trueBody":{"id":4086,"nodeType":"Block","src":"2323:464:30","statements":[{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"r","nameLocation":"2345:1:30","nodeType":"VariableDeclaration","scope":4086,"src":"2337:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4071,"nodeType":"VariableDeclarationStatement","src":"2337:9:30"},{"assignments":[4073],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"s","nameLocation":"2368:1:30","nodeType":"VariableDeclaration","scope":4086,"src":"2360:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4074,"nodeType":"VariableDeclarationStatement","src":"2360:9:30"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"v","nameLocation":"2389:1:30","nodeType":"VariableDeclaration","scope":4086,"src":"2383:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4075,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4077,"nodeType":"VariableDeclarationStatement","src":"2383:7:30"},{"AST":{"nodeType":"YulBlock","src":"2560:171:30","statements":[{"nodeType":"YulAssignment","src":"2578:32:30","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:30"},"nodeType":"YulFunctionCall","src":"2589:20:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:30"},"nodeType":"YulFunctionCall","src":"2583:27:30"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:30"}]},{"nodeType":"YulAssignment","src":"2627:32:30","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:30"},"nodeType":"YulFunctionCall","src":"2638:20:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:30"},"nodeType":"YulFunctionCall","src":"2632:27:30"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:30"}]},{"nodeType":"YulAssignment","src":"2676:41:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:30","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:30"},"nodeType":"YulFunctionCall","src":"2695:20:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:30"},"nodeType":"YulFunctionCall","src":"2689:27:30"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:30"},"nodeType":"YulFunctionCall","src":"2681:36:30"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4070,"isOffset":false,"isSlot":false,"src":"2578:1:30","valueSize":1},{"declaration":4073,"isOffset":false,"isSlot":false,"src":"2627:1:30","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"2593:9:30","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"2642:9:30","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"2699:9:30","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"2676:1:30","valueSize":1}],"flags":["memory-safe"],"id":4078,"nodeType":"InlineAssembly","src":"2535:196:30"},{"expression":{"arguments":[{"id":4080,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"2762:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4081,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"2768:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4082,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"2771:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4083,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"2774:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4079,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4103,4183,4291],"referencedDeclaration":4291,"src":"2751:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4064,"id":4085,"nodeType":"Return","src":"2744:32:30"}]}}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"857:1267:30","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:30","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"hash","nameLocation":"2166:4:30","nodeType":"VariableDeclaration","scope":4103,"src":"2158:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"signature","nameLocation":"2193:9:30","nodeType":"VariableDeclaration","scope":4103,"src":"2180:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4054,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:30"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:30","nodeType":"VariableDeclaration","scope":4103,"src":"2232:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4057,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"err","nameLocation":"2264:3:30","nodeType":"VariableDeclaration","scope":4103,"src":"2251:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4060,"nodeType":"UserDefinedTypeName","pathNode":{"id":4059,"name":"RecoverError","nameLocations":["2251:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"2251:12:30"},"referencedDeclaration":4037,"src":"2251:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:30","nodeType":"VariableDeclaration","scope":4103,"src":"2269:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:30"},"scope":4377,"src":"2129:778:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4132,"nodeType":"Block","src":"3801:168:30","statements":[{"assignments":[4114,4117,4119],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:30","nodeType":"VariableDeclaration","scope":4132,"src":"3812:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4113,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"error","nameLocation":"3844:5:30","nodeType":"VariableDeclaration","scope":4132,"src":"3831:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4116,"nodeType":"UserDefinedTypeName","pathNode":{"id":4115,"name":"RecoverError","nameLocations":["3831:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"3831:12:30"},"referencedDeclaration":4037,"src":"3831:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:30","nodeType":"VariableDeclaration","scope":4132,"src":"3851:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4124,"initialValue":{"arguments":[{"id":4121,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3882:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4122,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"3888:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4120,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4103,4183,4291],"referencedDeclaration":4103,"src":"3871:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:30"},{"expression":{"arguments":[{"id":4126,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"3920:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"id":4127,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3927:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4125,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"3908:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4037_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4129,"nodeType":"ExpressionStatement","src":"3908:28:30"},{"expression":{"id":4130,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"3953:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4112,"id":4131,"nodeType":"Return","src":"3946:16:30"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"2913:796:30","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:30","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"hash","nameLocation":"3739:4:30","nodeType":"VariableDeclaration","scope":4133,"src":"3731:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"signature","nameLocation":"3758:9:30","nodeType":"VariableDeclaration","scope":4133,"src":"3745:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4107,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:30"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"3792:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4110,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:30"},"scope":4377,"src":"3714:255:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"4348:342:30","statements":[{"id":4181,"nodeType":"UncheckedBlock","src":"4358:326:30","statements":[{"assignments":[4151],"declarations":[{"constant":false,"id":4151,"mutability":"mutable","name":"s","nameLocation":"4390:1:30","nodeType":"VariableDeclaration","scope":4181,"src":"4382:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4158,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"4394:2:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:30","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:30","typeDescriptions":{}}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:30"},{"assignments":[4160],"declarations":[{"constant":false,"id":4160,"mutability":"mutable","name":"v","nameLocation":"4591:1:30","nodeType":"VariableDeclaration","scope":4181,"src":"4585:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4159,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4173,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4165,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"4610:2:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:30","typeDescriptions":{}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:30","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4161,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:30","typeDescriptions":{}}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:30"},{"expression":{"arguments":[{"id":4175,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"4659:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4176,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"4665:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4177,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"4668:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4178,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"4671:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4174,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4103,4183,4291],"referencedDeclaration":4291,"src":"4648:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4149,"id":4180,"nodeType":"Return","src":"4641:32:30"}]}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"3975:205:30","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:30","nodeType":"FunctionDefinition","parameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"hash","nameLocation":"4222:4:30","nodeType":"VariableDeclaration","scope":4183,"src":"4214:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"r","nameLocation":"4244:1:30","nodeType":"VariableDeclaration","scope":4183,"src":"4236:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"vs","nameLocation":"4263:2:30","nodeType":"VariableDeclaration","scope":4183,"src":"4255:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:30"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:30","nodeType":"VariableDeclaration","scope":4183,"src":"4295:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"err","nameLocation":"4327:3:30","nodeType":"VariableDeclaration","scope":4183,"src":"4314:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4145,"nodeType":"UserDefinedTypeName","pathNode":{"id":4144,"name":"RecoverError","nameLocations":["4314:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"4314:12:30"},"referencedDeclaration":4037,"src":"4314:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:30","nodeType":"VariableDeclaration","scope":4183,"src":"4332:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:30"},"scope":4377,"src":"4185:505:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4215,"nodeType":"Block","src":"4903:164:30","statements":[{"assignments":[4196,4199,4201],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:30","nodeType":"VariableDeclaration","scope":4215,"src":"4914:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"error","nameLocation":"4946:5:30","nodeType":"VariableDeclaration","scope":4215,"src":"4933:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4198,"nodeType":"UserDefinedTypeName","pathNode":{"id":4197,"name":"RecoverError","nameLocations":["4933:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"4933:12:30"},"referencedDeclaration":4037,"src":"4933:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:30","nodeType":"VariableDeclaration","scope":4215,"src":"4953:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4207,"initialValue":{"arguments":[{"id":4203,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"4984:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4204,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"4990:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4205,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4993:2:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4202,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4103,4183,4291],"referencedDeclaration":4183,"src":"4973:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:30"},{"expression":{"arguments":[{"id":4209,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"5018:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"id":4210,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"5025:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4208,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"5006:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4037_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"5006:28:30"},{"expression":{"id":4213,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"5051:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4194,"id":4214,"nodeType":"Return","src":"5044:16:30"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"4696:116:30","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4216,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:30","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"hash","nameLocation":"4842:4:30","nodeType":"VariableDeclaration","scope":4216,"src":"4834:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"r","nameLocation":"4856:1:30","nodeType":"VariableDeclaration","scope":4216,"src":"4848:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"vs","nameLocation":"4867:2:30","nodeType":"VariableDeclaration","scope":4216,"src":"4859:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:30"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4216,"src":"4894:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4192,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:30"},"scope":4377,"src":"4817:250:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4290,"nodeType":"Block","src":"5382:1372:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4237,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"6278:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:30","typeDescriptions":{}}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:30","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4251,"nodeType":"IfStatement","src":"6266:164:30","trueBody":{"id":4250,"nodeType":"Block","src":"6351:79:30","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:30","typeDescriptions":{}}},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4245,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6385:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:30","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"6385:30:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"id":4247,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"6417:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4234,"id":4249,"nodeType":"Return","src":"6365:54:30"}]}},{"assignments":[4253],"declarations":[{"constant":false,"id":4253,"mutability":"mutable","name":"signer","nameLocation":"6532:6:30","nodeType":"VariableDeclaration","scope":4290,"src":"6524:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4252,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4260,"initialValue":{"arguments":[{"id":4255,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"6551:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4256,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"6557:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4257,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"6560:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4258,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"6563:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4254,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967290,"src":"6541:9:30","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"6579:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:30","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4280,"nodeType":"IfStatement","src":"6575:113:30","trueBody":{"id":4279,"nodeType":"Block","src":"6601:87:30","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4267,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:30","typeDescriptions":{}}},"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4271,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6635:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:30","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"6635:29:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:30","typeDescriptions":{}}},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4234,"id":4278,"nodeType":"Return","src":"6615:62:30"}]}},{"expression":{"components":[{"id":4281,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"6706:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4282,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6714:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:30","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4033,"src":"6714:20:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:30","typeDescriptions":{}}},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4234,"id":4289,"nodeType":"Return","src":"6698:49:30"}]},"documentation":{"id":4217,"nodeType":"StructuredDocumentation","src":"5073:125:30","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:30","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"hash","nameLocation":"5240:4:30","nodeType":"VariableDeclaration","scope":4291,"src":"5232:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"v","nameLocation":"5260:1:30","nodeType":"VariableDeclaration","scope":4291,"src":"5254:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4220,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"r","nameLocation":"5279:1:30","nodeType":"VariableDeclaration","scope":4291,"src":"5271:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"s","nameLocation":"5298:1:30","nodeType":"VariableDeclaration","scope":4291,"src":"5290:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:30"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:30","nodeType":"VariableDeclaration","scope":4291,"src":"5329:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"err","nameLocation":"5361:3:30","nodeType":"VariableDeclaration","scope":4291,"src":"5348:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4230,"nodeType":"UserDefinedTypeName","pathNode":{"id":4229,"name":"RecoverError","nameLocations":["5348:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"5348:12:30"},"referencedDeclaration":4037,"src":"5348:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:30","nodeType":"VariableDeclaration","scope":4291,"src":"5366:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:30"},"scope":4377,"src":"5203:1551:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"6981:166:30","statements":[{"assignments":[4306,4309,4311],"declarations":[{"constant":false,"id":4306,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:30","nodeType":"VariableDeclaration","scope":4326,"src":"6992:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4305,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"error","nameLocation":"7024:5:30","nodeType":"VariableDeclaration","scope":4326,"src":"7011:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4308,"nodeType":"UserDefinedTypeName","pathNode":{"id":4307,"name":"RecoverError","nameLocations":["7011:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"7011:12:30"},"referencedDeclaration":4037,"src":"7011:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:30","nodeType":"VariableDeclaration","scope":4326,"src":"7031:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4318,"initialValue":{"arguments":[{"id":4313,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"7062:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4314,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"7068:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4315,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"7071:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4316,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"7074:1:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4312,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4103,4183,4291],"referencedDeclaration":4291,"src":"7051:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4037_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:30"},{"expression":{"arguments":[{"id":4320,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"7098:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},{"id":4321,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"7105:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4319,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"7086:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4037_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4323,"nodeType":"ExpressionStatement","src":"7086:28:30"},{"expression":{"id":4324,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"7131:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4304,"id":4325,"nodeType":"Return","src":"7124:16:30"}]},"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"6760:122:30","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:30","nodeType":"FunctionDefinition","parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"hash","nameLocation":"6912:4:30","nodeType":"VariableDeclaration","scope":4327,"src":"6904:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4296,"mutability":"mutable","name":"v","nameLocation":"6924:1:30","nodeType":"VariableDeclaration","scope":4327,"src":"6918:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4295,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"r","nameLocation":"6935:1:30","nodeType":"VariableDeclaration","scope":4327,"src":"6927:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"s","nameLocation":"6946:1:30","nodeType":"VariableDeclaration","scope":4327,"src":"6938:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:30"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"6972:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:30"},"scope":4377,"src":"6887:260:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"7352:460:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"7366:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4337,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7375:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:30","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4033,"src":"7375:20:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"7462:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4343,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7471:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:30","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"7471:29:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"7567:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4351,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7576:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:30","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4035,"src":"7576:35:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"7701:5:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4363,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7710:12:30","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4037_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:30","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"7710:30:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"7697:109:30","trueBody":{"id":4370,"nodeType":"Block","src":"7742:64:30","statements":[{"errorCall":{"arguments":[{"id":4367,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"7786:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4366,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7763:22:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"RevertStatement","src":"7756:39:30"}]}},"id":4372,"nodeType":"IfStatement","src":"7563:243:30","trueBody":{"id":4361,"nodeType":"Block","src":"7613:78:30","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4357,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"7670:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:30","typeDescriptions":{}}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4354,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"7634:27:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"RevertStatement","src":"7627:53:30"}]}},"id":4373,"nodeType":"IfStatement","src":"7458:348:30","trueBody":{"id":4349,"nodeType":"Block","src":"7502:55:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4346,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"7523:21:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"RevertStatement","src":"7516:30:30"}]}},"id":4374,"nodeType":"IfStatement","src":"7362:444:30","trueBody":{"id":4341,"nodeType":"Block","src":"7397:55:30","statements":[{"functionReturnParameters":4335,"id":4340,"nodeType":"Return","src":"7411:7:30"}]}}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"7153:122:30","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:30","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"error","nameLocation":"7314:5:30","nodeType":"VariableDeclaration","scope":4376,"src":"7301:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4330,"nodeType":"UserDefinedTypeName","pathNode":{"id":4329,"name":"RecoverError","nameLocations":["7301:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"7301:12:30"},"referencedDeclaration":4037,"src":"7301:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4037","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:30","nodeType":"VariableDeclaration","scope":4376,"src":"7321:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:30"},"returnParameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"7352:0:30"},"scope":4377,"src":"7280:532:30","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4378,"src":"344:7470:30","usedErrors":[4040,4045,4050],"usedEvents":[]}],"src":"112:7703:30"},"id":30},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4604],"IERC5267":[1307],"MessageHashUtils":[4678],"ShortString":[3374],"ShortStrings":[3585]},"id":4605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4379,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4605,"sourceUnit":4679,"src":"139:56:31","symbolAliases":[{"foreign":{"id":4380,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"147:16:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4605,"sourceUnit":3586,"src":"196:62:31","symbolAliases":[{"foreign":{"id":4382,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"204:12:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4383,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"218:11:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4605,"sourceUnit":1308,"src":"259:55:31","symbolAliases":[{"foreign":{"id":4385,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"267:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4388,"name":"IERC5267","nameLocations":["1988:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"1988:8:31"},"id":4389,"nodeType":"InheritanceSpecifier","src":"1988:8:31"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"316:1643:31","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4604,"linearizedBaseContracts":[4604,1307],"name":"EIP712","nameLocation":"1978:6:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4391,"libraryName":{"id":4390,"name":"ShortStrings","nameLocations":["2009:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3585,"src":"2009:12:31"},"nodeType":"UsingForDirective","src":"2003:25:31"},{"constant":true,"id":4396,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:31","nodeType":"VariableDeclaration","scope":4604,"src":"2034:140:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4393,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2079:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4398,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:31","nodeType":"VariableDeclaration","scope":4604,"src":"2373:48:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4400,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:31","nodeType":"VariableDeclaration","scope":4604,"src":"2427:40:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4402,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:31","nodeType":"VariableDeclaration","scope":4604,"src":"2473:37:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4401,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4404,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:31","nodeType":"VariableDeclaration","scope":4604,"src":"2517:37:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4406,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:31","nodeType":"VariableDeclaration","scope":4604,"src":"2560:40:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4409,"mutability":"immutable","name":"_name","nameLocation":"2637:5:31","nodeType":"VariableDeclaration","scope":4604,"src":"2607:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":4408,"nodeType":"UserDefinedTypeName","pathNode":{"id":4407,"name":"ShortString","nameLocations":["2607:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"2607:11:31"},"referencedDeclaration":3374,"src":"2607:11:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4412,"mutability":"immutable","name":"_version","nameLocation":"2678:8:31","nodeType":"VariableDeclaration","scope":4604,"src":"2648:38:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"},"typeName":{"id":4411,"nodeType":"UserDefinedTypeName","pathNode":{"id":4410,"name":"ShortString","nameLocations":["2648:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":3374,"src":"2648:11:31"},"referencedDeclaration":3374,"src":"2648:11:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4414,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:31","nodeType":"VariableDeclaration","scope":4604,"src":"2692:28:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4413,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4416,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:31","nodeType":"VariableDeclaration","scope":4604,"src":"2726:31:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4415,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4473,"nodeType":"Block","src":"3383:376:31","statements":[{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4424,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"3393:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4427,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"3432:13:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4425,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3401:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:31","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3526,"src":"3401:30:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3374_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"src":"3393:53:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"id":4430,"nodeType":"ExpressionStatement","src":"3393:53:31"},{"expression":{"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4431,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3456:8:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4434,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"3501:16:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4432,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3467:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:31","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3526,"src":"3467:33:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3374_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"src":"3456:62:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"id":4437,"nodeType":"ExpressionStatement","src":"3456:62:31"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4438,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"3528:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4442,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3558:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4440,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:31","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4439,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3542:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4446,"nodeType":"ExpressionStatement","src":"3528:36:31"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"3574:14:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4451,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3607:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:31","typeDescriptions":{}}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4448,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3591:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4455,"nodeType":"ExpressionStatement","src":"3574:42:31"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3627:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4457,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3644:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:31","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"3627:30:31"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"3667:22:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4462,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"3692:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4465,"nodeType":"ExpressionStatement","src":"3667:48:31"},{"expression":{"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4466,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"3725:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4469,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3747:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4467,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:31","typeDescriptions":{}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4472,"nodeType":"ExpressionStatement","src":"3725:27:31"}]},"documentation":{"id":4417,"nodeType":"StructuredDocumentation","src":"2764:559:31","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4474,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"name","nameLocation":"3354:4:31","nodeType":"VariableDeclaration","scope":4474,"src":"3340:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4418,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"version","nameLocation":"3374:7:31","nodeType":"VariableDeclaration","scope":4474,"src":"3360:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4420,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:31"},"returnParameters":{"id":4423,"nodeType":"ParameterList","parameters":[],"src":"3383:0:31"},"scope":4604,"src":"3328:431:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"3907:200:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3929:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}],"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4480,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:31","typeDescriptions":{}}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4484,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"3938:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4486,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3953:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:31","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4488,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3970:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4497,"nodeType":"Block","src":"4046:55:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4494,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"4067:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4479,"id":4496,"nodeType":"Return","src":"4060:30:31"}]},"id":4498,"nodeType":"IfStatement","src":"3917:184:31","trueBody":{"id":4493,"nodeType":"Block","src":"3986:54:31","statements":[{"expression":{"id":4491,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"4007:22:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4479,"id":4492,"nodeType":"Return","src":"4000:29:31"}]}}]},"documentation":{"id":4475,"nodeType":"StructuredDocumentation","src":"3765:75:31","text":" @dev Returns the domain separator for the current chain."},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:31","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"3872:2:31"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"3898:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:31"},"scope":4604,"src":"3845:262:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4520,"nodeType":"Block","src":"4177:115:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":4508,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"4215:9:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4509,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4226:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4510,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"4239:14:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4511,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4255:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:31","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4278:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:31","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4204:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:31","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4505,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4194:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4504,"id":4519,"nodeType":"Return","src":"4187:98:31"}]},"id":4521,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:31","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[],"src":"4143:2:31"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4521,"src":"4168:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:31"},"scope":4604,"src":"4113:179:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4536,"nodeType":"Block","src":"5003:90:31","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4531,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"5053:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4533,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"5075:10:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4529,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"5020:16:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4678_$","typeString":"type(library MessageHashUtils)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:31","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4677,"src":"5020:32:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4528,"id":4535,"nodeType":"Return","src":"5013:73:31"}]},"documentation":{"id":4522,"nodeType":"StructuredDocumentation","src":"4298:614:31","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4537,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:31","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:31","nodeType":"VariableDeclaration","scope":4537,"src":"4943:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:31"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4537,"src":"4994:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:31"},"scope":4604,"src":"4917:176:31","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1306],"body":{"id":4578,"nodeType":"Block","src":"5472:229:31","statements":[{"expression":{"components":[{"hexValue":"0f","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4557,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"5533:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4559,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"5560:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4561,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5590:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:31","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5625:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4604","typeString":"contract EIP712"}],"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:31","typeDescriptions":{}}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:31","typeDescriptions":{}}},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ArrayTypeName","src":"5672:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4555,"id":4577,"nodeType":"Return","src":"5482:212:31"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"5099:40:31","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:31","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[],"src":"5165:2:31"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"fields","nameLocation":"5249:6:31","nodeType":"VariableDeclaration","scope":4579,"src":"5242:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4540,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:31","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"name","nameLocation":"5283:4:31","nodeType":"VariableDeclaration","scope":4579,"src":"5269:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4542,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"version","nameLocation":"5315:7:31","nodeType":"VariableDeclaration","scope":4579,"src":"5301:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4544,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:31","nodeType":"VariableDeclaration","scope":4579,"src":"5336:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:31","nodeType":"VariableDeclaration","scope":4579,"src":"5365:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4551,"mutability":"mutable","name":"salt","nameLocation":"5412:4:31","nodeType":"VariableDeclaration","scope":4579,"src":"5404:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:31","nodeType":"VariableDeclaration","scope":4579,"src":"5430:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4553,"nodeType":"ArrayTypeName","src":"5430:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:31"},"scope":4604,"src":"5144:557:31","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4590,"nodeType":"Block","src":"6082:65:31","statements":[{"expression":{"arguments":[{"id":4587,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"6126:13:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4585,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"6099:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:31","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"6099:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3374_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4584,"id":4589,"nodeType":"Return","src":"6092:48:31"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"5707:256:31","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:31","nodeType":"FunctionDefinition","parameters":{"id":4581,"nodeType":"ParameterList","parameters":[],"src":"6041:2:31"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"6067:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4582,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:31"},"scope":4604,"src":"6021:126:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"6537:71:31","statements":[{"expression":{"arguments":[{"id":4599,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"6584:16:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4597,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"6554:8:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3374","typeString":"ShortString"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:31","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"6554:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3374_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3374_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4596,"id":4601,"nodeType":"Return","src":"6547:54:31"}]},"documentation":{"id":4592,"nodeType":"StructuredDocumentation","src":"6153:262:31","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:31","nodeType":"FunctionDefinition","parameters":{"id":4593,"nodeType":"ParameterList","parameters":[],"src":"6496:2:31"},"returnParameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4603,"src":"6522:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4594,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:31"},"scope":4604,"src":"6473:135:31","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4605,"src":"1960:4650:31","usedErrors":[3382,3384],"usedEvents":[1287]}],"src":"113:6498:31"},"id":31},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4678],"Strings":[4029]},"id":4679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4606,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4679,"sourceUnit":4030,"src":"149:39:32","symbolAliases":[{"foreign":{"id":4607,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"157:7:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"190:330:32","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4678,"linearizedBaseContracts":[4678],"name":"MessageHashUtils","nameLocation":"529:16:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":4618,"nodeType":"Block","src":"1314:341:32","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:32","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:32","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:32"},"nodeType":"YulFunctionCall","src":"1363:48:32"},"nodeType":"YulExpressionStatement","src":"1363:48:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:32","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:32"},"nodeType":"YulFunctionCall","src":"1465:25:32"},"nodeType":"YulExpressionStatement","src":"1465:25:32"},{"nodeType":"YulAssignment","src":"1544:31:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:32","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:32","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:32"},"nodeType":"YulFunctionCall","src":"1554:21:32"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4615,"isOffset":false,"isSlot":false,"src":"1544:6:32","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"1478:11:32","valueSize":1}],"flags":["memory-safe"],"id":4617,"nodeType":"InlineAssembly","src":"1324:325:32"}]},"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"552:665:32","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4619,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:32","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:32","nodeType":"VariableDeclaration","scope":4619,"src":"1254:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:32"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"digest","nameLocation":"1306:6:32","nodeType":"VariableDeclaration","scope":4619,"src":"1298:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:32"},"scope":4678,"src":"1222:433:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"2207:143:32","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4636,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2316:7:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:32","memberName":"length","nodeType":"MemberAccess","src":"2316:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4634,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2299:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4029_$","typeString":"type(library Strings)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:32","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"2299:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4632,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:32","typeDescriptions":{}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4640,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2334:7:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4628,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:32","typeDescriptions":{}}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:32","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:32","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4627,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2236:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4626,"id":4643,"nodeType":"Return","src":"2217:126:32"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"1661:455:32","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:32","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"message","nameLocation":"2166:7:32","nodeType":"VariableDeclaration","scope":4645,"src":"2153:20:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4621,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:32"},"returnParameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"2198:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:32"},"scope":4678,"src":"2121:229:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4664,"nodeType":"Block","src":"2804:80:32","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4659,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2860:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"2871:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4656,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2831:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4655,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2821:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4654,"id":4663,"nodeType":"Return","src":"2814:63:32"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"2356:332:32","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:32","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"validator","nameLocation":"2742:9:32","nodeType":"VariableDeclaration","scope":4665,"src":"2734:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4647,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"data","nameLocation":"2766:4:32","nodeType":"VariableDeclaration","scope":4665,"src":"2753:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4649,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:32"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"2795:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:32"},"scope":4678,"src":"2693:191:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4676,"nodeType":"Block","src":"3435:265:32","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:32","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:32"},"nodeType":"YulFunctionCall","src":"3495:11:32"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:32","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:32"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:32","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:32"},"nodeType":"YulFunctionCall","src":"3519:23:32"},"nodeType":"YulExpressionStatement","src":"3519:23:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:32","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:32"},"nodeType":"YulFunctionCall","src":"3562:14:32"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:32"},"nodeType":"YulFunctionCall","src":"3555:39:32"},"nodeType":"YulExpressionStatement","src":"3555:39:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:32","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:32"},"nodeType":"YulFunctionCall","src":"3614:14:32"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:32"},"nodeType":"YulFunctionCall","src":"3607:34:32"},"nodeType":"YulExpressionStatement","src":"3607:34:32"},{"nodeType":"YulAssignment","src":"3654:30:32","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:32","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:32"},"nodeType":"YulFunctionCall","src":"3664:20:32"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4673,"isOffset":false,"isSlot":false,"src":"3654:6:32","valueSize":1},{"declaration":4668,"isOffset":false,"isSlot":false,"src":"3578:15:32","valueSize":1},{"declaration":4670,"isOffset":false,"isSlot":false,"src":"3630:10:32","valueSize":1}],"flags":["memory-safe"],"id":4675,"nodeType":"InlineAssembly","src":"3445:249:32"}]},"documentation":{"id":4666,"nodeType":"StructuredDocumentation","src":"2890:431:32","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4677,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:32","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:32","nodeType":"VariableDeclaration","scope":4677,"src":"3351:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:32","nodeType":"VariableDeclaration","scope":4677,"src":"3376:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:32"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"digest","nameLocation":"3427:6:32","nodeType":"VariableDeclaration","scope":4677,"src":"3419:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:32"},"scope":4678,"src":"3326:374:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4679,"src":"521:3181:32","usedErrors":[],"usedEvents":[]}],"src":"123:3580:32"},"id":32},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4702],"IERC165":[4714]},"id":4703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4680,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:33"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":4715,"src":"140:38:33","symbolAliases":[{"foreign":{"id":4681,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"148:7:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4684,"name":"IERC165","nameLocations":["688:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"688:7:33"},"id":4685,"nodeType":"InheritanceSpecifier","src":"688:7:33"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"180:479:33","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4702,"linearizedBaseContracts":[4702,4714],"name":"ERC165","nameLocation":"678:6:33","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4713],"body":{"id":4700,"nodeType":"Block","src":"845:64:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"862:11:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4695,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"882:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4714_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4714_$","typeString":"type(contract IERC165)"}],"id":4694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4714","typeString":"type(contract IERC165)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:33","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4692,"id":4699,"nodeType":"Return","src":"855:47:33"}]},"documentation":{"id":4686,"nodeType":"StructuredDocumentation","src":"702:56:33","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4701,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:33","nodeType":"FunctionDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:33","nodeType":"VariableDeclaration","scope":4701,"src":"790:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4687,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:33"},"returnParameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4701,"src":"839:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4690,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:33"},"scope":4702,"src":"763:146:33","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4703,"src":"660:251:33","usedErrors":[],"usedEvents":[]}],"src":"114:798:33"},"id":33},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4714]},"id":4715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:34"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"141:280:34","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4714,"linearizedBaseContracts":[4714],"name":"IERC165","nameLocation":"432:7:34","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"446:340:34","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4713,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:34","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:34","nodeType":"VariableDeclaration","scope":4713,"src":"818:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4707,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:34","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:34"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"861:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4710,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:34"},"scope":4714,"src":"791:76:34","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4715,"src":"422:447:34","usedErrors":[],"usedEvents":[]}],"src":"115:755:34"},"id":34},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6320],"Panic":[3299],"SafeCast":[8085]},"id":6321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4716,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:35"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6321,"sourceUnit":3300,"src":"129:35:35","symbolAliases":[{"foreign":{"id":4717,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"137:5:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6321,"sourceUnit":8086,"src":"165:40:35","symbolAliases":[{"foreign":{"id":4719,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"173:8:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"207:73:35","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6320,"linearizedBaseContracts":[6320],"name":"Math","nameLocation":"289:4:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4726,"members":[{"id":4722,"name":"Floor","nameLocation":"324:5:35","nodeType":"EnumValue","src":"324:5:35"},{"id":4723,"name":"Ceil","nameLocation":"367:4:35","nodeType":"EnumValue","src":"367:4:35"},{"id":4724,"name":"Trunc","nameLocation":"409:5:35","nodeType":"EnumValue","src":"409:5:35"},{"id":4725,"name":"Expand","nameLocation":"439:6:35","nodeType":"EnumValue","src":"439:6:35"}],"name":"Rounding","nameLocation":"305:8:35","nodeType":"EnumDefinition","src":"300:169:35"},{"body":{"id":4757,"nodeType":"Block","src":"677:140:35","statements":[{"id":4756,"nodeType":"UncheckedBlock","src":"687:124:35","statements":[{"assignments":[4739],"declarations":[{"constant":false,"id":4739,"mutability":"mutable","name":"c","nameLocation":"719:1:35","nodeType":"VariableDeclaration","scope":4756,"src":"711:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4743,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"723:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"727:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"746:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4745,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"750:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"742:28:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4737,"id":4750,"nodeType":"Return","src":"753:17:35"}},{"expression":{"components":[{"hexValue":"74727565","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4753,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"798:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4737,"id":4755,"nodeType":"Return","src":"784:16:35"}]}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"475:106:35","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4758,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:35","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"a","nameLocation":"610:1:35","nodeType":"VariableDeclaration","scope":4758,"src":"602:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"b","nameLocation":"621:1:35","nodeType":"VariableDeclaration","scope":4758,"src":"613:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:35"},"returnParameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"success","nameLocation":"652:7:35","nodeType":"VariableDeclaration","scope":4758,"src":"647:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4733,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"result","nameLocation":"669:6:35","nodeType":"VariableDeclaration","scope":4758,"src":"661:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:35"},"scope":6320,"src":"586:231:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"1028:113:35","statements":[{"id":4784,"nodeType":"UncheckedBlock","src":"1038:97:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"1066:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"1070:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"IfStatement","src":"1062:28:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4769,"id":4776,"nodeType":"Return","src":"1073:17:35"}},{"expression":{"components":[{"hexValue":"74727565","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"1118:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4780,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"1122:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4769,"id":4783,"nodeType":"Return","src":"1104:20:35"}]}]},"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"823:109:35","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:35","nodeType":"FunctionDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"a","nameLocation":"961:1:35","nodeType":"VariableDeclaration","scope":4786,"src":"953:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4763,"mutability":"mutable","name":"b","nameLocation":"972:1:35","nodeType":"VariableDeclaration","scope":4786,"src":"964:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:35"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"success","nameLocation":"1003:7:35","nodeType":"VariableDeclaration","scope":4786,"src":"998:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4765,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4768,"mutability":"mutable","name":"result","nameLocation":"1020:6:35","nodeType":"VariableDeclaration","scope":4786,"src":"1012:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:35"},"scope":6320,"src":"937:204:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"1355:417:35","statements":[{"id":4826,"nodeType":"UncheckedBlock","src":"1365:401:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"1623:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4805,"nodeType":"IfStatement","src":"1619:28:35","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4797,"id":4804,"nodeType":"Return","src":"1631:16:35"}},{"assignments":[4807],"declarations":[{"constant":false,"id":4807,"mutability":"mutable","name":"c","nameLocation":"1669:1:35","nodeType":"VariableDeclaration","scope":4826,"src":"1661:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4811,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"1673:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"1677:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4812,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"1696:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"1700:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"1705:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"1692:33:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4797,"id":4820,"nodeType":"Return","src":"1708:17:35"}},{"expression":{"components":[{"hexValue":"74727565","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4823,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"1753:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4797,"id":4825,"nodeType":"Return","src":"1739:16:35"}]}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"1147:112:35","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:35","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"a","nameLocation":"1288:1:35","nodeType":"VariableDeclaration","scope":4828,"src":"1280:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"b","nameLocation":"1299:1:35","nodeType":"VariableDeclaration","scope":4828,"src":"1291:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:35"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"success","nameLocation":"1330:7:35","nodeType":"VariableDeclaration","scope":4828,"src":"1325:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4793,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"result","nameLocation":"1347:6:35","nodeType":"VariableDeclaration","scope":4828,"src":"1339:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:35"},"scope":6320,"src":"1264:508:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4855,"nodeType":"Block","src":"1987:114:35","statements":[{"id":4854,"nodeType":"UncheckedBlock","src":"1997:98:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"2025:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4847,"nodeType":"IfStatement","src":"2021:29:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4839,"id":4846,"nodeType":"Return","src":"2033:17:35"}},{"expression":{"components":[{"hexValue":"74727565","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2078:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"2082:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4839,"id":4853,"nodeType":"Return","src":"2064:20:35"}]}]},"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"1778:113:35","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:35","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"a","nameLocation":"1920:1:35","nodeType":"VariableDeclaration","scope":4856,"src":"1912:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"b","nameLocation":"1931:1:35","nodeType":"VariableDeclaration","scope":4856,"src":"1923:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:35"},"returnParameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"success","nameLocation":"1962:7:35","nodeType":"VariableDeclaration","scope":4856,"src":"1957:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4835,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"result","nameLocation":"1979:6:35","nodeType":"VariableDeclaration","scope":4856,"src":"1971:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:35"},"scope":6320,"src":"1896:205:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4883,"nodeType":"Block","src":"2326:114:35","statements":[{"id":4882,"nodeType":"UncheckedBlock","src":"2336:98:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"2364:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"2360:29:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4867,"id":4874,"nodeType":"Return","src":"2372:17:35"}},{"expression":{"components":[{"hexValue":"74727565","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"2417:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4878,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"2421:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4867,"id":4881,"nodeType":"Return","src":"2403:20:35"}]}]},"documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"2107:123:35","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:35","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"a","nameLocation":"2259:1:35","nodeType":"VariableDeclaration","scope":4884,"src":"2251:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"b","nameLocation":"2270:1:35","nodeType":"VariableDeclaration","scope":4884,"src":"2262:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:35"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"success","nameLocation":"2301:7:35","nodeType":"VariableDeclaration","scope":4884,"src":"2296:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4863,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"result","nameLocation":"2318:6:35","nodeType":"VariableDeclaration","scope":4884,"src":"2310:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:35"},"scope":6320,"src":"2235:205:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4910,"nodeType":"Block","src":"2912:207:35","statements":[{"id":4909,"nodeType":"UncheckedBlock","src":"2922:191:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"3060:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"3066:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"3070:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4903,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"3091:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4901,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"3075:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"3075:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4895,"id":4908,"nodeType":"Return","src":"3053:49:35"}]}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"2446:374:35","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4911,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:35","nodeType":"FunctionDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"condition","nameLocation":"2847:9:35","nodeType":"VariableDeclaration","scope":4911,"src":"2842:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4886,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4889,"mutability":"mutable","name":"a","nameLocation":"2866:1:35","nodeType":"VariableDeclaration","scope":4911,"src":"2858:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4891,"mutability":"mutable","name":"b","nameLocation":"2877:1:35","nodeType":"VariableDeclaration","scope":4911,"src":"2869:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:35"},"returnParameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"2903:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:35"},"scope":6320,"src":"2825:294:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4929,"nodeType":"Block","src":"3256:44:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"3281:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"3285:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"3288:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"3291:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"3273:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4920,"id":4928,"nodeType":"Return","src":"3266:27:35"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"3125:59:35","text":" @dev Returns the largest of two numbers."},"id":4930,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:35","nodeType":"FunctionDefinition","parameters":{"id":4917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"a","nameLocation":"3210:1:35","nodeType":"VariableDeclaration","scope":4930,"src":"3202:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4916,"mutability":"mutable","name":"b","nameLocation":"3221:1:35","nodeType":"VariableDeclaration","scope":4930,"src":"3213:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:35"},"returnParameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4930,"src":"3247:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:35"},"scope":6320,"src":"3189:111:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"3438:44:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"3463:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"3467:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"3470:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"3473:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"3455:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4939,"id":4947,"nodeType":"Return","src":"3448:27:35"}]},"documentation":{"id":4931,"nodeType":"StructuredDocumentation","src":"3306:60:35","text":" @dev Returns the smallest of two numbers."},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:35","nodeType":"FunctionDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"a","nameLocation":"3392:1:35","nodeType":"VariableDeclaration","scope":4949,"src":"3384:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4935,"mutability":"mutable","name":"b","nameLocation":"3403:1:35","nodeType":"VariableDeclaration","scope":4949,"src":"3395:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:35"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"3429:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:35"},"scope":6320,"src":"3371:111:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4971,"nodeType":"Block","src":"3666:82:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3721:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3725:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3731:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3735:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4958,"id":4970,"nodeType":"Return","src":"3713:28:35"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"3488:102:35","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4972,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:35","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"a","nameLocation":"3620:1:35","nodeType":"VariableDeclaration","scope":4972,"src":"3612:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"b","nameLocation":"3631:1:35","nodeType":"VariableDeclaration","scope":4972,"src":"3623:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:35"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4972,"src":"3657:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:35"},"scope":6320,"src":"3595:153:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"4040:633:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"4054:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4993,"nodeType":"IfStatement","src":"4050:150:35","trueBody":{"id":4992,"nodeType":"Block","src":"4062:138:35","statements":[{"expression":{"arguments":[{"expression":{"id":4988,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"4166:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:35","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3266,"src":"4166:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4985,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"4154:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:35","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"4154:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4991,"nodeType":"ExpressionStatement","src":"4154:35:35"}]}},{"id":5011,"nodeType":"UncheckedBlock","src":"4583:84:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"4630:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4994,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"4614:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"4614:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"4641:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"4650:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":5010,"nodeType":"Return","src":"4607:49:35"}]}]},"documentation":{"id":4973,"nodeType":"StructuredDocumentation","src":"3754:210:35","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:35","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"a","nameLocation":"3994:1:35","nodeType":"VariableDeclaration","scope":5013,"src":"3986:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"b","nameLocation":"4005:1:35","nodeType":"VariableDeclaration","scope":5013,"src":"3997:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:35"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"4031:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:35"},"scope":6320,"src":"3969:704:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"5094:4128:35","statements":[{"id":5148,"nodeType":"UncheckedBlock","src":"5104:4112:35","statements":[{"assignments":[5026],"declarations":[{"constant":false,"id":5026,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:35","nodeType":"VariableDeclaration","scope":5148,"src":"5433:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"5449:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5028,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"5453:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:35"},{"assignments":[5032],"declarations":[{"constant":false,"id":5032,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:35","nodeType":"VariableDeclaration","scope":5148,"src":"5513:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5033,"nodeType":"VariableDeclarationStatement","src":"5513:13:35"},{"AST":{"nodeType":"YulBlock","src":"5593:122:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:35","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:35"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:35","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:35"},"nodeType":"YulFunctionCall","src":"5634:6:35"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:35"},"nodeType":"YulFunctionCall","src":"5621:20:35"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:35","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:35","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:35"},"nodeType":"YulFunctionCall","src":"5671:14:35"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:35"},"nodeType":"YulFunctionCall","src":"5687:13:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:35"},"nodeType":"YulFunctionCall","src":"5667:34:35"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5026,"isOffset":false,"isSlot":false,"src":"5679:5:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"5694:5:35","valueSize":1},{"declaration":5032,"isOffset":false,"isSlot":false,"src":"5658:5:35","valueSize":1},{"declaration":5016,"isOffset":false,"isSlot":false,"src":"5628:1:35","valueSize":1},{"declaration":5018,"isOffset":false,"isSlot":false,"src":"5631:1:35","valueSize":1}],"id":5034,"nodeType":"InlineAssembly","src":"5584:131:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"5796:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"5792:368:35","trueBody":{"id":5042,"nodeType":"Block","src":"5808:352:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"6126:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5039,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"6134:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5024,"id":5041,"nodeType":"Return","src":"6119:26:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"6270:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5045,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"6285:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"6266:143:35","trueBody":{"id":5061,"nodeType":"Block","src":"6292:117:35","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"6330:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5054,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6348:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:35","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3266,"src":"6348:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5056,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6372:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:35","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"6372:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5050,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"6322:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5047,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6310:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:35","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"6310:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"ExpressionStatement","src":"6310:84:35"}]}},{"assignments":[5064],"declarations":[{"constant":false,"id":5064,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:35","nodeType":"VariableDeclaration","scope":5148,"src":"6664:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5065,"nodeType":"VariableDeclarationStatement","src":"6664:17:35"},{"AST":{"nodeType":"YulBlock","src":"6704:291:35","statements":[{"nodeType":"YulAssignment","src":"6773:38:35","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:35"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:35"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:35"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:35"},"nodeType":"YulFunctionCall","src":"6786:25:35"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:35"}]},{"nodeType":"YulAssignment","src":"6893:41:35","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:35"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:35"},"nodeType":"YulFunctionCall","src":"6913:20:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:35"},"nodeType":"YulFunctionCall","src":"6902:32:35"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:35"}]},{"nodeType":"YulAssignment","src":"6951:30:35","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:35"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:35"},"nodeType":"YulFunctionCall","src":"6960:21:35"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5020,"isOffset":false,"isSlot":false,"src":"6799:11:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"6927:5:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"6951:5:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"6964:5:35","valueSize":1},{"declaration":5032,"isOffset":false,"isSlot":false,"src":"6893:5:35","valueSize":1},{"declaration":5032,"isOffset":false,"isSlot":false,"src":"6906:5:35","valueSize":1},{"declaration":5064,"isOffset":false,"isSlot":false,"src":"6773:9:35","valueSize":1},{"declaration":5064,"isOffset":false,"isSlot":false,"src":"6916:9:35","valueSize":1},{"declaration":5064,"isOffset":false,"isSlot":false,"src":"6971:9:35","valueSize":1},{"declaration":5016,"isOffset":false,"isSlot":false,"src":"6793:1:35","valueSize":1},{"declaration":5018,"isOffset":false,"isSlot":false,"src":"6796:1:35","valueSize":1}],"id":5066,"nodeType":"InlineAssembly","src":"6695:300:35"},{"assignments":[5068],"declarations":[{"constant":false,"id":5068,"mutability":"mutable","name":"twos","nameLocation":"7207:4:35","nodeType":"VariableDeclaration","scope":5148,"src":"7199:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5075,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"7214:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5071,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"7233:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:35"},{"AST":{"nodeType":"YulBlock","src":"7268:366:35","statements":[{"nodeType":"YulAssignment","src":"7333:37:35","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:35"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:35"},"nodeType":"YulFunctionCall","src":"7348:22:35"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:35"}]},{"nodeType":"YulAssignment","src":"7437:25:35","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:35"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:35"},"nodeType":"YulFunctionCall","src":"7446:16:35"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:35"}]},{"nodeType":"YulAssignment","src":"7581:39:35","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:35","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:35"},"nodeType":"YulFunctionCall","src":"7597:12:35"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:35"},"nodeType":"YulFunctionCall","src":"7593:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:35","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:35"},"nodeType":"YulFunctionCall","src":"7589:31:35"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5020,"isOffset":false,"isSlot":false,"src":"7333:11:35","valueSize":1},{"declaration":5020,"isOffset":false,"isSlot":false,"src":"7352:11:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"7437:5:35","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"7450:5:35","valueSize":1},{"declaration":5068,"isOffset":false,"isSlot":false,"src":"7365:4:35","valueSize":1},{"declaration":5068,"isOffset":false,"isSlot":false,"src":"7457:4:35","valueSize":1},{"declaration":5068,"isOffset":false,"isSlot":false,"src":"7581:4:35","valueSize":1},{"declaration":5068,"isOffset":false,"isSlot":false,"src":"7604:4:35","valueSize":1},{"declaration":5068,"isOffset":false,"isSlot":false,"src":"7611:4:35","valueSize":1}],"id":5076,"nodeType":"InlineAssembly","src":"7259:375:35"},{"expression":{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"7700:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7709:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5079,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"7717:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ExpressionStatement","src":"7700:21:35"},{"assignments":[5084],"declarations":[{"constant":false,"id":5084,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:35","nodeType":"VariableDeclaration","scope":5148,"src":"8056:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5086,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8079:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:35"},{"expression":{"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8312:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8327:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5095,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8341:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5099,"nodeType":"ExpressionStatement","src":"8312:36:35"},{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8382:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8397:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8411:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5107,"nodeType":"ExpressionStatement","src":"8382:36:35"},{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8454:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8469:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8483:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"8454:36:35"},{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8525:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8540:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8554:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"8525:36:35"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8598:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8613:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5127,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8627:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"8598:36:35"},{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8672:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8687:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5135,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8701:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"8672:36:35"},{"expression":{"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9154:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5141,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"9163:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5142,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"9171:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5145,"nodeType":"ExpressionStatement","src":"9154:24:35"},{"expression":{"id":5146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9199:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5024,"id":5147,"nodeType":"Return","src":"9192:13:35"}]}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"4679:312:35","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:35","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"x","nameLocation":"5020:1:35","nodeType":"VariableDeclaration","scope":5150,"src":"5012:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"y","nameLocation":"5031:1:35","nodeType":"VariableDeclaration","scope":5150,"src":"5023:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5020,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:35","nodeType":"VariableDeclaration","scope":5150,"src":"5034:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:35"},"returnParameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"result","nameLocation":"5086:6:35","nodeType":"VariableDeclaration","scope":5150,"src":"5078:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:35"},"scope":6320,"src":"4996:4226:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5186,"nodeType":"Block","src":"9461:128:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5166,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"9485:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5167,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9488:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"9491:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5165,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5150,5187],"referencedDeclaration":5150,"src":"9478:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5173,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"9539:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5172,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"9522:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5176,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"9559:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5177,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9562:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"9565:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"9552:6:35","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5170,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"9506:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"9506:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5164,"id":5185,"nodeType":"Return","src":"9471:111:35"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"9228:118:35","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5187,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:35","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"x","nameLocation":"9375:1:35","nodeType":"VariableDeclaration","scope":5187,"src":"9367:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"y","nameLocation":"9386:1:35","nodeType":"VariableDeclaration","scope":5187,"src":"9378:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5157,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:35","nodeType":"VariableDeclaration","scope":5187,"src":"9389:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5160,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:35","nodeType":"VariableDeclaration","scope":5187,"src":"9410:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5159,"nodeType":"UserDefinedTypeName","pathNode":{"id":5158,"name":"Rounding","nameLocations":["9410:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"9410:8:35"},"referencedDeclaration":4726,"src":"9410:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:35"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5187,"src":"9452:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:35"},"scope":6320,"src":"9351:238:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5283,"nodeType":"Block","src":"10223:1849:35","statements":[{"id":5282,"nodeType":"UncheckedBlock","src":"10233:1833:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10261:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5202,"nodeType":"IfStatement","src":"10257:20:35","trueBody":{"expression":{"hexValue":"30","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5196,"id":5201,"nodeType":"Return","src":"10269:8:35"}},{"assignments":[5204],"declarations":[{"constant":false,"id":5204,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:35","nodeType":"VariableDeclaration","scope":5282,"src":"10748:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5208,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"10768:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5206,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10772:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:35"},{"assignments":[5210],"declarations":[{"constant":false,"id":5210,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:35","nodeType":"VariableDeclaration","scope":5282,"src":"10787:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5212,"initialValue":{"id":5211,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10801:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:35"},{"assignments":[5214],"declarations":[{"constant":false,"id":5214,"mutability":"mutable","name":"x","nameLocation":"10945:1:35","nodeType":"VariableDeclaration","scope":5282,"src":"10938:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5213,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5216,"initialValue":{"hexValue":"30","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:35"},{"assignments":[5218],"declarations":[{"constant":false,"id":5218,"mutability":"mutable","name":"y","nameLocation":"10971:1:35","nodeType":"VariableDeclaration","scope":5282,"src":"10964:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5217,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5220,"initialValue":{"hexValue":"31","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:35"},{"body":{"id":5257,"nodeType":"Block","src":"11014:882:35","statements":[{"assignments":[5225],"declarations":[{"constant":false,"id":5225,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:35","nodeType":"VariableDeclaration","scope":5257,"src":"11032:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5229,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"11051:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5227,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"11057:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:35"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5230,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"11086:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5231,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"11091:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5232,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5233,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"11191:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"11436:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"11442:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5236,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"11454:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:35","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"ExpressionStatement","src":"11085:395:35"},{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5242,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"11500:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5243,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"11503:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5244,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5245,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"11585:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"11839:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"11843:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5250,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"11854:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5248,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:35","typeDescriptions":{}}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:35","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"11499:382:35"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"10998:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"WhileStatement","src":"10991:905:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"11914:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5264,"nodeType":"IfStatement","src":"11910:22:35","trueBody":{"expression":{"hexValue":"30","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5196,"id":5263,"nodeType":"Return","src":"11924:8:35"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"11983:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"11990:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:35","subExpression":{"id":5272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"12003:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:35","typeDescriptions":{}}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5278,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"12015:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:35","typeDescriptions":{}}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"11975:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5281,"nodeType":"Return","src":"11968:50:35"}]}]},"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"9595:553:35","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5284,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:35","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"a","nameLocation":"10177:1:35","nodeType":"VariableDeclaration","scope":5284,"src":"10169:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5192,"mutability":"mutable","name":"n","nameLocation":"10188:1:35","nodeType":"VariableDeclaration","scope":5284,"src":"10180:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:35"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5284,"src":"10214:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:35"},"scope":6320,"src":"10153:1919:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"12672:82:35","statements":[{"id":5303,"nodeType":"UncheckedBlock","src":"12682:66:35","statements":[{"expression":{"arguments":[{"id":5296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"12725:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"12728:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5300,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"12735:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5294,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"12713:4:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:35","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5341,"src":"12713:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5293,"id":5302,"nodeType":"Return","src":"12706:31:35"}]}]},"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"12078:514:35","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:35","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"a","nameLocation":"12626:1:35","nodeType":"VariableDeclaration","scope":5305,"src":"12618:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"p","nameLocation":"12637:1:35","nodeType":"VariableDeclaration","scope":5305,"src":"12629:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:35"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5305,"src":"12663:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:35"},"scope":6320,"src":"12597:157:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"13524:174:35","statements":[{"assignments":[5318,5320],"declarations":[{"constant":false,"id":5318,"mutability":"mutable","name":"success","nameLocation":"13540:7:35","nodeType":"VariableDeclaration","scope":5340,"src":"13535:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5317,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5320,"mutability":"mutable","name":"result","nameLocation":"13557:6:35","nodeType":"VariableDeclaration","scope":5340,"src":"13549:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5326,"initialValue":{"arguments":[{"id":5322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"13577:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5323,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"13580:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5324,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"13583:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5365,5447],"referencedDeclaration":5365,"src":"13567:9:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:35"},{"condition":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:35","subExpression":{"id":5327,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"13600:7:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"13595:74:35","trueBody":{"id":5336,"nodeType":"Block","src":"13609:60:35","statements":[{"expression":{"arguments":[{"expression":{"id":5332,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"13635:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:35","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3266,"src":"13635:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5329,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"13623:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:35","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"13623:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5335,"nodeType":"ExpressionStatement","src":"13623:35:35"}]}},{"expression":{"id":5338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"13685:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5316,"id":5339,"nodeType":"Return","src":"13678:13:35"}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"12760:678:35","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:35","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"b","nameLocation":"13467:1:35","nodeType":"VariableDeclaration","scope":5341,"src":"13459:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"e","nameLocation":"13478:1:35","nodeType":"VariableDeclaration","scope":5341,"src":"13470:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5312,"mutability":"mutable","name":"m","nameLocation":"13489:1:35","nodeType":"VariableDeclaration","scope":5341,"src":"13481:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:35"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"13515:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:35"},"scope":6320,"src":"13443:255:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5364,"nodeType":"Block","src":"14552:1493:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"14566:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5362,"nodeType":"IfStatement","src":"14562:29:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5354,"id":5361,"nodeType":"Return","src":"14574:17:35"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:35","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:35","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:35"},"nodeType":"YulFunctionCall","src":"14651:11:35"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:35","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:35","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:35"},"nodeType":"YulFunctionCall","src":"15563:17:35"},"nodeType":"YulExpressionStatement","src":"15563:17:35"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:35"},"nodeType":"YulFunctionCall","src":"15600:14:35"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:35","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:35"},"nodeType":"YulFunctionCall","src":"15593:28:35"},"nodeType":"YulExpressionStatement","src":"15593:28:35"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:35","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:35"},"nodeType":"YulFunctionCall","src":"15641:14:35"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:35","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:35"},"nodeType":"YulFunctionCall","src":"15634:28:35"},"nodeType":"YulExpressionStatement","src":"15634:28:35"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:35","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:35"},"nodeType":"YulFunctionCall","src":"15682:14:35"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:35"},"nodeType":"YulFunctionCall","src":"15675:25:35"},"nodeType":"YulExpressionStatement","src":"15675:25:35"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:35","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:35"},"nodeType":"YulFunctionCall","src":"15720:14:35"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:35"},"nodeType":"YulFunctionCall","src":"15713:25:35"},"nodeType":"YulExpressionStatement","src":"15713:25:35"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:35","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:35"},"nodeType":"YulFunctionCall","src":"15758:14:35"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:35"},"nodeType":"YulFunctionCall","src":"15751:25:35"},"nodeType":"YulExpressionStatement","src":"15751:25:35"},{"nodeType":"YulAssignment","src":"15938:57:35","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:35"},"nodeType":"YulFunctionCall","src":"15960:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:35","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:35","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:35","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:35","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:35"},"nodeType":"YulFunctionCall","src":"15949:46:35"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:35"}]},{"nodeType":"YulAssignment","src":"16008:21:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:35","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:35"},"nodeType":"YulFunctionCall","src":"16018:11:35"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5344,"isOffset":false,"isSlot":false,"src":"15698:1:35","valueSize":1},{"declaration":5346,"isOffset":false,"isSlot":false,"src":"15736:1:35","valueSize":1},{"declaration":5348,"isOffset":false,"isSlot":false,"src":"15774:1:35","valueSize":1},{"declaration":5353,"isOffset":false,"isSlot":false,"src":"16008:6:35","valueSize":1},{"declaration":5351,"isOffset":false,"isSlot":false,"src":"15938:7:35","valueSize":1}],"flags":["memory-safe"],"id":5363,"nodeType":"InlineAssembly","src":"14601:1438:35"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"13704:738:35","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5365,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:35","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"b","nameLocation":"14474:1:35","nodeType":"VariableDeclaration","scope":5365,"src":"14466:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5346,"mutability":"mutable","name":"e","nameLocation":"14485:1:35","nodeType":"VariableDeclaration","scope":5365,"src":"14477:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5348,"mutability":"mutable","name":"m","nameLocation":"14496:1:35","nodeType":"VariableDeclaration","scope":5365,"src":"14488:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5347,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:35"},"returnParameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"success","nameLocation":"14527:7:35","nodeType":"VariableDeclaration","scope":5365,"src":"14522:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5350,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"result","nameLocation":"14544:6:35","nodeType":"VariableDeclaration","scope":5365,"src":"14536:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:35"},"scope":6320,"src":"14447:1598:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"16242:179:35","statements":[{"assignments":[5378,5380],"declarations":[{"constant":false,"id":5378,"mutability":"mutable","name":"success","nameLocation":"16258:7:35","nodeType":"VariableDeclaration","scope":5400,"src":"16253:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5377,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5380,"mutability":"mutable","name":"result","nameLocation":"16280:6:35","nodeType":"VariableDeclaration","scope":5400,"src":"16267:19:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5379,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5386,"initialValue":{"arguments":[{"id":5382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"16300:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5383,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"16303:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5384,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"16306:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5381,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5365,5447],"referencedDeclaration":5447,"src":"16290:9:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:35"},{"condition":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:35","subExpression":{"id":5387,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"16323:7:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5397,"nodeType":"IfStatement","src":"16318:74:35","trueBody":{"id":5396,"nodeType":"Block","src":"16332:60:35","statements":[{"expression":{"arguments":[{"expression":{"id":5392,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"16358:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:35","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3266,"src":"16358:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5389,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"16346:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3299_$","typeString":"type(library Panic)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:35","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"16346:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5395,"nodeType":"ExpressionStatement","src":"16346:35:35"}]}},{"expression":{"id":5398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"16408:6:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5376,"id":5399,"nodeType":"Return","src":"16401:13:35"}]},"documentation":{"id":5366,"nodeType":"StructuredDocumentation","src":"16051:85:35","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:35","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"b","nameLocation":"16170:1:35","nodeType":"VariableDeclaration","scope":5401,"src":"16157:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5367,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5370,"mutability":"mutable","name":"e","nameLocation":"16186:1:35","nodeType":"VariableDeclaration","scope":5401,"src":"16173:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5369,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"m","nameLocation":"16202:1:35","nodeType":"VariableDeclaration","scope":5401,"src":"16189:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5371,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:35"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"16228:12:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5374,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:35"},"scope":6320,"src":"16141:280:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5446,"nodeType":"Block","src":"16675:771:35","statements":[{"condition":{"arguments":[{"id":5416,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"16700:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5415,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"16689:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5425,"nodeType":"IfStatement","src":"16685:47:35","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:35","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5419,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5414,"id":5424,"nodeType":"Return","src":"16704:28:35"}},{"assignments":[5427],"declarations":[{"constant":false,"id":5427,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:35","nodeType":"VariableDeclaration","scope":5446,"src":"16743:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5430,"initialValue":{"expression":{"id":5428,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"16758:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:35","memberName":"length","nodeType":"MemberAccess","src":"16758:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:35"},{"expression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"16848:6:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"16874:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:35","memberName":"length","nodeType":"MemberAccess","src":"16874:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5436,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"16884:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:35","memberName":"length","nodeType":"MemberAccess","src":"16884:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5438,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"16894:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"16900:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5440,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"16903:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5441,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"16906:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"16857:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:35","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5444,"nodeType":"ExpressionStatement","src":"16848:60:35"},{"AST":{"nodeType":"YulBlock","src":"16944:496:35","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:35","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:35"},"nodeType":"YulFunctionCall","src":"16973:17:35"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:35","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:35","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:35"},"nodeType":"YulFunctionCall","src":"17102:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:35","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:35"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:35"},"nodeType":"YulFunctionCall","src":"17124:13:35"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:35"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:35"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:35"},"nodeType":"YulFunctionCall","src":"17091:62:35"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:35"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:35"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:35"},"nodeType":"YulFunctionCall","src":"17302:20:35"},"nodeType":"YulExpressionStatement","src":"17302:20:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:35","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:35"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:35"},"nodeType":"YulFunctionCall","src":"17411:18:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:35"},"nodeType":"YulFunctionCall","src":"17398:32:35"},"nodeType":"YulExpressionStatement","src":"17398:32:35"}]},"evmVersion":"paris","externalReferences":[{"declaration":5427,"isOffset":false,"isSlot":false,"src":"17148:4:35","valueSize":1},{"declaration":5427,"isOffset":false,"isSlot":false,"src":"17317:4:35","valueSize":1},{"declaration":5427,"isOffset":false,"isSlot":false,"src":"17424:4:35","valueSize":1},{"declaration":5413,"isOffset":false,"isSlot":false,"src":"16977:6:35","valueSize":1},{"declaration":5413,"isOffset":false,"isSlot":false,"src":"17130:6:35","valueSize":1},{"declaration":5413,"isOffset":false,"isSlot":false,"src":"17309:6:35","valueSize":1},{"declaration":5411,"isOffset":false,"isSlot":false,"src":"17080:7:35","valueSize":1}],"flags":["memory-safe"],"id":5445,"nodeType":"InlineAssembly","src":"16919:521:35"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"16427:88:35","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5447,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:35","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"b","nameLocation":"16561:1:35","nodeType":"VariableDeclaration","scope":5447,"src":"16548:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5403,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"e","nameLocation":"16585:1:35","nodeType":"VariableDeclaration","scope":5447,"src":"16572:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5405,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"m","nameLocation":"16609:1:35","nodeType":"VariableDeclaration","scope":5447,"src":"16596:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5407,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:35"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"success","nameLocation":"16645:7:35","nodeType":"VariableDeclaration","scope":5447,"src":"16640:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5410,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5413,"mutability":"mutable","name":"result","nameLocation":"16667:6:35","nodeType":"VariableDeclaration","scope":5447,"src":"16654:19:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5412,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:35"},"scope":6320,"src":"16520:926:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"17601:176:35","statements":[{"body":{"id":5475,"nodeType":"Block","src":"17658:92:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5466,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"17676:9:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5468,"indexExpression":{"id":5467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"17686:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:35","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5474,"nodeType":"IfStatement","src":"17672:68:35","trueBody":{"id":5473,"nodeType":"Block","src":"17695:45:35","statements":[{"expression":{"hexValue":"66616c7365","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5454,"id":5472,"nodeType":"Return","src":"17713:12:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"17631:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5460,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"17635:9:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:35","memberName":"length","nodeType":"MemberAccess","src":"17635:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"initializationExpression":{"assignments":[5456],"declarations":[{"constant":false,"id":5456,"mutability":"mutable","name":"i","nameLocation":"17624:1:35","nodeType":"VariableDeclaration","scope":5476,"src":"17616:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5455,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5458,"initialValue":{"hexValue":"30","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:35"},"loopExpression":{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:35","subExpression":{"id":5463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"17655:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5465,"nodeType":"ExpressionStatement","src":"17653:3:35"},"nodeType":"ForStatement","src":"17611:139:35"},{"expression":{"hexValue":"74727565","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5454,"id":5478,"nodeType":"Return","src":"17759:11:35"}]},"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"17452:72:35","text":" @dev Returns whether the provided byte array is zero."},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:35","nodeType":"FunctionDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:35","nodeType":"VariableDeclaration","scope":5480,"src":"17549:22:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5449,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:35"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5480,"src":"17595:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5452,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:35"},"scope":6320,"src":"17529:248:35","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5698,"nodeType":"Block","src":"18137:5124:35","statements":[{"id":5697,"nodeType":"UncheckedBlock","src":"18147:5108:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"18241:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"nodeType":"IfStatement","src":"18237:53:35","trueBody":{"id":5493,"nodeType":"Block","src":"18249:41:35","statements":[{"expression":{"id":5491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"18274:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5487,"id":5492,"nodeType":"Return","src":"18267:8:35"}]}},{"assignments":[5496],"declarations":[{"constant":false,"id":5496,"mutability":"mutable","name":"aa","nameLocation":"19225:2:35","nodeType":"VariableDeclaration","scope":5697,"src":"19217:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5498,"initialValue":{"id":5497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"19230:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:35"},{"assignments":[5500],"declarations":[{"constant":false,"id":5500,"mutability":"mutable","name":"xn","nameLocation":"19253:2:35","nodeType":"VariableDeclaration","scope":5697,"src":"19245:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5502,"initialValue":{"hexValue":"31","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19278:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5518,"nodeType":"IfStatement","src":"19274:92:35","trueBody":{"id":5517,"nodeType":"Block","src":"19296:70:35","statements":[{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19314:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"19314:10:35"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19342:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"19342:9:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19383:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5534,"nodeType":"IfStatement","src":"19379:90:35","trueBody":{"id":5533,"nodeType":"Block","src":"19400:69:35","statements":[{"expression":{"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5525,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19418:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5528,"nodeType":"ExpressionStatement","src":"19418:9:35"},{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19445:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5532,"nodeType":"ExpressionStatement","src":"19445:9:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19486:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5550,"nodeType":"IfStatement","src":"19482:90:35","trueBody":{"id":5549,"nodeType":"Block","src":"19503:69:35","statements":[{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5541,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19521:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5544,"nodeType":"ExpressionStatement","src":"19521:9:35"},{"expression":{"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19548:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5548,"nodeType":"ExpressionStatement","src":"19548:9:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19589:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5566,"nodeType":"IfStatement","src":"19585:89:35","trueBody":{"id":5565,"nodeType":"Block","src":"19606:68:35","statements":[{"expression":{"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5557,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19624:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5560,"nodeType":"ExpressionStatement","src":"19624:9:35"},{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5561,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19651:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ExpressionStatement","src":"19651:8:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19691:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5582,"nodeType":"IfStatement","src":"19687:87:35","trueBody":{"id":5581,"nodeType":"Block","src":"19707:67:35","statements":[{"expression":{"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19725:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5576,"nodeType":"ExpressionStatement","src":"19725:8:35"},{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19751:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"nodeType":"ExpressionStatement","src":"19751:8:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19791:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5598,"nodeType":"IfStatement","src":"19787:87:35","trueBody":{"id":5597,"nodeType":"Block","src":"19807:67:35","statements":[{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5589,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19825:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5592,"nodeType":"ExpressionStatement","src":"19825:8:35"},{"expression":{"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5593,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19851:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5596,"nodeType":"ExpressionStatement","src":"19851:8:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5599,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"19891:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5610,"nodeType":"IfStatement","src":"19887:61:35","trueBody":{"id":5609,"nodeType":"Block","src":"19907:41:35","statements":[{"expression":{"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5605,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"19925:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5608,"nodeType":"ExpressionStatement","src":"19925:8:35"}]}},{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"20368:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5613,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"20378:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5619,"nodeType":"ExpressionStatement","src":"20368:18:35"},{"expression":{"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5620,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22273:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22279:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22284:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5623,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22288:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5630,"nodeType":"ExpressionStatement","src":"22273:23:35"},{"expression":{"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5631,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22382:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22388:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22393:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5634,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22397:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5641,"nodeType":"ExpressionStatement","src":"22382:23:35"},{"expression":{"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5642,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22493:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22499:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22504:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5645,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22508:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5652,"nodeType":"ExpressionStatement","src":"22493:23:35"},{"expression":{"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5653,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22602:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22608:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22613:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5656,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22617:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5663,"nodeType":"ExpressionStatement","src":"22602:23:35"},{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5664,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22712:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22718:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22723:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5667,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22727:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ExpressionStatement","src":"22712:23:35"},{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22822:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22828:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"22833:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5678,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"22837:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5685,"nodeType":"ExpressionStatement","src":"22822:23:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"23211:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"23232:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"23237:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5691,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"23241:2:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5687,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"23216:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"23216:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5487,"id":5696,"nodeType":"Return","src":"23204:40:35"}]}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"17783:292:35","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:35","nodeType":"FunctionDefinition","parameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"a","nameLocation":"18102:1:35","nodeType":"VariableDeclaration","scope":5699,"src":"18094:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:35"},"returnParameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5699,"src":"18128:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:35"},"scope":6320,"src":"18080:5181:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5732,"nodeType":"Block","src":"23434:171:35","statements":[{"id":5731,"nodeType":"UncheckedBlock","src":"23444:155:35","statements":[{"assignments":[5711],"declarations":[{"constant":false,"id":5711,"mutability":"mutable","name":"result","nameLocation":"23476:6:35","nodeType":"VariableDeclaration","scope":5731,"src":"23468:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5715,"initialValue":{"arguments":[{"id":5713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"23490:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5712,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5699,5733],"referencedDeclaration":5699,"src":"23485:4:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"23513:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5720,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"23555:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5719,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"23538:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"23568:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"23577:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"23586:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5717,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"23522:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"23522:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5709,"id":5730,"nodeType":"Return","src":"23506:82:35"}]}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"23267:86:35","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5733,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:35","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"a","nameLocation":"23380:1:35","nodeType":"VariableDeclaration","scope":5733,"src":"23372:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:35","nodeType":"VariableDeclaration","scope":5733,"src":"23383:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5704,"nodeType":"UserDefinedTypeName","pathNode":{"id":5703,"name":"Rounding","nameLocations":["23383:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"23383:8:35"},"referencedDeclaration":4726,"src":"23383:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:35"},"returnParameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5733,"src":"23425:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:35"},"scope":6320,"src":"23358:247:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"23796:981:35","statements":[{"assignments":[5742],"declarations":[{"constant":false,"id":5742,"mutability":"mutable","name":"result","nameLocation":"23814:6:35","nodeType":"VariableDeclaration","scope":5928,"src":"23806:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5744,"initialValue":{"hexValue":"30","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:35"},{"assignments":[5746],"declarations":[{"constant":false,"id":5746,"mutability":"mutable","name":"exp","nameLocation":"23842:3:35","nodeType":"VariableDeclaration","scope":5928,"src":"23834:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5747,"nodeType":"VariableDeclarationStatement","src":"23834:11:35"},{"id":5925,"nodeType":"UncheckedBlock","src":"23855:893:35","statements":[{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5748,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"23879:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"23907:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5750,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"23891:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"23891:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ExpressionStatement","src":"23879:51:35"},{"expression":{"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"23944:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5765,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"23954:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5767,"nodeType":"ExpressionStatement","src":"23944:13:35"},{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"23971:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5769,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"23981:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5771,"nodeType":"ExpressionStatement","src":"23971:13:35"},{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"23999:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24026:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5774,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24010:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24010:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5787,"nodeType":"ExpressionStatement","src":"23999:49:35"},{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24062:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5789,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24072:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5791,"nodeType":"ExpressionStatement","src":"24062:13:35"},{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24089:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5793,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24099:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"24089:13:35"},{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24117:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24144:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5798,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24128:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24128:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"24117:49:35"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24180:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5813,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24190:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"24180:13:35"},{"expression":{"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24207:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5817,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24217:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5819,"nodeType":"ExpressionStatement","src":"24207:13:35"},{"expression":{"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5820,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24235:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24262:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:35","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5822,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24246:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24246:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5835,"nodeType":"ExpressionStatement","src":"24235:49:35"},{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24298:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5837,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24308:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5839,"nodeType":"ExpressionStatement","src":"24298:13:35"},{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24325:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5841,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24335:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ExpressionStatement","src":"24325:13:35"},{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24353:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24379:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5846,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24363:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24363:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"24353:47:35"},{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24414:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5861,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24424:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5863,"nodeType":"ExpressionStatement","src":"24414:13:35"},{"expression":{"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24441:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5865,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24451:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5867,"nodeType":"ExpressionStatement","src":"24441:13:35"},{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24469:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24495:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:35","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5870,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24479:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24479:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ExpressionStatement","src":"24469:47:35"},{"expression":{"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24530:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5885,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24540:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5887,"nodeType":"ExpressionStatement","src":"24530:13:35"},{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24557:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5889,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24567:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5891,"nodeType":"ExpressionStatement","src":"24557:13:35"},{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5892,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24585:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24611:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5894,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24595:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24595:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5907,"nodeType":"ExpressionStatement","src":"24585:47:35"},{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24646:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5909,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24656:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"24646:13:35"},{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24673:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5913,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24683:3:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5915,"nodeType":"ExpressionStatement","src":"24673:13:35"},{"expression":{"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24701:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24727:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5917,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"24711:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"24711:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5924,"nodeType":"ExpressionStatement","src":"24701:36:35"}]},{"expression":{"id":5926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"24764:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5740,"id":5927,"nodeType":"Return","src":"24757:13:35"}]},"documentation":{"id":5734,"nodeType":"StructuredDocumentation","src":"23611:119:35","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:35","nodeType":"FunctionDefinition","parameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"value","nameLocation":"23757:5:35","nodeType":"VariableDeclaration","scope":5929,"src":"23749:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:35"},"returnParameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5929,"src":"23787:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:35"},"scope":6320,"src":"23735:1042:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5962,"nodeType":"Block","src":"25010:175:35","statements":[{"id":5961,"nodeType":"UncheckedBlock","src":"25020:159:35","statements":[{"assignments":[5941],"declarations":[{"constant":false,"id":5941,"mutability":"mutable","name":"result","nameLocation":"25052:6:35","nodeType":"VariableDeclaration","scope":5961,"src":"25044:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5945,"initialValue":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"25066:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5929,5963],"referencedDeclaration":5929,"src":"25061:4:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"25093:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5950,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"25135:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5949,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"25118:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"25153:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"25162:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"25102:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"25102:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5939,"id":5960,"nodeType":"Return","src":"25086:82:35"}]}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"24783:142:35","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5963,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:35","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"24952:5:35","nodeType":"VariableDeclaration","scope":5963,"src":"24944:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5935,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:35","nodeType":"VariableDeclaration","scope":5963,"src":"24959:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5934,"nodeType":"UserDefinedTypeName","pathNode":{"id":5933,"name":"Rounding","nameLocations":["24959:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"24959:8:35"},"referencedDeclaration":4726,"src":"24959:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:35"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5963,"src":"25001:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:35"},"scope":6320,"src":"24930:255:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6091,"nodeType":"Block","src":"25378:854:35","statements":[{"assignments":[5972],"declarations":[{"constant":false,"id":5972,"mutability":"mutable","name":"result","nameLocation":"25396:6:35","nodeType":"VariableDeclaration","scope":6091,"src":"25388:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5974,"initialValue":{"hexValue":"30","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:35"},{"id":6088,"nodeType":"UncheckedBlock","src":"25416:787:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25444:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5991,"nodeType":"IfStatement","src":"25440:103:35","trueBody":{"id":5990,"nodeType":"Block","src":"25463:80:35","statements":[{"expression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25481:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5985,"nodeType":"ExpressionStatement","src":"25481:17:35"},{"expression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"25516:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5989,"nodeType":"ExpressionStatement","src":"25516:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25560:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"25556:103:35","trueBody":{"id":6007,"nodeType":"Block","src":"25579:80:35","statements":[{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25597:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"25597:17:35"},{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"25632:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6006,"nodeType":"ExpressionStatement","src":"25632:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25676:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6025,"nodeType":"IfStatement","src":"25672:103:35","trueBody":{"id":6024,"nodeType":"Block","src":"25695:80:35","statements":[{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25713:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6019,"nodeType":"ExpressionStatement","src":"25713:17:35"},{"expression":{"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"25748:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6023,"nodeType":"ExpressionStatement","src":"25748:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25792:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"25788:100:35","trueBody":{"id":6041,"nodeType":"Block","src":"25810:78:35","statements":[{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25828:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6036,"nodeType":"ExpressionStatement","src":"25828:16:35"},{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"25862:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6040,"nodeType":"ExpressionStatement","src":"25862:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25905:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6059,"nodeType":"IfStatement","src":"25901:100:35","trueBody":{"id":6058,"nodeType":"Block","src":"25923:78:35","statements":[{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"25941:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6053,"nodeType":"ExpressionStatement","src":"25941:16:35"},{"expression":{"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"25975:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6057,"nodeType":"ExpressionStatement","src":"25975:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"26018:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"26014:100:35","trueBody":{"id":6075,"nodeType":"Block","src":"26036:78:35","statements":[{"expression":{"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"26054:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6070,"nodeType":"ExpressionStatement","src":"26054:16:35"},{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"26088:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6074,"nodeType":"ExpressionStatement","src":"26088:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"26131:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6087,"nodeType":"IfStatement","src":"26127:66:35","trueBody":{"id":6086,"nodeType":"Block","src":"26149:44:35","statements":[{"expression":{"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"26167:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6085,"nodeType":"ExpressionStatement","src":"26167:11:35"}]}}]},{"expression":{"id":6089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"26219:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5970,"id":6090,"nodeType":"Return","src":"26212:13:35"}]},"documentation":{"id":5964,"nodeType":"StructuredDocumentation","src":"25191:120:35","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6092,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:35","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"value","nameLocation":"25339:5:35","nodeType":"VariableDeclaration","scope":6092,"src":"25331:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:35"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6092,"src":"25369:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:35"},"scope":6320,"src":"25316:916:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"26467:177:35","statements":[{"id":6124,"nodeType":"UncheckedBlock","src":"26477:161:35","statements":[{"assignments":[6104],"declarations":[{"constant":false,"id":6104,"mutability":"mutable","name":"result","nameLocation":"26509:6:35","nodeType":"VariableDeclaration","scope":6124,"src":"26501:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6103,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6108,"initialValue":{"arguments":[{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"26524:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6105,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6092,6126],"referencedDeclaration":6092,"src":"26518:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"26551:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6113,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26593:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6112,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"26576:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"26612:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"26621:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6110,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"26560:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"26560:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6102,"id":6123,"nodeType":"Return","src":"26544:83:35"}]}]},"documentation":{"id":6093,"nodeType":"StructuredDocumentation","src":"26238:143:35","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:35","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"value","nameLocation":"26409:5:35","nodeType":"VariableDeclaration","scope":6126,"src":"26401:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6098,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:35","nodeType":"VariableDeclaration","scope":6126,"src":"26416:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6097,"nodeType":"UserDefinedTypeName","pathNode":{"id":6096,"name":"Rounding","nameLocations":["26416:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"26416:8:35"},"referencedDeclaration":4726,"src":"26416:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:35"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6126,"src":"26458:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:35"},"scope":6320,"src":"26386:258:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"26964:674:35","statements":[{"assignments":[6135],"declarations":[{"constant":false,"id":6135,"mutability":"mutable","name":"result","nameLocation":"26982:6:35","nodeType":"VariableDeclaration","scope":6262,"src":"26974:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6137,"initialValue":{"hexValue":"30","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:35"},{"assignments":[6139],"declarations":[{"constant":false,"id":6139,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:35","nodeType":"VariableDeclaration","scope":6262,"src":"27002:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6140,"nodeType":"VariableDeclarationStatement","src":"27002:12:35"},{"id":6259,"nodeType":"UncheckedBlock","src":"27024:585:35","statements":[{"expression":{"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6141,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27048:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27071:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:35","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6142,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27055:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27055:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6154,"nodeType":"ExpressionStatement","src":"27048:46:35"},{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27108:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27118:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6160,"nodeType":"ExpressionStatement","src":"27108:20:35"},{"expression":{"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27142:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27152:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6166,"nodeType":"ExpressionStatement","src":"27142:19:35"},{"expression":{"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6167,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27176:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27199:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:35","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6168,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27183:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27183:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6180,"nodeType":"ExpressionStatement","src":"27176:45:35"},{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27235:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27245:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6186,"nodeType":"ExpressionStatement","src":"27235:19:35"},{"expression":{"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27268:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27278:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6192,"nodeType":"ExpressionStatement","src":"27268:18:35"},{"expression":{"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6193,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27301:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27324:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:35","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6194,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27308:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27308:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6206,"nodeType":"ExpressionStatement","src":"27301:45:35"},{"expression":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27360:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27370:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6212,"nodeType":"ExpressionStatement","src":"27360:19:35"},{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27393:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27403:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6218,"nodeType":"ExpressionStatement","src":"27393:18:35"},{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6219,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27426:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27449:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:35","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:35","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6220,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27433:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27433:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"27426:45:35"},{"expression":{"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27485:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27495:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6238,"nodeType":"ExpressionStatement","src":"27485:19:35"},{"expression":{"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27518:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"27528:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6244,"nodeType":"ExpressionStatement","src":"27518:18:35"},{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27551:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"27577:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:35","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6246,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27561:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27561:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6258,"nodeType":"ExpressionStatement","src":"27551:47:35"}]},{"expression":{"id":6260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27625:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6133,"id":6261,"nodeType":"Return","src":"27618:13:35"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"26650:246:35","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:35","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"value","nameLocation":"26925:5:35","nodeType":"VariableDeclaration","scope":6263,"src":"26917:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:35"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6263,"src":"26955:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:35"},"scope":6320,"src":"26901:737:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6299,"nodeType":"Block","src":"27875:184:35","statements":[{"id":6298,"nodeType":"UncheckedBlock","src":"27885:168:35","statements":[{"assignments":[6275],"declarations":[{"constant":false,"id":6275,"mutability":"mutable","name":"result","nameLocation":"27917:6:35","nodeType":"VariableDeclaration","scope":6298,"src":"27909:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6279,"initialValue":{"arguments":[{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"27933:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6276,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6263,6300],"referencedDeclaration":6263,"src":"27926:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"27960:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6284,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"28002:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6283,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"27985:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"28021:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"28036:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6281,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"27969:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"27969:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6273,"id":6297,"nodeType":"Return","src":"27953:89:35"}]}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"27644:144:35","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6300,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:35","nodeType":"FunctionDefinition","parameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"value","nameLocation":"27817:5:35","nodeType":"VariableDeclaration","scope":6300,"src":"27809:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6269,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:35","nodeType":"VariableDeclaration","scope":6300,"src":"27824:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6268,"nodeType":"UserDefinedTypeName","pathNode":{"id":6267,"name":"Rounding","nameLocations":["27824:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"27824:8:35"},"referencedDeclaration":4726,"src":"27824:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:35"},"returnParameters":{"id":6273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6300,"src":"27866:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6271,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:35"},"scope":6320,"src":"27793:266:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6318,"nodeType":"Block","src":"28257:48:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6311,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"28280:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6309,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:35","typeDescriptions":{}}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6308,"id":6317,"nodeType":"Return","src":"28267:31:35"}]},"documentation":{"id":6301,"nodeType":"StructuredDocumentation","src":"28065:113:35","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:35","nodeType":"FunctionDefinition","parameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:35","nodeType":"VariableDeclaration","scope":6319,"src":"28209:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6303,"nodeType":"UserDefinedTypeName","pathNode":{"id":6302,"name":"Rounding","nameLocations":["28209:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"28209:8:35"},"referencedDeclaration":4726,"src":"28209:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:35"},"returnParameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6319,"src":"28251:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6306,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:35"},"scope":6320,"src":"28183:122:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6321,"src":"281:28026:35","usedErrors":[],"usedEvents":[]}],"src":"103:28205:35"},"id":35},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8085]},"id":8086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6322,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:36"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"218:550:36","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8085,"linearizedBaseContracts":[8085],"name":"SafeCast","nameLocation":"777:8:36","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"792:68:36","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6330,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:36","nodeType":"ErrorDefinition","parameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"bits","nameLocation":"908:4:36","nodeType":"VariableDeclaration","scope":6330,"src":"902:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6325,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6328,"mutability":"mutable","name":"value","nameLocation":"922:5:36","nodeType":"VariableDeclaration","scope":6330,"src":"914:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6327,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:36"},"src":"865:64:36"},{"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"935:75:36","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6335,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:36","nodeType":"ErrorDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"value","nameLocation":"1056:5:36","nodeType":"VariableDeclaration","scope":6335,"src":"1049:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6332,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:36"},"src":"1015:48:36"},{"documentation":{"id":6336,"nodeType":"StructuredDocumentation","src":"1069:67:36","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6342,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:36","nodeType":"ErrorDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"bits","nameLocation":"1183:4:36","nodeType":"VariableDeclaration","scope":6342,"src":"1177:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6337,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6340,"mutability":"mutable","name":"value","nameLocation":"1196:5:36","nodeType":"VariableDeclaration","scope":6342,"src":"1189:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6339,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:36"},"src":"1141:62:36"},{"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"1209:75:36","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6347,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:36","nodeType":"ErrorDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"value","nameLocation":"1331:5:36","nodeType":"VariableDeclaration","scope":6347,"src":"1323:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:36"},"src":"1289:49:36"},{"body":{"id":6374,"nodeType":"Block","src":"1695:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"1709:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6357,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:36","memberName":"max","nodeType":"MemberAccess","src":"1717:17:36","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6368,"nodeType":"IfStatement","src":"1705:105:36","trueBody":{"id":6367,"nodeType":"Block","src":"1736:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:36","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"1793:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"1757:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6366,"nodeType":"RevertStatement","src":"1750:49:36"}]}},{"expression":{"arguments":[{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"1834:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6369,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:36","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6354,"id":6373,"nodeType":"Return","src":"1819:21:36"}]},"documentation":{"id":6348,"nodeType":"StructuredDocumentation","src":"1344:280:36","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:36","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"value","nameLocation":"1656:5:36","nodeType":"VariableDeclaration","scope":6375,"src":"1648:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:36"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"1686:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6352,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:36","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:36"},"scope":8085,"src":"1629:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"2204:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"2218:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6385,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:36","memberName":"max","nodeType":"MemberAccess","src":"2226:17:36","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6396,"nodeType":"IfStatement","src":"2214:105:36","trueBody":{"id":6395,"nodeType":"Block","src":"2245:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:36","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"2302:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2266:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6394,"nodeType":"RevertStatement","src":"2259:49:36"}]}},{"expression":{"arguments":[{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"2343:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6397,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:36","typeDescriptions":{}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6382,"id":6401,"nodeType":"Return","src":"2328:21:36"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"1853:280:36","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6403,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:36","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"2165:5:36","nodeType":"VariableDeclaration","scope":6403,"src":"2157:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:36"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6403,"src":"2195:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6380,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:36","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:36"},"scope":8085,"src":"2138:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"2713:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"2727:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6413,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:36","memberName":"max","nodeType":"MemberAccess","src":"2735:17:36","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"2723:105:36","trueBody":{"id":6423,"nodeType":"Block","src":"2754:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:36","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"2811:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"2775:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"RevertStatement","src":"2768:49:36"}]}},{"expression":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"2852:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6425,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:36","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6410,"id":6429,"nodeType":"Return","src":"2837:21:36"}]},"documentation":{"id":6404,"nodeType":"StructuredDocumentation","src":"2362:280:36","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6431,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:36","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"value","nameLocation":"2674:5:36","nodeType":"VariableDeclaration","scope":6431,"src":"2666:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:36"},"returnParameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6431,"src":"2704:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6408,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:36","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:36"},"scope":8085,"src":"2647:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"3222:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"3236:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6441,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:36","memberName":"max","nodeType":"MemberAccess","src":"3244:17:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6452,"nodeType":"IfStatement","src":"3232:105:36","trueBody":{"id":6451,"nodeType":"Block","src":"3263:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:36","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"3320:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"3284:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6450,"nodeType":"RevertStatement","src":"3277:49:36"}]}},{"expression":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"3361:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6453,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:36","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6438,"id":6457,"nodeType":"Return","src":"3346:21:36"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"2871:280:36","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:36","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"value","nameLocation":"3183:5:36","nodeType":"VariableDeclaration","scope":6459,"src":"3175:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:36"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6459,"src":"3213:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6436,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:36"},"scope":8085,"src":"3156:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"3731:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"3745:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6469,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:36","memberName":"max","nodeType":"MemberAccess","src":"3753:17:36","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6480,"nodeType":"IfStatement","src":"3741:105:36","trueBody":{"id":6479,"nodeType":"Block","src":"3772:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:36","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"3829:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"3793:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6478,"nodeType":"RevertStatement","src":"3786:49:36"}]}},{"expression":{"arguments":[{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"3870:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6481,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:36","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6466,"id":6485,"nodeType":"Return","src":"3855:21:36"}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"3380:280:36","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:36","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"3692:5:36","nodeType":"VariableDeclaration","scope":6487,"src":"3684:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:36"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6487,"src":"3722:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6464,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:36","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:36"},"scope":8085,"src":"3665:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6514,"nodeType":"Block","src":"4240:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"4254:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6497,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:36","memberName":"max","nodeType":"MemberAccess","src":"4262:17:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"4250:105:36","trueBody":{"id":6507,"nodeType":"Block","src":"4281:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:36","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"4338:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"4302:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6506,"nodeType":"RevertStatement","src":"4295:49:36"}]}},{"expression":{"arguments":[{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"4379:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6509,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:36","typeDescriptions":{}}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6494,"id":6513,"nodeType":"Return","src":"4364:21:36"}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"3889:280:36","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6515,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:36","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"4201:5:36","nodeType":"VariableDeclaration","scope":6515,"src":"4193:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:36"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6515,"src":"4231:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6492,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:36"},"scope":8085,"src":"4174:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6542,"nodeType":"Block","src":"4749:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"4763:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6525,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6524,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:36","memberName":"max","nodeType":"MemberAccess","src":"4771:17:36","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"4759:105:36","trueBody":{"id":6535,"nodeType":"Block","src":"4790:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:36","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"4847:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"4811:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6534,"nodeType":"RevertStatement","src":"4804:49:36"}]}},{"expression":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"4888:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6537,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:36","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6522,"id":6541,"nodeType":"Return","src":"4873:21:36"}]},"documentation":{"id":6516,"nodeType":"StructuredDocumentation","src":"4398:280:36","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6543,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:36","nodeType":"FunctionDefinition","parameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"value","nameLocation":"4710:5:36","nodeType":"VariableDeclaration","scope":6543,"src":"4702:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:36"},"returnParameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6543,"src":"4740:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6520,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:36","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:36"},"scope":8085,"src":"4683:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"5258:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"5272:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6553,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:36","memberName":"max","nodeType":"MemberAccess","src":"5280:17:36","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"5268:105:36","trueBody":{"id":6563,"nodeType":"Block","src":"5299:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:36","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"5356:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5320:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6562,"nodeType":"RevertStatement","src":"5313:49:36"}]}},{"expression":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"5397:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6565,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:36","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6550,"id":6569,"nodeType":"Return","src":"5382:21:36"}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"4907:280:36","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:36","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"5219:5:36","nodeType":"VariableDeclaration","scope":6571,"src":"5211:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:36"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"5249:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6548,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:36","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:36"},"scope":8085,"src":"5192:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"5767:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5781:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6581,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:36","memberName":"max","nodeType":"MemberAccess","src":"5789:17:36","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"5777:105:36","trueBody":{"id":6591,"nodeType":"Block","src":"5808:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:36","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5865:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5829:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"5822:49:36"}]}},{"expression":{"arguments":[{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5906:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6593,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:36","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6578,"id":6597,"nodeType":"Return","src":"5891:21:36"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"5416:280:36","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:36","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"5728:5:36","nodeType":"VariableDeclaration","scope":6599,"src":"5720:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:36"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"5758:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6576,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:36","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:36"},"scope":8085,"src":"5701:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"6276:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"6290:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6609,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:36","memberName":"max","nodeType":"MemberAccess","src":"6298:17:36","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6620,"nodeType":"IfStatement","src":"6286:105:36","trueBody":{"id":6619,"nodeType":"Block","src":"6317:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:36","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"6374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"6338:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6618,"nodeType":"RevertStatement","src":"6331:49:36"}]}},{"expression":{"arguments":[{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"6415:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6621,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:36","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6606,"id":6625,"nodeType":"Return","src":"6400:21:36"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"5925:280:36","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:36","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"value","nameLocation":"6237:5:36","nodeType":"VariableDeclaration","scope":6627,"src":"6229:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:36"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6627,"src":"6267:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6604,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:36","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:36"},"scope":8085,"src":"6210:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6654,"nodeType":"Block","src":"6785:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"6799:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6637,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:36","memberName":"max","nodeType":"MemberAccess","src":"6807:17:36","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"6795:105:36","trueBody":{"id":6647,"nodeType":"Block","src":"6826:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:36","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"6883:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"6847:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"RevertStatement","src":"6840:49:36"}]}},{"expression":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"6924:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6649,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:36","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6634,"id":6653,"nodeType":"Return","src":"6909:21:36"}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"6434:280:36","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:36","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"value","nameLocation":"6746:5:36","nodeType":"VariableDeclaration","scope":6655,"src":"6738:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:36"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6655,"src":"6776:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6632,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:36","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:36"},"scope":8085,"src":"6719:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"7294:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"7308:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6665,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:36","memberName":"max","nodeType":"MemberAccess","src":"7316:17:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"7304:105:36","trueBody":{"id":6675,"nodeType":"Block","src":"7335:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:36","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"7392:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"7356:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6674,"nodeType":"RevertStatement","src":"7349:49:36"}]}},{"expression":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"7433:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6677,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:36","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6662,"id":6681,"nodeType":"Return","src":"7418:21:36"}]},"documentation":{"id":6656,"nodeType":"StructuredDocumentation","src":"6943:280:36","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:36","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"value","nameLocation":"7255:5:36","nodeType":"VariableDeclaration","scope":6683,"src":"7247:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:36"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"7285:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6660,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:36"},"scope":8085,"src":"7228:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6710,"nodeType":"Block","src":"7803:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"7817:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6693,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:36","memberName":"max","nodeType":"MemberAccess","src":"7825:17:36","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"7813:105:36","trueBody":{"id":6703,"nodeType":"Block","src":"7844:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:36","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"7901:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"7865:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6702,"nodeType":"RevertStatement","src":"7858:49:36"}]}},{"expression":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"7942:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6705,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:36","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6690,"id":6709,"nodeType":"Return","src":"7927:21:36"}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"7452:280:36","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:36","nodeType":"FunctionDefinition","parameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"value","nameLocation":"7764:5:36","nodeType":"VariableDeclaration","scope":6711,"src":"7756:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:36"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6711,"src":"7794:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6688,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:36","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:36"},"scope":8085,"src":"7737:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"8312:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"8326:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6721,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:36","memberName":"max","nodeType":"MemberAccess","src":"8334:17:36","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"8322:105:36","trueBody":{"id":6731,"nodeType":"Block","src":"8353:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:36","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"8410:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"8374:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"RevertStatement","src":"8367:49:36"}]}},{"expression":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"8451:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6733,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:36","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6718,"id":6737,"nodeType":"Return","src":"8436:21:36"}]},"documentation":{"id":6712,"nodeType":"StructuredDocumentation","src":"7961:280:36","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:36","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"value","nameLocation":"8273:5:36","nodeType":"VariableDeclaration","scope":6739,"src":"8265:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:36"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6739,"src":"8303:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6716,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:36","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:36"},"scope":8085,"src":"8246:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6766,"nodeType":"Block","src":"8821:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"8835:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6749,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:36","memberName":"max","nodeType":"MemberAccess","src":"8843:17:36","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"8831:105:36","trueBody":{"id":6759,"nodeType":"Block","src":"8862:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:36","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"8919:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"8883:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6758,"nodeType":"RevertStatement","src":"8876:49:36"}]}},{"expression":{"arguments":[{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"8960:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6761,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:36","typeDescriptions":{}}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6746,"id":6765,"nodeType":"Return","src":"8945:21:36"}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"8470:280:36","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:36","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"8782:5:36","nodeType":"VariableDeclaration","scope":6767,"src":"8774:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:36"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"8812:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6744,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:36","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:36"},"scope":8085,"src":"8755:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6794,"nodeType":"Block","src":"9330:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"9344:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6777,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:36","memberName":"max","nodeType":"MemberAccess","src":"9352:17:36","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"9340:105:36","trueBody":{"id":6787,"nodeType":"Block","src":"9371:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:36","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"9428:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"9392:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6786,"nodeType":"RevertStatement","src":"9385:49:36"}]}},{"expression":{"arguments":[{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"9469:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6789,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:36","typeDescriptions":{}}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6774,"id":6793,"nodeType":"Return","src":"9454:21:36"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"8979:280:36","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:36","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"value","nameLocation":"9291:5:36","nodeType":"VariableDeclaration","scope":6795,"src":"9283:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6769,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:36"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6795,"src":"9321:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6772,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:36","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:36"},"scope":8085,"src":"9264:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"9839:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"9853:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6805,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:36","memberName":"max","nodeType":"MemberAccess","src":"9861:17:36","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6816,"nodeType":"IfStatement","src":"9849:105:36","trueBody":{"id":6815,"nodeType":"Block","src":"9880:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:36","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"9937:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"9901:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6814,"nodeType":"RevertStatement","src":"9894:49:36"}]}},{"expression":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"9978:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6817,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:36","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6802,"id":6821,"nodeType":"Return","src":"9963:21:36"}]},"documentation":{"id":6796,"nodeType":"StructuredDocumentation","src":"9488:280:36","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:36","nodeType":"FunctionDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"value","nameLocation":"9800:5:36","nodeType":"VariableDeclaration","scope":6823,"src":"9792:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:36"},"returnParameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6823,"src":"9830:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6800,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:36","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:36"},"scope":8085,"src":"9773:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"10348:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"10362:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6833,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:36","memberName":"max","nodeType":"MemberAccess","src":"10370:17:36","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6844,"nodeType":"IfStatement","src":"10358:105:36","trueBody":{"id":6843,"nodeType":"Block","src":"10389:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:36","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"10446:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"10410:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6842,"nodeType":"RevertStatement","src":"10403:49:36"}]}},{"expression":{"arguments":[{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"10487:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6845,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:36","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6830,"id":6849,"nodeType":"Return","src":"10472:21:36"}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"9997:280:36","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:36","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"10309:5:36","nodeType":"VariableDeclaration","scope":6851,"src":"10301:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:36"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6851,"src":"10339:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6828,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:36","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:36"},"scope":8085,"src":"10282:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6878,"nodeType":"Block","src":"10857:152:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"10871:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6861,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:36","memberName":"max","nodeType":"MemberAccess","src":"10879:17:36","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"10867:105:36","trueBody":{"id":6871,"nodeType":"Block","src":"10898:74:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:36","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"10955:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"10919:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6870,"nodeType":"RevertStatement","src":"10912:49:36"}]}},{"expression":{"arguments":[{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"10996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6873,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:36","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6858,"id":6877,"nodeType":"Return","src":"10981:21:36"}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"10506:280:36","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:36","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"10818:5:36","nodeType":"VariableDeclaration","scope":6879,"src":"10810:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:36"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6879,"src":"10848:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6856,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:36","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:36"},"scope":8085,"src":"10791:218:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6906,"nodeType":"Block","src":"11360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6889,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:36","memberName":"max","nodeType":"MemberAccess","src":"11382:16:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"11370:103:36","trueBody":{"id":6899,"nodeType":"Block","src":"11400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6898,"nodeType":"RevertStatement","src":"11414:48:36"}]}},{"expression":{"arguments":[{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6901,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:36","typeDescriptions":{}}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6886,"id":6905,"nodeType":"Return","src":"11482:20:36"}]},"documentation":{"id":6880,"nodeType":"StructuredDocumentation","src":"11015:276:36","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:36","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"value","nameLocation":"11322:5:36","nodeType":"VariableDeclaration","scope":6907,"src":"11314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:36"},"returnParameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6907,"src":"11352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6884,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:36"},"scope":8085,"src":"11296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"11860:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"11874:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6917,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:36","memberName":"max","nodeType":"MemberAccess","src":"11882:16:36","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"11870:103:36","trueBody":{"id":6927,"nodeType":"Block","src":"11900:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:36","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"11956:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11921:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"RevertStatement","src":"11914:48:36"}]}},{"expression":{"arguments":[{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"11996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6929,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:36","typeDescriptions":{}}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6914,"id":6933,"nodeType":"Return","src":"11982:20:36"}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"11515:276:36","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:36","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"value","nameLocation":"11822:5:36","nodeType":"VariableDeclaration","scope":6935,"src":"11814:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:36"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6935,"src":"11852:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6912,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:36","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:36"},"scope":8085,"src":"11796:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"12360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6945,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:36","memberName":"max","nodeType":"MemberAccess","src":"12382:16:36","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"12370:103:36","trueBody":{"id":6955,"nodeType":"Block","src":"12400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"12421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6954,"nodeType":"RevertStatement","src":"12414:48:36"}]}},{"expression":{"arguments":[{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6957,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:36","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6942,"id":6961,"nodeType":"Return","src":"12482:20:36"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"12015:276:36","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:36","nodeType":"FunctionDefinition","parameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"value","nameLocation":"12322:5:36","nodeType":"VariableDeclaration","scope":6963,"src":"12314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:36"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6963,"src":"12352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6940,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:36","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:36"},"scope":8085,"src":"12296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6990,"nodeType":"Block","src":"12860:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"12874:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6973,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:36","memberName":"max","nodeType":"MemberAccess","src":"12882:16:36","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6984,"nodeType":"IfStatement","src":"12870:103:36","trueBody":{"id":6983,"nodeType":"Block","src":"12900:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:36","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"12956:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"12921:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6982,"nodeType":"RevertStatement","src":"12914:48:36"}]}},{"expression":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"12996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6985,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:36","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6970,"id":6989,"nodeType":"Return","src":"12982:20:36"}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"12515:276:36","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:36","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"value","nameLocation":"12822:5:36","nodeType":"VariableDeclaration","scope":6991,"src":"12814:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:36"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6991,"src":"12852:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6968,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:36","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:36"},"scope":8085,"src":"12796:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7018,"nodeType":"Block","src":"13360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"13374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7001,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:36","memberName":"max","nodeType":"MemberAccess","src":"13382:16:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7012,"nodeType":"IfStatement","src":"13370:103:36","trueBody":{"id":7011,"nodeType":"Block","src":"13400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"13456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"13421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7010,"nodeType":"RevertStatement","src":"13414:48:36"}]}},{"expression":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"13496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7013,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:36","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6998,"id":7017,"nodeType":"Return","src":"13482:20:36"}]},"documentation":{"id":6992,"nodeType":"StructuredDocumentation","src":"13015:276:36","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:36","nodeType":"FunctionDefinition","parameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"value","nameLocation":"13322:5:36","nodeType":"VariableDeclaration","scope":7019,"src":"13314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6993,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:36"},"returnParameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7019,"src":"13352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6996,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:36"},"scope":8085,"src":"13296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7046,"nodeType":"Block","src":"13860:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"13874:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7029,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:36","memberName":"max","nodeType":"MemberAccess","src":"13882:16:36","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"13870:103:36","trueBody":{"id":7039,"nodeType":"Block","src":"13900:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:36","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"13956:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"13921:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7038,"nodeType":"RevertStatement","src":"13914:48:36"}]}},{"expression":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"13996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7041,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:36","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7026,"id":7045,"nodeType":"Return","src":"13982:20:36"}]},"documentation":{"id":7020,"nodeType":"StructuredDocumentation","src":"13515:276:36","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:36","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"value","nameLocation":"13822:5:36","nodeType":"VariableDeclaration","scope":7047,"src":"13814:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:36"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7047,"src":"13852:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7024,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:36","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:36"},"scope":8085,"src":"13796:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7074,"nodeType":"Block","src":"14360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"14374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7057,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:36","memberName":"max","nodeType":"MemberAccess","src":"14382:16:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"14370:103:36","trueBody":{"id":7067,"nodeType":"Block","src":"14400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"14456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"14421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7066,"nodeType":"RevertStatement","src":"14414:48:36"}]}},{"expression":{"arguments":[{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"14496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7069,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:36","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7054,"id":7073,"nodeType":"Return","src":"14482:20:36"}]},"documentation":{"id":7048,"nodeType":"StructuredDocumentation","src":"14015:276:36","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:36","nodeType":"FunctionDefinition","parameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"value","nameLocation":"14322:5:36","nodeType":"VariableDeclaration","scope":7075,"src":"14314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7049,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:36"},"returnParameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"14352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7052,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:36"},"scope":8085,"src":"14296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7102,"nodeType":"Block","src":"14860:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"14874:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7085,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:36","memberName":"max","nodeType":"MemberAccess","src":"14882:16:36","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"14870:103:36","trueBody":{"id":7095,"nodeType":"Block","src":"14900:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:36","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"14956:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"14921:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7094,"nodeType":"RevertStatement","src":"14914:48:36"}]}},{"expression":{"arguments":[{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"14996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7097,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:36","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7082,"id":7101,"nodeType":"Return","src":"14982:20:36"}]},"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"14515:276:36","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:36","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"value","nameLocation":"14822:5:36","nodeType":"VariableDeclaration","scope":7103,"src":"14814:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:36"},"returnParameters":{"id":7082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7103,"src":"14852:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7080,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:36","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:36"},"scope":8085,"src":"14796:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7130,"nodeType":"Block","src":"15360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"15374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7113,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:36","memberName":"max","nodeType":"MemberAccess","src":"15382:16:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7124,"nodeType":"IfStatement","src":"15370:103:36","trueBody":{"id":7123,"nodeType":"Block","src":"15400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"15456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"15421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7122,"nodeType":"RevertStatement","src":"15414:48:36"}]}},{"expression":{"arguments":[{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"15496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7125,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:36","typeDescriptions":{}}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7110,"id":7129,"nodeType":"Return","src":"15482:20:36"}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"15015:276:36","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:36","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"value","nameLocation":"15322:5:36","nodeType":"VariableDeclaration","scope":7131,"src":"15314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:36"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7131,"src":"15352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7108,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:36"},"scope":8085,"src":"15296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7158,"nodeType":"Block","src":"15860:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"15874:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7141,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:36","memberName":"max","nodeType":"MemberAccess","src":"15882:16:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"15870:103:36","trueBody":{"id":7151,"nodeType":"Block","src":"15900:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:36","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"15956:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"15921:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7150,"nodeType":"RevertStatement","src":"15914:48:36"}]}},{"expression":{"arguments":[{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"15996:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7153,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:36","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7138,"id":7157,"nodeType":"Return","src":"15982:20:36"}]},"documentation":{"id":7132,"nodeType":"StructuredDocumentation","src":"15515:276:36","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:36","nodeType":"FunctionDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"value","nameLocation":"15822:5:36","nodeType":"VariableDeclaration","scope":7159,"src":"15814:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:36"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7159,"src":"15852:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7136,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:36"},"scope":8085,"src":"15796:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"16360:149:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"16374:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7169,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:36","memberName":"max","nodeType":"MemberAccess","src":"16382:16:36","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7180,"nodeType":"IfStatement","src":"16370:103:36","trueBody":{"id":7179,"nodeType":"Block","src":"16400:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:36","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"16456:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"16421:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7178,"nodeType":"RevertStatement","src":"16414:48:36"}]}},{"expression":{"arguments":[{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"16496:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7181,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:36","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7166,"id":7185,"nodeType":"Return","src":"16482:20:36"}]},"documentation":{"id":7160,"nodeType":"StructuredDocumentation","src":"16015:276:36","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:36","nodeType":"FunctionDefinition","parameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"value","nameLocation":"16322:5:36","nodeType":"VariableDeclaration","scope":7187,"src":"16314:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7161,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:36"},"returnParameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7187,"src":"16352:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7164,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:36","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:36"},"scope":8085,"src":"16296:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7214,"nodeType":"Block","src":"16854:146:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"16868:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7197,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:36","memberName":"max","nodeType":"MemberAccess","src":"16876:15:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"16864:101:36","trueBody":{"id":7207,"nodeType":"Block","src":"16893:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:36","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"16948:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"16914:30:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7206,"nodeType":"RevertStatement","src":"16907:47:36"}]}},{"expression":{"arguments":[{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"16987:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7209,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:36","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7194,"id":7213,"nodeType":"Return","src":"16974:19:36"}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"16515:272:36","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:36","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"16817:5:36","nodeType":"VariableDeclaration","scope":7215,"src":"16809:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:36"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7215,"src":"16847:5:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7192,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:36"},"scope":8085,"src":"16792:208:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"17236:128:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17250:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7231,"nodeType":"IfStatement","src":"17246:81:36","trueBody":{"id":7230,"nodeType":"Block","src":"17261:66:36","statements":[{"errorCall":{"arguments":[{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17310:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7226,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"17282:27:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"RevertStatement","src":"17275:41:36"}]}},{"expression":{"arguments":[{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17351:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:36","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7222,"id":7236,"nodeType":"Return","src":"17336:21:36"}]},"documentation":{"id":7216,"nodeType":"StructuredDocumentation","src":"17006:160:36","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:36","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"value","nameLocation":"17197:5:36","nodeType":"VariableDeclaration","scope":7238,"src":"17190:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7217,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:36"},"returnParameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"17227:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:36"},"scope":8085,"src":"17171:193:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7263,"nodeType":"Block","src":"17761:150:36","statements":[{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"17771:10:36","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"17791:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7247,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:36","typeDescriptions":{}}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:36","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7252,"nodeType":"ExpressionStatement","src":"17771:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"17811:10:36","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"17825:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7262,"nodeType":"IfStatement","src":"17807:98:36","trueBody":{"id":7261,"nodeType":"Block","src":"17832:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:36","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"17888:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"17853:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7260,"nodeType":"RevertStatement","src":"17846:48:36"}]}}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"17370:312:36","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:36","nodeType":"FunctionDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"value","nameLocation":"17712:5:36","nodeType":"VariableDeclaration","scope":7264,"src":"17705:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7240,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:36"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:36","nodeType":"VariableDeclaration","scope":7264,"src":"17742:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7243,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:36","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:36"},"scope":8085,"src":"17687:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7289,"nodeType":"Block","src":"18308:150:36","statements":[{"expression":{"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"18318:10:36","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"18338:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7273,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:36","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:36","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7278,"nodeType":"ExpressionStatement","src":"18318:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"18358:10:36","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"18372:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7288,"nodeType":"IfStatement","src":"18354:98:36","trueBody":{"id":7287,"nodeType":"Block","src":"18379:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:36","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"18435:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"18400:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7286,"nodeType":"RevertStatement","src":"18393:48:36"}]}}]},"documentation":{"id":7265,"nodeType":"StructuredDocumentation","src":"17917:312:36","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:36","nodeType":"FunctionDefinition","parameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"value","nameLocation":"18259:5:36","nodeType":"VariableDeclaration","scope":7290,"src":"18252:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7266,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:36"},"returnParameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7270,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:36","nodeType":"VariableDeclaration","scope":7290,"src":"18289:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7269,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:36","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:36"},"scope":8085,"src":"18234:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7315,"nodeType":"Block","src":"18855:150:36","statements":[{"expression":{"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"18865:10:36","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"18885:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7299,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:36","typeDescriptions":{}}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:36","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7304,"nodeType":"ExpressionStatement","src":"18865:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"18905:10:36","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"18919:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7314,"nodeType":"IfStatement","src":"18901:98:36","trueBody":{"id":7313,"nodeType":"Block","src":"18926:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:36","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"18982:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"18947:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7312,"nodeType":"RevertStatement","src":"18940:48:36"}]}}]},"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"18464:312:36","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:36","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7293,"mutability":"mutable","name":"value","nameLocation":"18806:5:36","nodeType":"VariableDeclaration","scope":7316,"src":"18799:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7292,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:36"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:36","nodeType":"VariableDeclaration","scope":7316,"src":"18836:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7295,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:36","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:36"},"scope":8085,"src":"18781:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7341,"nodeType":"Block","src":"19402:150:36","statements":[{"expression":{"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"19412:10:36","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"19432:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7325,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:36","typeDescriptions":{}}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:36","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7330,"nodeType":"ExpressionStatement","src":"19412:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"19452:10:36","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"19466:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7340,"nodeType":"IfStatement","src":"19448:98:36","trueBody":{"id":7339,"nodeType":"Block","src":"19473:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:36","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"19529:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"19494:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7338,"nodeType":"RevertStatement","src":"19487:48:36"}]}}]},"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"19011:312:36","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:36","nodeType":"FunctionDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"value","nameLocation":"19353:5:36","nodeType":"VariableDeclaration","scope":7342,"src":"19346:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7318,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:36"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:36","nodeType":"VariableDeclaration","scope":7342,"src":"19383:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7321,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:36","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:36"},"scope":8085,"src":"19328:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7367,"nodeType":"Block","src":"19949:150:36","statements":[{"expression":{"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"19959:10:36","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"19979:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7351,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:36","typeDescriptions":{}}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:36","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7356,"nodeType":"ExpressionStatement","src":"19959:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"19999:10:36","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"20013:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7366,"nodeType":"IfStatement","src":"19995:98:36","trueBody":{"id":7365,"nodeType":"Block","src":"20020:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:36","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"20076:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"20041:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7364,"nodeType":"RevertStatement","src":"20034:48:36"}]}}]},"documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"19558:312:36","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:36","nodeType":"FunctionDefinition","parameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"value","nameLocation":"19900:5:36","nodeType":"VariableDeclaration","scope":7368,"src":"19893:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7344,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:36"},"returnParameters":{"id":7349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:36","nodeType":"VariableDeclaration","scope":7368,"src":"19930:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7347,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:36","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:36"},"scope":8085,"src":"19875:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7393,"nodeType":"Block","src":"20496:150:36","statements":[{"expression":{"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"20506:10:36","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"20526:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7377,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:36","typeDescriptions":{}}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:36","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7382,"nodeType":"ExpressionStatement","src":"20506:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"20546:10:36","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"20560:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7392,"nodeType":"IfStatement","src":"20542:98:36","trueBody":{"id":7391,"nodeType":"Block","src":"20567:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:36","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"20623:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"20588:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7390,"nodeType":"RevertStatement","src":"20581:48:36"}]}}]},"documentation":{"id":7369,"nodeType":"StructuredDocumentation","src":"20105:312:36","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:36","nodeType":"FunctionDefinition","parameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"value","nameLocation":"20447:5:36","nodeType":"VariableDeclaration","scope":7394,"src":"20440:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7370,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:36"},"returnParameters":{"id":7375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:36","nodeType":"VariableDeclaration","scope":7394,"src":"20477:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7373,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:36","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:36"},"scope":8085,"src":"20422:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7419,"nodeType":"Block","src":"21043:150:36","statements":[{"expression":{"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"21053:10:36","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"21073:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7403,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:36","typeDescriptions":{}}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:36","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7408,"nodeType":"ExpressionStatement","src":"21053:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"21093:10:36","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"21107:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7418,"nodeType":"IfStatement","src":"21089:98:36","trueBody":{"id":7417,"nodeType":"Block","src":"21114:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:36","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"21170:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"21135:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7416,"nodeType":"RevertStatement","src":"21128:48:36"}]}}]},"documentation":{"id":7395,"nodeType":"StructuredDocumentation","src":"20652:312:36","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:36","nodeType":"FunctionDefinition","parameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"value","nameLocation":"20994:5:36","nodeType":"VariableDeclaration","scope":7420,"src":"20987:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7396,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:36"},"returnParameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:36","nodeType":"VariableDeclaration","scope":7420,"src":"21024:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7399,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:36","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:36"},"scope":8085,"src":"20969:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7445,"nodeType":"Block","src":"21590:150:36","statements":[{"expression":{"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"21600:10:36","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"21620:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7429,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:36","typeDescriptions":{}}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:36","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7434,"nodeType":"ExpressionStatement","src":"21600:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"21640:10:36","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"21654:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7444,"nodeType":"IfStatement","src":"21636:98:36","trueBody":{"id":7443,"nodeType":"Block","src":"21661:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:36","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"21717:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"21682:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7442,"nodeType":"RevertStatement","src":"21675:48:36"}]}}]},"documentation":{"id":7421,"nodeType":"StructuredDocumentation","src":"21199:312:36","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:36","nodeType":"FunctionDefinition","parameters":{"id":7424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7423,"mutability":"mutable","name":"value","nameLocation":"21541:5:36","nodeType":"VariableDeclaration","scope":7446,"src":"21534:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7422,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:36"},"returnParameters":{"id":7427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7426,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:36","nodeType":"VariableDeclaration","scope":7446,"src":"21571:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7425,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:36","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:36"},"scope":8085,"src":"21516:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7471,"nodeType":"Block","src":"22137:150:36","statements":[{"expression":{"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"22147:10:36","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"22167:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7455,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:36","typeDescriptions":{}}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:36","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7460,"nodeType":"ExpressionStatement","src":"22147:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"22187:10:36","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"22201:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7470,"nodeType":"IfStatement","src":"22183:98:36","trueBody":{"id":7469,"nodeType":"Block","src":"22208:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:36","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"22264:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"22229:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7468,"nodeType":"RevertStatement","src":"22222:48:36"}]}}]},"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"21746:312:36","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:36","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"value","nameLocation":"22088:5:36","nodeType":"VariableDeclaration","scope":7472,"src":"22081:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7448,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:36"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:36","nodeType":"VariableDeclaration","scope":7472,"src":"22118:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7451,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:36","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:36"},"scope":8085,"src":"22063:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7497,"nodeType":"Block","src":"22684:150:36","statements":[{"expression":{"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"22694:10:36","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"22714:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7481,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:36","typeDescriptions":{}}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:36","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7486,"nodeType":"ExpressionStatement","src":"22694:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"22734:10:36","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"22748:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"IfStatement","src":"22730:98:36","trueBody":{"id":7495,"nodeType":"Block","src":"22755:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:36","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"22811:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"22776:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7494,"nodeType":"RevertStatement","src":"22769:48:36"}]}}]},"documentation":{"id":7473,"nodeType":"StructuredDocumentation","src":"22293:312:36","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:36","nodeType":"FunctionDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"value","nameLocation":"22635:5:36","nodeType":"VariableDeclaration","scope":7498,"src":"22628:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7474,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:36"},"returnParameters":{"id":7479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7478,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:36","nodeType":"VariableDeclaration","scope":7498,"src":"22665:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7477,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:36","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:36"},"scope":8085,"src":"22610:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7523,"nodeType":"Block","src":"23231:150:36","statements":[{"expression":{"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"23241:10:36","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"23261:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7507,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:36","typeDescriptions":{}}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:36","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7512,"nodeType":"ExpressionStatement","src":"23241:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"23281:10:36","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"23295:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7522,"nodeType":"IfStatement","src":"23277:98:36","trueBody":{"id":7521,"nodeType":"Block","src":"23302:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:36","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"23358:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23323:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7520,"nodeType":"RevertStatement","src":"23316:48:36"}]}}]},"documentation":{"id":7499,"nodeType":"StructuredDocumentation","src":"22840:312:36","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:36","nodeType":"FunctionDefinition","parameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"value","nameLocation":"23182:5:36","nodeType":"VariableDeclaration","scope":7524,"src":"23175:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7500,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:36"},"returnParameters":{"id":7505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:36","nodeType":"VariableDeclaration","scope":7524,"src":"23212:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7503,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:36","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:36"},"scope":8085,"src":"23157:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7549,"nodeType":"Block","src":"23778:150:36","statements":[{"expression":{"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"23788:10:36","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"23808:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7533,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:36","typeDescriptions":{}}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:36","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7538,"nodeType":"ExpressionStatement","src":"23788:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"23828:10:36","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"23842:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7548,"nodeType":"IfStatement","src":"23824:98:36","trueBody":{"id":7547,"nodeType":"Block","src":"23849:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:36","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"23905:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23870:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7546,"nodeType":"RevertStatement","src":"23863:48:36"}]}}]},"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"23387:312:36","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:36","nodeType":"FunctionDefinition","parameters":{"id":7528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"value","nameLocation":"23729:5:36","nodeType":"VariableDeclaration","scope":7550,"src":"23722:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7526,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:36"},"returnParameters":{"id":7531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7530,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:36","nodeType":"VariableDeclaration","scope":7550,"src":"23759:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7529,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:36","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:36"},"scope":8085,"src":"23704:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7575,"nodeType":"Block","src":"24325:150:36","statements":[{"expression":{"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"24335:10:36","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24355:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7559,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:36","typeDescriptions":{}}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:36","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7564,"nodeType":"ExpressionStatement","src":"24335:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"24375:10:36","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24389:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7574,"nodeType":"IfStatement","src":"24371:98:36","trueBody":{"id":7573,"nodeType":"Block","src":"24396:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:36","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24452:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"24417:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7572,"nodeType":"RevertStatement","src":"24410:48:36"}]}}]},"documentation":{"id":7551,"nodeType":"StructuredDocumentation","src":"23934:312:36","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:36","nodeType":"FunctionDefinition","parameters":{"id":7554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7553,"mutability":"mutable","name":"value","nameLocation":"24276:5:36","nodeType":"VariableDeclaration","scope":7576,"src":"24269:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7552,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:36"},"returnParameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:36","nodeType":"VariableDeclaration","scope":7576,"src":"24306:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7555,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:36","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:36"},"scope":8085,"src":"24251:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7601,"nodeType":"Block","src":"24872:150:36","statements":[{"expression":{"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"24882:10:36","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"24902:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7585,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:36","typeDescriptions":{}}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:36","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7590,"nodeType":"ExpressionStatement","src":"24882:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"24922:10:36","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"24936:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7600,"nodeType":"IfStatement","src":"24918:98:36","trueBody":{"id":7599,"nodeType":"Block","src":"24943:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:36","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"24999:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"24964:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7598,"nodeType":"RevertStatement","src":"24957:48:36"}]}}]},"documentation":{"id":7577,"nodeType":"StructuredDocumentation","src":"24481:312:36","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:36","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"value","nameLocation":"24823:5:36","nodeType":"VariableDeclaration","scope":7602,"src":"24816:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7578,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:36"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:36","nodeType":"VariableDeclaration","scope":7602,"src":"24853:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7581,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:36","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:36"},"scope":8085,"src":"24798:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7627,"nodeType":"Block","src":"25419:150:36","statements":[{"expression":{"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"25429:10:36","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"25449:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7611,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:36","typeDescriptions":{}}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:36","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7616,"nodeType":"ExpressionStatement","src":"25429:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"25469:10:36","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"25483:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7626,"nodeType":"IfStatement","src":"25465:98:36","trueBody":{"id":7625,"nodeType":"Block","src":"25490:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:36","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"25546:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"25511:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7624,"nodeType":"RevertStatement","src":"25504:48:36"}]}}]},"documentation":{"id":7603,"nodeType":"StructuredDocumentation","src":"25028:312:36","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:36","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"value","nameLocation":"25370:5:36","nodeType":"VariableDeclaration","scope":7628,"src":"25363:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7604,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:36"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7608,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:36","nodeType":"VariableDeclaration","scope":7628,"src":"25400:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7607,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:36","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:36"},"scope":8085,"src":"25345:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7653,"nodeType":"Block","src":"25966:150:36","statements":[{"expression":{"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"25976:10:36","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"25996:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7637,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:36","typeDescriptions":{}}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:36","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7642,"nodeType":"ExpressionStatement","src":"25976:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"26016:10:36","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"26030:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7652,"nodeType":"IfStatement","src":"26012:98:36","trueBody":{"id":7651,"nodeType":"Block","src":"26037:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:36","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"26093:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"26058:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7650,"nodeType":"RevertStatement","src":"26051:48:36"}]}}]},"documentation":{"id":7629,"nodeType":"StructuredDocumentation","src":"25575:312:36","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:36","nodeType":"FunctionDefinition","parameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"value","nameLocation":"25917:5:36","nodeType":"VariableDeclaration","scope":7654,"src":"25910:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7630,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:36"},"returnParameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:36","nodeType":"VariableDeclaration","scope":7654,"src":"25947:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7633,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:36","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:36"},"scope":8085,"src":"25892:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7679,"nodeType":"Block","src":"26513:150:36","statements":[{"expression":{"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"26523:10:36","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"26543:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7663,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:36","typeDescriptions":{}}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:36","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7668,"nodeType":"ExpressionStatement","src":"26523:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"26563:10:36","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"26577:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7678,"nodeType":"IfStatement","src":"26559:98:36","trueBody":{"id":7677,"nodeType":"Block","src":"26584:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:36","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"26640:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"26605:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7676,"nodeType":"RevertStatement","src":"26598:48:36"}]}}]},"documentation":{"id":7655,"nodeType":"StructuredDocumentation","src":"26122:312:36","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:36","nodeType":"FunctionDefinition","parameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7657,"mutability":"mutable","name":"value","nameLocation":"26464:5:36","nodeType":"VariableDeclaration","scope":7680,"src":"26457:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7656,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:36"},"returnParameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7660,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:36","nodeType":"VariableDeclaration","scope":7680,"src":"26494:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7659,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:36","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:36"},"scope":8085,"src":"26439:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7705,"nodeType":"Block","src":"27060:150:36","statements":[{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"27070:10:36","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"27090:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7689,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:36","typeDescriptions":{}}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:36","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7694,"nodeType":"ExpressionStatement","src":"27070:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"27110:10:36","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"27124:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7704,"nodeType":"IfStatement","src":"27106:98:36","trueBody":{"id":7703,"nodeType":"Block","src":"27131:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:36","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"27187:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"27152:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7702,"nodeType":"RevertStatement","src":"27145:48:36"}]}}]},"documentation":{"id":7681,"nodeType":"StructuredDocumentation","src":"26669:312:36","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:36","nodeType":"FunctionDefinition","parameters":{"id":7684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7683,"mutability":"mutable","name":"value","nameLocation":"27011:5:36","nodeType":"VariableDeclaration","scope":7706,"src":"27004:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7682,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:36"},"returnParameters":{"id":7687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7686,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:36","nodeType":"VariableDeclaration","scope":7706,"src":"27041:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7685,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:36","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:36"},"scope":8085,"src":"26986:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7731,"nodeType":"Block","src":"27607:150:36","statements":[{"expression":{"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"27617:10:36","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"27637:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7715,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:36","typeDescriptions":{}}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:36","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7720,"nodeType":"ExpressionStatement","src":"27617:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"27657:10:36","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"27671:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7730,"nodeType":"IfStatement","src":"27653:98:36","trueBody":{"id":7729,"nodeType":"Block","src":"27678:73:36","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:36","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"27734:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7724,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"27699:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7728,"nodeType":"RevertStatement","src":"27692:48:36"}]}}]},"documentation":{"id":7707,"nodeType":"StructuredDocumentation","src":"27216:312:36","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:36","nodeType":"FunctionDefinition","parameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"value","nameLocation":"27558:5:36","nodeType":"VariableDeclaration","scope":7732,"src":"27551:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7708,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:36"},"returnParameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:36","nodeType":"VariableDeclaration","scope":7732,"src":"27588:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7711,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:36","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:36"},"scope":8085,"src":"27533:224:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7757,"nodeType":"Block","src":"28147:148:36","statements":[{"expression":{"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"28157:10:36","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"28176:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7741,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:36","typeDescriptions":{}}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:36","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7746,"nodeType":"ExpressionStatement","src":"28157:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"28196:10:36","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"28210:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7756,"nodeType":"IfStatement","src":"28192:97:36","trueBody":{"id":7755,"nodeType":"Block","src":"28217:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:36","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"28272:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7750,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"28238:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7754,"nodeType":"RevertStatement","src":"28231:47:36"}]}}]},"documentation":{"id":7733,"nodeType":"StructuredDocumentation","src":"27763:307:36","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:36","nodeType":"FunctionDefinition","parameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"value","nameLocation":"28099:5:36","nodeType":"VariableDeclaration","scope":7758,"src":"28092:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7734,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:36"},"returnParameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:36","nodeType":"VariableDeclaration","scope":7758,"src":"28129:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7737,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:36","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:36"},"scope":8085,"src":"28075:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7783,"nodeType":"Block","src":"28685:148:36","statements":[{"expression":{"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"28695:10:36","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"28714:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7767,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:36","typeDescriptions":{}}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:36","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7772,"nodeType":"ExpressionStatement","src":"28695:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"28734:10:36","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"28748:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7782,"nodeType":"IfStatement","src":"28730:97:36","trueBody":{"id":7781,"nodeType":"Block","src":"28755:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:36","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"28810:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"28776:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7780,"nodeType":"RevertStatement","src":"28769:47:36"}]}}]},"documentation":{"id":7759,"nodeType":"StructuredDocumentation","src":"28301:307:36","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:36","nodeType":"FunctionDefinition","parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"value","nameLocation":"28637:5:36","nodeType":"VariableDeclaration","scope":7784,"src":"28630:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7760,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:36"},"returnParameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:36","nodeType":"VariableDeclaration","scope":7784,"src":"28667:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7763,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:36","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:36"},"scope":8085,"src":"28613:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7809,"nodeType":"Block","src":"29223:148:36","statements":[{"expression":{"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"29233:10:36","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"29252:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7793,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:36","typeDescriptions":{}}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:36","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7798,"nodeType":"ExpressionStatement","src":"29233:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"29272:10:36","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"29286:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7808,"nodeType":"IfStatement","src":"29268:97:36","trueBody":{"id":7807,"nodeType":"Block","src":"29293:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:36","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"29348:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"29314:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7806,"nodeType":"RevertStatement","src":"29307:47:36"}]}}]},"documentation":{"id":7785,"nodeType":"StructuredDocumentation","src":"28839:307:36","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:36","nodeType":"FunctionDefinition","parameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"value","nameLocation":"29175:5:36","nodeType":"VariableDeclaration","scope":7810,"src":"29168:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7786,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:36"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:36","nodeType":"VariableDeclaration","scope":7810,"src":"29205:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7789,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:36","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:36"},"scope":8085,"src":"29151:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7835,"nodeType":"Block","src":"29761:148:36","statements":[{"expression":{"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"29771:10:36","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"29790:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7819,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:36","typeDescriptions":{}}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:36","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7824,"nodeType":"ExpressionStatement","src":"29771:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"29810:10:36","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"29824:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7834,"nodeType":"IfStatement","src":"29806:97:36","trueBody":{"id":7833,"nodeType":"Block","src":"29831:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:36","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"29886:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"29852:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7832,"nodeType":"RevertStatement","src":"29845:47:36"}]}}]},"documentation":{"id":7811,"nodeType":"StructuredDocumentation","src":"29377:307:36","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:36","nodeType":"FunctionDefinition","parameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7813,"mutability":"mutable","name":"value","nameLocation":"29713:5:36","nodeType":"VariableDeclaration","scope":7836,"src":"29706:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7812,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:36"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:36","nodeType":"VariableDeclaration","scope":7836,"src":"29743:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7815,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:36","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:36"},"scope":8085,"src":"29689:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7861,"nodeType":"Block","src":"30299:148:36","statements":[{"expression":{"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"30309:10:36","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"30328:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7845,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:36","typeDescriptions":{}}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:36","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7850,"nodeType":"ExpressionStatement","src":"30309:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"30348:10:36","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"30362:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7860,"nodeType":"IfStatement","src":"30344:97:36","trueBody":{"id":7859,"nodeType":"Block","src":"30369:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:36","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"30424:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"30390:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7858,"nodeType":"RevertStatement","src":"30383:47:36"}]}}]},"documentation":{"id":7837,"nodeType":"StructuredDocumentation","src":"29915:307:36","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:36","nodeType":"FunctionDefinition","parameters":{"id":7840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"value","nameLocation":"30251:5:36","nodeType":"VariableDeclaration","scope":7862,"src":"30244:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7838,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:36"},"returnParameters":{"id":7843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7842,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:36","nodeType":"VariableDeclaration","scope":7862,"src":"30281:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7841,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:36","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:36"},"scope":8085,"src":"30227:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7887,"nodeType":"Block","src":"30837:148:36","statements":[{"expression":{"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"30847:10:36","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"30866:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7871,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:36","typeDescriptions":{}}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:36","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7876,"nodeType":"ExpressionStatement","src":"30847:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"30886:10:36","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"30900:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7886,"nodeType":"IfStatement","src":"30882:97:36","trueBody":{"id":7885,"nodeType":"Block","src":"30907:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:36","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"30962:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7880,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"30928:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7884,"nodeType":"RevertStatement","src":"30921:47:36"}]}}]},"documentation":{"id":7863,"nodeType":"StructuredDocumentation","src":"30453:307:36","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:36","nodeType":"FunctionDefinition","parameters":{"id":7866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"mutability":"mutable","name":"value","nameLocation":"30789:5:36","nodeType":"VariableDeclaration","scope":7888,"src":"30782:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7864,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:36"},"returnParameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:36","nodeType":"VariableDeclaration","scope":7888,"src":"30819:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7867,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:36","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:36"},"scope":8085,"src":"30765:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7913,"nodeType":"Block","src":"31375:148:36","statements":[{"expression":{"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"31385:10:36","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"31404:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7897,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:36","typeDescriptions":{}}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:36","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7902,"nodeType":"ExpressionStatement","src":"31385:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"31424:10:36","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"31438:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7912,"nodeType":"IfStatement","src":"31420:97:36","trueBody":{"id":7911,"nodeType":"Block","src":"31445:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:36","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"31500:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7906,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"31466:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7910,"nodeType":"RevertStatement","src":"31459:47:36"}]}}]},"documentation":{"id":7889,"nodeType":"StructuredDocumentation","src":"30991:307:36","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7914,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:36","nodeType":"FunctionDefinition","parameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"value","nameLocation":"31327:5:36","nodeType":"VariableDeclaration","scope":7914,"src":"31320:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7890,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:36"},"returnParameters":{"id":7895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7894,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:36","nodeType":"VariableDeclaration","scope":7914,"src":"31357:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7893,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:36","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:36"},"scope":8085,"src":"31303:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7939,"nodeType":"Block","src":"31913:148:36","statements":[{"expression":{"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"31923:10:36","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"31942:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7923,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:36","typeDescriptions":{}}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:36","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7928,"nodeType":"ExpressionStatement","src":"31923:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"31962:10:36","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"31976:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7938,"nodeType":"IfStatement","src":"31958:97:36","trueBody":{"id":7937,"nodeType":"Block","src":"31983:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:36","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"32038:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7932,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"32004:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7936,"nodeType":"RevertStatement","src":"31997:47:36"}]}}]},"documentation":{"id":7915,"nodeType":"StructuredDocumentation","src":"31529:307:36","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7940,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:36","nodeType":"FunctionDefinition","parameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"value","nameLocation":"31865:5:36","nodeType":"VariableDeclaration","scope":7940,"src":"31858:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7916,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:36"},"returnParameters":{"id":7921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7920,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:36","nodeType":"VariableDeclaration","scope":7940,"src":"31895:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7919,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:36","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:36"},"scope":8085,"src":"31841:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7965,"nodeType":"Block","src":"32451:148:36","statements":[{"expression":{"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"32461:10:36","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"32480:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7949,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:36","typeDescriptions":{}}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:36","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7954,"nodeType":"ExpressionStatement","src":"32461:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"32500:10:36","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"32514:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7964,"nodeType":"IfStatement","src":"32496:97:36","trueBody":{"id":7963,"nodeType":"Block","src":"32521:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:36","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"32576:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7958,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"32542:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7962,"nodeType":"RevertStatement","src":"32535:47:36"}]}}]},"documentation":{"id":7941,"nodeType":"StructuredDocumentation","src":"32067:307:36","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:36","nodeType":"FunctionDefinition","parameters":{"id":7944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7943,"mutability":"mutable","name":"value","nameLocation":"32403:5:36","nodeType":"VariableDeclaration","scope":7966,"src":"32396:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7942,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:36"},"returnParameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:36","nodeType":"VariableDeclaration","scope":7966,"src":"32433:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7945,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:36","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:36"},"scope":8085,"src":"32379:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7991,"nodeType":"Block","src":"32989:148:36","statements":[{"expression":{"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"32999:10:36","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"33018:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7975,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:36","typeDescriptions":{}}},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:36","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7980,"nodeType":"ExpressionStatement","src":"32999:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"33038:10:36","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"33052:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7990,"nodeType":"IfStatement","src":"33034:97:36","trueBody":{"id":7989,"nodeType":"Block","src":"33059:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:36","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"33114:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7984,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"33080:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7988,"nodeType":"RevertStatement","src":"33073:47:36"}]}}]},"documentation":{"id":7967,"nodeType":"StructuredDocumentation","src":"32605:307:36","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:36","nodeType":"FunctionDefinition","parameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7969,"mutability":"mutable","name":"value","nameLocation":"32941:5:36","nodeType":"VariableDeclaration","scope":7992,"src":"32934:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7968,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:36"},"returnParameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:36","nodeType":"VariableDeclaration","scope":7992,"src":"32971:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7971,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:36","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:36"},"scope":8085,"src":"32917:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8017,"nodeType":"Block","src":"33527:148:36","statements":[{"expression":{"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"33537:10:36","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"33556:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8001,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:36","typeDescriptions":{}}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:36","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8006,"nodeType":"ExpressionStatement","src":"33537:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"33576:10:36","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"33590:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8016,"nodeType":"IfStatement","src":"33572:97:36","trueBody":{"id":8015,"nodeType":"Block","src":"33597:72:36","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:36","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"33652:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"33618:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8014,"nodeType":"RevertStatement","src":"33611:47:36"}]}}]},"documentation":{"id":7993,"nodeType":"StructuredDocumentation","src":"33143:307:36","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:36","nodeType":"FunctionDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"value","nameLocation":"33479:5:36","nodeType":"VariableDeclaration","scope":8018,"src":"33472:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7994,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:36"},"returnParameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7998,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:36","nodeType":"VariableDeclaration","scope":8018,"src":"33509:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7997,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:36","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:36"},"scope":8085,"src":"33455:220:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8043,"nodeType":"Block","src":"34058:146:36","statements":[{"expression":{"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"34068:10:36","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"34086:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8027,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:36","typeDescriptions":{}}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:36","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8032,"nodeType":"ExpressionStatement","src":"34068:24:36"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"34106:10:36","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"34120:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8042,"nodeType":"IfStatement","src":"34102:96:36","trueBody":{"id":8041,"nodeType":"Block","src":"34127:71:36","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:36","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"34181:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"34148:29:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8040,"nodeType":"RevertStatement","src":"34141:46:36"}]}}]},"documentation":{"id":8019,"nodeType":"StructuredDocumentation","src":"33681:302:36","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:36","nodeType":"FunctionDefinition","parameters":{"id":8022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8021,"mutability":"mutable","name":"value","nameLocation":"34011:5:36","nodeType":"VariableDeclaration","scope":8044,"src":"34004:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8020,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:36"},"returnParameters":{"id":8025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:36","nodeType":"VariableDeclaration","scope":8044,"src":"34041:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8023,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:36","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:36"},"scope":8085,"src":"33988:216:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8073,"nodeType":"Block","src":"34444:250:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"34557:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8056,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8055,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:36","memberName":"max","nodeType":"MemberAccess","src":"34573:16:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:36","typeDescriptions":{}}},"id":8060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8067,"nodeType":"IfStatement","src":"34553:105:36","trueBody":{"id":8066,"nodeType":"Block","src":"34592:66:36","statements":[{"errorCall":{"arguments":[{"id":8063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"34641:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8062,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"34613:27:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8065,"nodeType":"RevertStatement","src":"34606:41:36"}]}},{"expression":{"arguments":[{"id":8070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"34681:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8068,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:36","typeDescriptions":{}}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8051,"id":8072,"nodeType":"Return","src":"34667:20:36"}]},"documentation":{"id":8045,"nodeType":"StructuredDocumentation","src":"34210:165:36","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8074,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:36","nodeType":"FunctionDefinition","parameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"value","nameLocation":"34406:5:36","nodeType":"VariableDeclaration","scope":8074,"src":"34398:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8046,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:36"},"returnParameters":{"id":8051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8074,"src":"34436:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8049,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:36"},"scope":8085,"src":"34380:314:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8083,"nodeType":"Block","src":"34853:87:36","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:36","statements":[{"nodeType":"YulAssignment","src":"34902:22:36","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:36"},"nodeType":"YulFunctionCall","src":"34914:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:36"},"nodeType":"YulFunctionCall","src":"34907:17:36"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8077,"isOffset":false,"isSlot":false,"src":"34921:1:36","valueSize":1},{"declaration":8080,"isOffset":false,"isSlot":false,"src":"34902:1:36","valueSize":1}],"flags":["memory-safe"],"id":8082,"nodeType":"InlineAssembly","src":"34863:71:36"}]},"documentation":{"id":8075,"nodeType":"StructuredDocumentation","src":"34700:90:36","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8084,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:36","nodeType":"FunctionDefinition","parameters":{"id":8078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"mutability":"mutable","name":"b","nameLocation":"34816:1:36","nodeType":"VariableDeclaration","scope":8084,"src":"34811:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8076,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:36"},"returnParameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"u","nameLocation":"34850:1:36","nodeType":"VariableDeclaration","scope":8084,"src":"34842:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8079,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:36"},"scope":8085,"src":"34795:145:36","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8086,"src":"769:34173:36","usedErrors":[6330,6335,6342,6347],"usedEvents":[]}],"src":"192:34751:36"},"id":36},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8085],"SignedMath":[8229]},"id":8230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8087,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:37"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8230,"sourceUnit":8086,"src":"135:40:37","symbolAliases":[{"foreign":{"id":8088,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"143:8:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8090,"nodeType":"StructuredDocumentation","src":"177:80:37","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8229,"linearizedBaseContracts":[8229],"name":"SignedMath","nameLocation":"266:10:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":8119,"nodeType":"Block","src":"746:215:37","statements":[{"id":8118,"nodeType":"UncheckedBlock","src":"756:199:37","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"894:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"900:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"904:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8111,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"932:9:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8109,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"916:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:37","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8084,"src":"916:15:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8107,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:37","typeDescriptions":{}}},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8101,"id":8117,"nodeType":"Return","src":"887:57:37"}]}]},"documentation":{"id":8091,"nodeType":"StructuredDocumentation","src":"283:374:37","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8120,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:37","nodeType":"FunctionDefinition","parameters":{"id":8098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8093,"mutability":"mutable","name":"condition","nameLocation":"684:9:37","nodeType":"VariableDeclaration","scope":8120,"src":"679:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8092,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8095,"mutability":"mutable","name":"a","nameLocation":"702:1:37","nodeType":"VariableDeclaration","scope":8120,"src":"695:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8094,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8097,"mutability":"mutable","name":"b","nameLocation":"712:1:37","nodeType":"VariableDeclaration","scope":8120,"src":"705:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8096,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:37"},"returnParameters":{"id":8101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8120,"src":"738:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8099,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:37"},"scope":8229,"src":"662:299:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8138,"nodeType":"Block","src":"1102:44:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"1127:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"1131:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"1134:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8135,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"1137:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8130,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"1119:7:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8129,"id":8137,"nodeType":"Return","src":"1112:27:37"}]},"documentation":{"id":8121,"nodeType":"StructuredDocumentation","src":"967:66:37","text":" @dev Returns the largest of two signed numbers."},"id":8139,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:37","nodeType":"FunctionDefinition","parameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"a","nameLocation":"1058:1:37","nodeType":"VariableDeclaration","scope":8139,"src":"1051:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8122,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8125,"mutability":"mutable","name":"b","nameLocation":"1068:1:37","nodeType":"VariableDeclaration","scope":8139,"src":"1061:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8124,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:37"},"returnParameters":{"id":8129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8139,"src":"1094:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8127,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:37"},"scope":8229,"src":"1038:108:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8157,"nodeType":"Block","src":"1288:44:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"1313:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8151,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"1317:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"1320:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"1323:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8149,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"1305:7:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8148,"id":8156,"nodeType":"Return","src":"1298:27:37"}]},"documentation":{"id":8140,"nodeType":"StructuredDocumentation","src":"1152:67:37","text":" @dev Returns the smallest of two signed numbers."},"id":8158,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:37","nodeType":"FunctionDefinition","parameters":{"id":8145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"a","nameLocation":"1244:1:37","nodeType":"VariableDeclaration","scope":8158,"src":"1237:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8141,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"b","nameLocation":"1254:1:37","nodeType":"VariableDeclaration","scope":8158,"src":"1247:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8143,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:37"},"returnParameters":{"id":8148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8158,"src":"1280:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8146,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:37"},"scope":8229,"src":"1224:108:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8201,"nodeType":"Block","src":"1537:162:37","statements":[{"assignments":[8169],"declarations":[{"constant":false,"id":8169,"mutability":"mutable","name":"x","nameLocation":"1606:1:37","nodeType":"VariableDeclaration","scope":8201,"src":"1599:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8168,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8182,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1611:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"1615:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1622:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"1626:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:37"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8183,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"1651:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8188,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"1671:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:37","typeDescriptions":{}}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:37","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8184,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:37","typeDescriptions":{}}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1685:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"1689:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8167,"id":8200,"nodeType":"Return","src":"1644:48:37"}]},"documentation":{"id":8159,"nodeType":"StructuredDocumentation","src":"1338:126:37","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8202,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:37","nodeType":"FunctionDefinition","parameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8161,"mutability":"mutable","name":"a","nameLocation":"1493:1:37","nodeType":"VariableDeclaration","scope":8202,"src":"1486:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8160,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8163,"mutability":"mutable","name":"b","nameLocation":"1503:1:37","nodeType":"VariableDeclaration","scope":8202,"src":"1496:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8162,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:37"},"returnParameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8202,"src":"1529:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8165,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:37"},"scope":8229,"src":"1469:230:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8227,"nodeType":"Block","src":"1843:767:37","statements":[{"id":8226,"nodeType":"UncheckedBlock","src":"1853:751:37","statements":[{"assignments":[8211],"declarations":[{"constant":false,"id":8211,"mutability":"mutable","name":"mask","nameLocation":"2424:4:37","nodeType":"VariableDeclaration","scope":8226,"src":"2417:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8210,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8215,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"2431:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:37","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8218,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"2576:1:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8219,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"2580:4:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8222,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"2588:4:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:37","typeDescriptions":{}}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8209,"id":8225,"nodeType":"Return","src":"2560:33:37"}]}]},"documentation":{"id":8203,"nodeType":"StructuredDocumentation","src":"1705:78:37","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8228,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:37","nodeType":"FunctionDefinition","parameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8205,"mutability":"mutable","name":"n","nameLocation":"1808:1:37","nodeType":"VariableDeclaration","scope":8228,"src":"1801:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8204,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:37"},"returnParameters":{"id":8209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8228,"src":"1834:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:37"},"scope":8229,"src":"1788:822:37","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8230,"src":"258:2354:37","usedErrors":[],"usedEvents":[]}],"src":"109:2504:37"},"id":37},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[9810],"Math":[6320]},"id":9811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:38"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9811,"sourceUnit":6321,"src":"227:38:38","symbolAliases":[{"foreign":{"id":8232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"235:4:38","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":8234,"nodeType":"StructuredDocumentation","src":"267:400:38","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":9810,"linearizedBaseContracts":[9810],"name":"Checkpoints","nameLocation":"676:11:38","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8235,"nodeType":"StructuredDocumentation","src":"694:82:38","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":8237,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:38","nodeType":"ErrorDefinition","parameters":{"id":8236,"nodeType":"ParameterList","parameters":[],"src":"815:2:38"},"src":"781:37:38"},{"canonicalName":"Checkpoints.Trace224","id":8242,"members":[{"constant":false,"id":8241,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:38","nodeType":"VariableDeclaration","scope":8242,"src":"850:28:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8239,"nodeType":"UserDefinedTypeName","pathNode":{"id":8238,"name":"Checkpoint224","nameLocations":["850:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"850:13:38"},"referencedDeclaration":8247,"src":"850:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8240,"nodeType":"ArrayTypeName","src":"850:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:38","nodeType":"StructDefinition","scope":9810,"src":"824:61:38","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":8247,"members":[{"constant":false,"id":8244,"mutability":"mutable","name":"_key","nameLocation":"929:4:38","nodeType":"VariableDeclaration","scope":8247,"src":"922:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8243,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8246,"mutability":"mutable","name":"_value","nameLocation":"951:6:38","nodeType":"VariableDeclaration","scope":8247,"src":"943:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8245,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:38","nodeType":"StructDefinition","scope":9810,"src":"891:73:38","visibility":"public"},{"body":{"id":8269,"nodeType":"Block","src":"1425:62:38","statements":[{"expression":{"arguments":[{"expression":{"id":8263,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"1450:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1455:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"1450:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8265,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"1469:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"1474:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8262,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8642,9166,9690],"referencedDeclaration":8642,"src":"1442:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":8261,"id":8268,"nodeType":"Return","src":"1435:45:38"}]},"documentation":{"id":8248,"nodeType":"StructuredDocumentation","src":"970:302:38","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":8270,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:38","nodeType":"FunctionDefinition","parameters":{"id":8256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8251,"mutability":"mutable","name":"self","nameLocation":"1317:4:38","nodeType":"VariableDeclaration","scope":8270,"src":"1300:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8250,"nodeType":"UserDefinedTypeName","pathNode":{"id":8249,"name":"Trace224","nameLocations":["1300:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"1300:8:38"},"referencedDeclaration":8242,"src":"1300:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8253,"mutability":"mutable","name":"key","nameLocation":"1338:3:38","nodeType":"VariableDeclaration","scope":8270,"src":"1331:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8252,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8255,"mutability":"mutable","name":"value","nameLocation":"1359:5:38","nodeType":"VariableDeclaration","scope":8270,"src":"1351:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8254,"name":"uint224","nodeType":"ElementaryTypeName","src":"1351:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:80:38"},"returnParameters":{"id":8261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"oldValue","nameLocation":"1397:8:38","nodeType":"VariableDeclaration","scope":8270,"src":"1389:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8257,"name":"uint224","nodeType":"ElementaryTypeName","src":"1389:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":8260,"mutability":"mutable","name":"newValue","nameLocation":"1415:8:38","nodeType":"VariableDeclaration","scope":8270,"src":"1407:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8259,"name":"uint224","nodeType":"ElementaryTypeName","src":"1407:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1388:36:38"},"scope":9810,"src":"1277:210:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8309,"nodeType":"Block","src":"1740:207:38","statements":[{"assignments":[8282],"declarations":[{"constant":false,"id":8282,"mutability":"mutable","name":"len","nameLocation":"1758:3:38","nodeType":"VariableDeclaration","scope":8309,"src":"1750:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8286,"initialValue":{"expression":{"expression":{"id":8283,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"1764:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1769:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"1764:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:38","memberName":"length","nodeType":"MemberAccess","src":"1764:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:38:38"},{"assignments":[8288],"declarations":[{"constant":false,"id":8288,"mutability":"mutable","name":"pos","nameLocation":"1806:3:38","nodeType":"VariableDeclaration","scope":8309,"src":"1798:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8296,"initialValue":{"arguments":[{"expression":{"id":8290,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"1831:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"1831:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8292,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8276,"src":"1850:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8294,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"1858:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8289,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8746,9270,9794],"referencedDeclaration":8746,"src":"1812:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8297,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8288,"src":"1879:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8298,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"1886:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8302,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"1910:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"1910:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8304,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8288,"src":"1929:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8301,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"1896:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"1896:44:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1879:61:38","trueExpression":{"hexValue":"30","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8280,"id":8308,"nodeType":"Return","src":"1872:68:38"}]},"documentation":{"id":8271,"nodeType":"StructuredDocumentation","src":"1493:154:38","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8310,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1661:11:38","nodeType":"FunctionDefinition","parameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8274,"mutability":"mutable","name":"self","nameLocation":"1690:4:38","nodeType":"VariableDeclaration","scope":8310,"src":"1673:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8273,"nodeType":"UserDefinedTypeName","pathNode":{"id":8272,"name":"Trace224","nameLocations":["1673:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"1673:8:38"},"referencedDeclaration":8242,"src":"1673:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8276,"mutability":"mutable","name":"key","nameLocation":"1703:3:38","nodeType":"VariableDeclaration","scope":8310,"src":"1696:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8275,"name":"uint32","nodeType":"ElementaryTypeName","src":"1696:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1672:35:38"},"returnParameters":{"id":8280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8310,"src":"1731:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8278,"name":"uint224","nodeType":"ElementaryTypeName","src":"1731:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1730:9:38"},"scope":9810,"src":"1652:295:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8351,"nodeType":"Block","src":"2202:209:38","statements":[{"assignments":[8322],"declarations":[{"constant":false,"id":8322,"mutability":"mutable","name":"len","nameLocation":"2220:3:38","nodeType":"VariableDeclaration","scope":8351,"src":"2212:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8326,"initialValue":{"expression":{"expression":{"id":8323,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"2226:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"2226:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:38","memberName":"length","nodeType":"MemberAccess","src":"2226:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:38:38"},{"assignments":[8328],"declarations":[{"constant":false,"id":8328,"mutability":"mutable","name":"pos","nameLocation":"2268:3:38","nodeType":"VariableDeclaration","scope":8351,"src":"2260:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8336,"initialValue":{"arguments":[{"expression":{"id":8330,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"2293:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"2293:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8332,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"2312:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8334,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"2320:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8329,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":8694,"src":"2274:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2260:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8337,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"2341:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2341:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8342,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"2370:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"2370:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8344,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"2389:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2389:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8341,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"2356:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"2356:48:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2341:63:38","trueExpression":{"hexValue":"30","id":8340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8320,"id":8350,"nodeType":"Return","src":"2334:70:38"}]},"documentation":{"id":8311,"nodeType":"StructuredDocumentation","src":"1953:156:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8352,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2123:11:38","nodeType":"FunctionDefinition","parameters":{"id":8317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8314,"mutability":"mutable","name":"self","nameLocation":"2152:4:38","nodeType":"VariableDeclaration","scope":8352,"src":"2135:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8313,"nodeType":"UserDefinedTypeName","pathNode":{"id":8312,"name":"Trace224","nameLocations":["2135:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"2135:8:38"},"referencedDeclaration":8242,"src":"2135:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8316,"mutability":"mutable","name":"key","nameLocation":"2165:3:38","nodeType":"VariableDeclaration","scope":8352,"src":"2158:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8315,"name":"uint32","nodeType":"ElementaryTypeName","src":"2158:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2134:35:38"},"returnParameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8352,"src":"2193:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8318,"name":"uint224","nodeType":"ElementaryTypeName","src":"2193:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2192:9:38"},"scope":9810,"src":"2114:297:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8436,"nodeType":"Block","src":"2810:512:38","statements":[{"assignments":[8364],"declarations":[{"constant":false,"id":8364,"mutability":"mutable","name":"len","nameLocation":"2828:3:38","nodeType":"VariableDeclaration","scope":8436,"src":"2820:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8368,"initialValue":{"expression":{"expression":{"id":8365,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"2834:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2839:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"2834:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:38","memberName":"length","nodeType":"MemberAccess","src":"2834:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2820:38:38"},{"assignments":[8370],"declarations":[{"constant":false,"id":8370,"mutability":"mutable","name":"low","nameLocation":"2877:3:38","nodeType":"VariableDeclaration","scope":8436,"src":"2869:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8372,"initialValue":{"hexValue":"30","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2869:15:38"},{"assignments":[8374],"declarations":[{"constant":false,"id":8374,"mutability":"mutable","name":"high","nameLocation":"2902:4:38","nodeType":"VariableDeclaration","scope":8436,"src":"2894:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8376,"initialValue":{"id":8375,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"2909:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:18:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8377,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"2927:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:1:38","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2927:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8411,"nodeType":"IfStatement","src":"2923:234:38","trueBody":{"id":8410,"nodeType":"Block","src":"2936:221:38","statements":[{"assignments":[8381],"declarations":[{"constant":false,"id":8381,"mutability":"mutable","name":"mid","nameLocation":"2958:3:38","nodeType":"VariableDeclaration","scope":8410,"src":"2950:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8382,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"2964:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8385,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"2980:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8383,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"2970:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:4:38","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5699,"src":"2970:9:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:14:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2950:34:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8389,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"3002:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8391,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"3022:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3027:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3022:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8393,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"3041:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8390,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"3008:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"3008:42:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3002:48:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8408,"nodeType":"Block","src":"3101:46:38","statements":[{"expression":{"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8402,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"3119:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8403,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"3125:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3119:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8407,"nodeType":"ExpressionStatement","src":"3119:13:38"}]},"id":8409,"nodeType":"IfStatement","src":"2998:149:38","trueBody":{"id":8401,"nodeType":"Block","src":"3052:43:38","statements":[{"expression":{"id":8399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8397,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"3070:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8398,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"3077:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8400,"nodeType":"ExpressionStatement","src":"3070:10:38"}]}}]}},{"assignments":[8413],"declarations":[{"constant":false,"id":8413,"mutability":"mutable","name":"pos","nameLocation":"3175:3:38","nodeType":"VariableDeclaration","scope":8436,"src":"3167:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8421,"initialValue":{"arguments":[{"expression":{"id":8415,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"3200:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3200:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8417,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"3219:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8418,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"3224:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8419,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"3229:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8414,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":8694,"src":"3181:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:53:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3167:67:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8422,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"3252:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3252:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8427,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"3281:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3281:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8429,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"3300:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3300:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8426,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"3267:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"3267:48:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3252:63:38","trueExpression":{"hexValue":"30","id":8425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8362,"id":8435,"nodeType":"Return","src":"3245:70:38"}]},"documentation":{"id":8353,"nodeType":"StructuredDocumentation","src":"2417:294:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8437,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2725:17:38","nodeType":"FunctionDefinition","parameters":{"id":8359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8356,"mutability":"mutable","name":"self","nameLocation":"2760:4:38","nodeType":"VariableDeclaration","scope":8437,"src":"2743:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8355,"nodeType":"UserDefinedTypeName","pathNode":{"id":8354,"name":"Trace224","nameLocations":["2743:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"2743:8:38"},"referencedDeclaration":8242,"src":"2743:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8358,"mutability":"mutable","name":"key","nameLocation":"2773:3:38","nodeType":"VariableDeclaration","scope":8437,"src":"2766:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8357,"name":"uint32","nodeType":"ElementaryTypeName","src":"2766:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2742:35:38"},"returnParameters":{"id":8362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8437,"src":"2801:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8360,"name":"uint224","nodeType":"ElementaryTypeName","src":"2801:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2800:9:38"},"scope":9810,"src":"2716:606:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8466,"nodeType":"Block","src":"3513:135:38","statements":[{"assignments":[8447],"declarations":[{"constant":false,"id":8447,"mutability":"mutable","name":"pos","nameLocation":"3531:3:38","nodeType":"VariableDeclaration","scope":8466,"src":"3523:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8451,"initialValue":{"expression":{"expression":{"id":8448,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"3537:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3542:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3537:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:38","memberName":"length","nodeType":"MemberAccess","src":"3537:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3523:38:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8452,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"3578:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3578:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8457,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"3607:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3612:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3607:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8459,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"3626:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3632:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3626:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8456,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"3593:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3635:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"3593:48:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3578:63:38","trueExpression":{"hexValue":"30","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3589:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8445,"id":8465,"nodeType":"Return","src":"3571:70:38"}]},"documentation":{"id":8438,"nodeType":"StructuredDocumentation","src":"3328:109:38","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8467,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3451:6:38","nodeType":"FunctionDefinition","parameters":{"id":8442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8441,"mutability":"mutable","name":"self","nameLocation":"3475:4:38","nodeType":"VariableDeclaration","scope":8467,"src":"3458:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8440,"nodeType":"UserDefinedTypeName","pathNode":{"id":8439,"name":"Trace224","nameLocations":["3458:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"3458:8:38"},"referencedDeclaration":8242,"src":"3458:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3457:23:38"},"returnParameters":{"id":8445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8467,"src":"3504:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8443,"name":"uint224","nodeType":"ElementaryTypeName","src":"3504:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3503:9:38"},"scope":9810,"src":"3442:206:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8515,"nodeType":"Block","src":"3941:275:38","statements":[{"assignments":[8481],"declarations":[{"constant":false,"id":8481,"mutability":"mutable","name":"pos","nameLocation":"3959:3:38","nodeType":"VariableDeclaration","scope":8515,"src":"3951:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3951:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8485,"initialValue":{"expression":{"expression":{"id":8482,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"3965:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"3965:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:38","memberName":"length","nodeType":"MemberAccess","src":"3965:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3951:38:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8486,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"4003:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4003:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8513,"nodeType":"Block","src":"4064:146:38","statements":[{"assignments":[8497],"declarations":[{"constant":false,"id":8497,"mutability":"mutable","name":"ckpt","nameLocation":"4100:4:38","nodeType":"VariableDeclaration","scope":8513,"src":"4078:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8496,"nodeType":"UserDefinedTypeName","pathNode":{"id":8495,"name":"Checkpoint224","nameLocations":["4078:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"4078:13:38"},"referencedDeclaration":8247,"src":"4078:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8505,"initialValue":{"arguments":[{"expression":{"id":8499,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"4121:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"4121:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8501,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"4140:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4146:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4140:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8498,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"4107:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4078:70:38"},{"expression":{"components":[{"hexValue":"74727565","id":8506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4170:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8507,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"4176:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"4176:9:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8509,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"4187:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"4187:11:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4169:30:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":8479,"id":8512,"nodeType":"Return","src":"4162:37:38"}]},"id":8514,"nodeType":"IfStatement","src":"3999:211:38","trueBody":{"id":8494,"nodeType":"Block","src":"4013:45:38","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4035:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8479,"id":8493,"nodeType":"Return","src":"4027:20:38"}]}}]},"documentation":{"id":8468,"nodeType":"StructuredDocumentation","src":"3654:168:38","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8516,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3836:16:38","nodeType":"FunctionDefinition","parameters":{"id":8472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8471,"mutability":"mutable","name":"self","nameLocation":"3870:4:38","nodeType":"VariableDeclaration","scope":8516,"src":"3853:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8470,"nodeType":"UserDefinedTypeName","pathNode":{"id":8469,"name":"Trace224","nameLocations":["3853:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"3853:8:38"},"referencedDeclaration":8242,"src":"3853:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3852:23:38"},"returnParameters":{"id":8479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8474,"mutability":"mutable","name":"exists","nameLocation":"3904:6:38","nodeType":"VariableDeclaration","scope":8516,"src":"3899:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8473,"name":"bool","nodeType":"ElementaryTypeName","src":"3899:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8476,"mutability":"mutable","name":"_key","nameLocation":"3919:4:38","nodeType":"VariableDeclaration","scope":8516,"src":"3912:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8475,"name":"uint32","nodeType":"ElementaryTypeName","src":"3912:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8478,"mutability":"mutable","name":"_value","nameLocation":"3933:6:38","nodeType":"VariableDeclaration","scope":8516,"src":"3925:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8477,"name":"uint224","nodeType":"ElementaryTypeName","src":"3925:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3898:42:38"},"scope":9810,"src":"3827:389:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8529,"nodeType":"Block","src":"4355:48:38","statements":[{"expression":{"expression":{"expression":{"id":8525,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"4372:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4377:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"4372:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:6:38","memberName":"length","nodeType":"MemberAccess","src":"4372:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8524,"id":8528,"nodeType":"Return","src":"4365:31:38"}]},"documentation":{"id":8517,"nodeType":"StructuredDocumentation","src":"4222:57:38","text":" @dev Returns the number of checkpoint."},"id":8530,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4293:6:38","nodeType":"FunctionDefinition","parameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"self","nameLocation":"4317:4:38","nodeType":"VariableDeclaration","scope":8530,"src":"4300:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8519,"nodeType":"UserDefinedTypeName","pathNode":{"id":8518,"name":"Trace224","nameLocations":["4300:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"4300:8:38"},"referencedDeclaration":8242,"src":"4300:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4299:23:38"},"returnParameters":{"id":8524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8530,"src":"4346:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4345:9:38"},"scope":9810,"src":"4284:119:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8547,"nodeType":"Block","src":"4567:46:38","statements":[{"expression":{"baseExpression":{"expression":{"id":8542,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"4584:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8241,"src":"4584:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8545,"indexExpression":{"id":8544,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8536,"src":"4602:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4584:22:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":8541,"id":8546,"nodeType":"Return","src":"4577:29:38"}]},"documentation":{"id":8531,"nodeType":"StructuredDocumentation","src":"4409:61:38","text":" @dev Returns checkpoint at given position."},"id":8548,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4484:2:38","nodeType":"FunctionDefinition","parameters":{"id":8537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"mutability":"mutable","name":"self","nameLocation":"4504:4:38","nodeType":"VariableDeclaration","scope":8548,"src":"4487:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8533,"nodeType":"UserDefinedTypeName","pathNode":{"id":8532,"name":"Trace224","nameLocations":["4487:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8242,"src":"4487:8:38"},"referencedDeclaration":8242,"src":"4487:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8242_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8536,"mutability":"mutable","name":"pos","nameLocation":"4517:3:38","nodeType":"VariableDeclaration","scope":8548,"src":"4510:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8535,"name":"uint32","nodeType":"ElementaryTypeName","src":"4510:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4486:35:38"},"returnParameters":{"id":8541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8548,"src":"4545:20:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8539,"nodeType":"UserDefinedTypeName","pathNode":{"id":8538,"name":"Checkpoint224","nameLocations":["4545:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"4545:13:38"},"referencedDeclaration":8247,"src":"4545:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4544:22:38"},"scope":9810,"src":"4475:138:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8641,"nodeType":"Block","src":"4946:765:38","statements":[{"assignments":[8565],"declarations":[{"constant":false,"id":8565,"mutability":"mutable","name":"pos","nameLocation":"4964:3:38","nodeType":"VariableDeclaration","scope":8641,"src":"4956:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8568,"initialValue":{"expression":{"id":8566,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"4970:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4975:6:38","memberName":"length","nodeType":"MemberAccess","src":"4970:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4956:25:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8569,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"4996:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4996:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8639,"nodeType":"Block","src":"5597:108:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":8630,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"5642:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"5655:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8629,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"5621:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5636:4:38","5647:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5621:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$8247_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8626,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"5611:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5616:4:38","memberName":"push","nodeType":"MemberAccess","src":"5611:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$8247_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5611:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8634,"nodeType":"ExpressionStatement","src":"5611:52:38"},{"expression":{"components":[{"hexValue":"30","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5685:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"5688:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5684:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":8563,"id":8638,"nodeType":"Return","src":"5677:17:38"}]},"id":8640,"nodeType":"IfStatement","src":"4992:713:38","trueBody":{"id":8625,"nodeType":"Block","src":"5005:586:38","statements":[{"assignments":[8574],"declarations":[{"constant":false,"id":8574,"mutability":"mutable","name":"last","nameLocation":"5041:4:38","nodeType":"VariableDeclaration","scope":8625,"src":"5019:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8573,"nodeType":"UserDefinedTypeName","pathNode":{"id":8572,"name":"Checkpoint224","nameLocations":["5019:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"5019:13:38"},"referencedDeclaration":8247,"src":"5019:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8581,"initialValue":{"arguments":[{"id":8576,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"5062:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8577,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"5068:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5068:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8575,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"5048:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5019:57:38"},{"assignments":[8583],"declarations":[{"constant":false,"id":8583,"mutability":"mutable","name":"lastKey","nameLocation":"5097:7:38","nodeType":"VariableDeclaration","scope":8625,"src":"5090:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8582,"name":"uint32","nodeType":"ElementaryTypeName","src":"5090:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8586,"initialValue":{"expression":{"id":8584,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"5107:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5112:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"5107:9:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5090:26:38"},{"assignments":[8588],"declarations":[{"constant":false,"id":8588,"mutability":"mutable","name":"lastValue","nameLocation":"5138:9:38","nodeType":"VariableDeclaration","scope":8625,"src":"5130:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8587,"name":"uint224","nodeType":"ElementaryTypeName","src":"5130:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":8591,"initialValue":{"expression":{"id":8589,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"5150:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"5150:11:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"5130:31:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8592,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"5235:7:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8593,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"5245:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5235:13:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8599,"nodeType":"IfStatement","src":"5231:89:38","trueBody":{"id":8598,"nodeType":"Block","src":"5250:70:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8595,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"5275:28:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:30:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8597,"nodeType":"RevertStatement","src":"5268:37:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8600,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"5383:7:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8601,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"5394:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5383:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8619,"nodeType":"Block","src":"5457:85:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":8614,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"5506:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"5519:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8613,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"5485:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5500:4:38","5511:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5485:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$8247_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8610,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"5475:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:4:38","memberName":"push","nodeType":"MemberAccess","src":"5475:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$8247_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8618,"nodeType":"ExpressionStatement","src":"5475:52:38"}]},"id":8620,"nodeType":"IfStatement","src":"5379:163:38","trueBody":{"id":8609,"nodeType":"Block","src":"5399:52:38","statements":[{"expression":{"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8603,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"5417:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5422:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8246,"src":"5417:11:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"5431:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5417:19:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8608,"nodeType":"ExpressionStatement","src":"5417:19:38"}]}},{"expression":{"components":[{"id":8621,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"5563:9:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":8622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"5574:5:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5562:18:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":8563,"id":8624,"nodeType":"Return","src":"5555:25:38"}]}}]},"documentation":{"id":8549,"nodeType":"StructuredDocumentation","src":"4619:165:38","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8642,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4798:7:38","nodeType":"FunctionDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"mutability":"mutable","name":"self","nameLocation":"4839:4:38","nodeType":"VariableDeclaration","scope":8642,"src":"4815:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8551,"nodeType":"UserDefinedTypeName","pathNode":{"id":8550,"name":"Checkpoint224","nameLocations":["4815:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"4815:13:38"},"referencedDeclaration":8247,"src":"4815:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8552,"nodeType":"ArrayTypeName","src":"4815:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8555,"mutability":"mutable","name":"key","nameLocation":"4860:3:38","nodeType":"VariableDeclaration","scope":8642,"src":"4853:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8554,"name":"uint32","nodeType":"ElementaryTypeName","src":"4853:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8557,"mutability":"mutable","name":"value","nameLocation":"4881:5:38","nodeType":"VariableDeclaration","scope":8642,"src":"4873:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8556,"name":"uint224","nodeType":"ElementaryTypeName","src":"4873:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4805:87:38"},"returnParameters":{"id":8563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8560,"mutability":"mutable","name":"oldValue","nameLocation":"4918:8:38","nodeType":"VariableDeclaration","scope":8642,"src":"4910:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8559,"name":"uint224","nodeType":"ElementaryTypeName","src":"4910:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":8562,"mutability":"mutable","name":"newValue","nameLocation":"4936:8:38","nodeType":"VariableDeclaration","scope":8642,"src":"4928:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8561,"name":"uint224","nodeType":"ElementaryTypeName","src":"4928:7:38","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4909:36:38"},"scope":9810,"src":"4789:922:38","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8693,"nodeType":"Block","src":"6227:267:38","statements":[{"body":{"id":8689,"nodeType":"Block","src":"6256:211:38","statements":[{"assignments":[8662],"declarations":[{"constant":false,"id":8662,"mutability":"mutable","name":"mid","nameLocation":"6278:3:38","nodeType":"VariableDeclaration","scope":8689,"src":"6270:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8668,"initialValue":{"arguments":[{"id":8665,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"6297:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8666,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"6302:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8663,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"6284:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6289:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"6284:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6270:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8670,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"6339:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8671,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"6345:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8669,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"6325:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6350:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"6325:29:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8674,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"6357:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6325:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8687,"nodeType":"Block","src":"6411:46:38","statements":[{"expression":{"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8681,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"6429:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8682,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"6435:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6441:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6435:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6429:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8686,"nodeType":"ExpressionStatement","src":"6429:13:38"}]},"id":8688,"nodeType":"IfStatement","src":"6321:136:38","trueBody":{"id":8680,"nodeType":"Block","src":"6362:43:38","statements":[{"expression":{"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8676,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"6380:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8677,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"6387:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8679,"nodeType":"ExpressionStatement","src":"6380:10:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8658,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"6244:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8659,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"6250:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8690,"nodeType":"WhileStatement","src":"6237:230:38"},{"expression":{"id":8691,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"6483:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8657,"id":8692,"nodeType":"Return","src":"6476:11:38"}]},"documentation":{"id":8643,"nodeType":"StructuredDocumentation","src":"5717:339:38","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8694,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6070:18:38","nodeType":"FunctionDefinition","parameters":{"id":8654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8647,"mutability":"mutable","name":"self","nameLocation":"6122:4:38","nodeType":"VariableDeclaration","scope":8694,"src":"6098:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8645,"nodeType":"UserDefinedTypeName","pathNode":{"id":8644,"name":"Checkpoint224","nameLocations":["6098:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"6098:13:38"},"referencedDeclaration":8247,"src":"6098:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8646,"nodeType":"ArrayTypeName","src":"6098:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8649,"mutability":"mutable","name":"key","nameLocation":"6143:3:38","nodeType":"VariableDeclaration","scope":8694,"src":"6136:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8648,"name":"uint32","nodeType":"ElementaryTypeName","src":"6136:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8651,"mutability":"mutable","name":"low","nameLocation":"6164:3:38","nodeType":"VariableDeclaration","scope":8694,"src":"6156:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8653,"mutability":"mutable","name":"high","nameLocation":"6185:4:38","nodeType":"VariableDeclaration","scope":8694,"src":"6177:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6088:107:38"},"returnParameters":{"id":8657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8694,"src":"6218:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8655,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:9:38"},"scope":9810,"src":"6061:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8745,"nodeType":"Block","src":"7011:267:38","statements":[{"body":{"id":8741,"nodeType":"Block","src":"7040:211:38","statements":[{"assignments":[8714],"declarations":[{"constant":false,"id":8714,"mutability":"mutable","name":"mid","nameLocation":"7062:3:38","nodeType":"VariableDeclaration","scope":8741,"src":"7054:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8720,"initialValue":{"arguments":[{"id":8717,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"7081:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8718,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"7086:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8715,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"7068:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7073:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"7068:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7054:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8722,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"7123:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8723,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"7129:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8721,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":8761,"src":"7109:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8247_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7134:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"7109:29:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8726,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"7141:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7109:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8739,"nodeType":"Block","src":"7198:43:38","statements":[{"expression":{"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8735,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"7216:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8736,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"7223:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8738,"nodeType":"ExpressionStatement","src":"7216:10:38"}]},"id":8740,"nodeType":"IfStatement","src":"7105:136:38","trueBody":{"id":8734,"nodeType":"Block","src":"7146:46:38","statements":[{"expression":{"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8728,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"7164:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8729,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"7170:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7176:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7170:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8733,"nodeType":"ExpressionStatement","src":"7164:13:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8710,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"7028:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8711,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"7034:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7028:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8742,"nodeType":"WhileStatement","src":"7021:230:38"},{"expression":{"id":8743,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"7267:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8709,"id":8744,"nodeType":"Return","src":"7260:11:38"}]},"documentation":{"id":8695,"nodeType":"StructuredDocumentation","src":"6500:340:38","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8746,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6854:18:38","nodeType":"FunctionDefinition","parameters":{"id":8706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8699,"mutability":"mutable","name":"self","nameLocation":"6906:4:38","nodeType":"VariableDeclaration","scope":8746,"src":"6882:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8697,"nodeType":"UserDefinedTypeName","pathNode":{"id":8696,"name":"Checkpoint224","nameLocations":["6882:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"6882:13:38"},"referencedDeclaration":8247,"src":"6882:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8698,"nodeType":"ArrayTypeName","src":"6882:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8701,"mutability":"mutable","name":"key","nameLocation":"6927:3:38","nodeType":"VariableDeclaration","scope":8746,"src":"6920:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8700,"name":"uint32","nodeType":"ElementaryTypeName","src":"6920:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8703,"mutability":"mutable","name":"low","nameLocation":"6948:3:38","nodeType":"VariableDeclaration","scope":8746,"src":"6940:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8702,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8705,"mutability":"mutable","name":"high","nameLocation":"6969:4:38","nodeType":"VariableDeclaration","scope":8746,"src":"6961:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6872:107:38"},"returnParameters":{"id":8709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8746,"src":"7002:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8707,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:9:38"},"scope":9810,"src":"6845:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8760,"nodeType":"Block","src":"7561:125:38","statements":[{"AST":{"nodeType":"YulBlock","src":"7580:100:38","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:38","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7604:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7594:6:38"},"nodeType":"YulFunctionCall","src":"7594:20:38"},"nodeType":"YulExpressionStatement","src":"7594:20:38"},{"nodeType":"YulAssignment","src":"7627:43:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7656:1:38","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7659:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7646:9:38"},"nodeType":"YulFunctionCall","src":"7646:18:38"},{"name":"pos","nodeType":"YulIdentifier","src":"7666:3:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7642:3:38"},"nodeType":"YulFunctionCall","src":"7642:28:38"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7627:11:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8753,"isOffset":false,"isSlot":false,"src":"7666:3:38","valueSize":1},{"declaration":8757,"isOffset":false,"isSlot":true,"src":"7627:11:38","suffix":"slot","valueSize":1},{"declaration":8751,"isOffset":false,"isSlot":true,"src":"7604:9:38","suffix":"slot","valueSize":1}],"id":8759,"nodeType":"InlineAssembly","src":"7571:109:38"}]},"documentation":{"id":8747,"nodeType":"StructuredDocumentation","src":"7284:132:38","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8761,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7430:13:38","nodeType":"FunctionDefinition","parameters":{"id":8754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8751,"mutability":"mutable","name":"self","nameLocation":"7477:4:38","nodeType":"VariableDeclaration","scope":8761,"src":"7453:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8749,"nodeType":"UserDefinedTypeName","pathNode":{"id":8748,"name":"Checkpoint224","nameLocations":["7453:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"7453:13:38"},"referencedDeclaration":8247,"src":"7453:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8750,"nodeType":"ArrayTypeName","src":"7453:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8247_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8753,"mutability":"mutable","name":"pos","nameLocation":"7499:3:38","nodeType":"VariableDeclaration","scope":8761,"src":"7491:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8752,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7443:65:38"},"returnParameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8757,"mutability":"mutable","name":"result","nameLocation":"7553:6:38","nodeType":"VariableDeclaration","scope":8761,"src":"7531:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8756,"nodeType":"UserDefinedTypeName","pathNode":{"id":8755,"name":"Checkpoint224","nameLocations":["7531:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"7531:13:38"},"referencedDeclaration":8247,"src":"7531:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8247_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7530:30:38"},"scope":9810,"src":"7421:265:38","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":8766,"members":[{"constant":false,"id":8765,"mutability":"mutable","name":"_checkpoints","nameLocation":"7734:12:38","nodeType":"VariableDeclaration","scope":8766,"src":"7718:28:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8763,"nodeType":"UserDefinedTypeName","pathNode":{"id":8762,"name":"Checkpoint208","nameLocations":["7718:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"7718:13:38"},"referencedDeclaration":8771,"src":"7718:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8764,"nodeType":"ArrayTypeName","src":"7718:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7699:8:38","nodeType":"StructDefinition","scope":9810,"src":"7692:61:38","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":8771,"members":[{"constant":false,"id":8768,"mutability":"mutable","name":"_key","nameLocation":"7797:4:38","nodeType":"VariableDeclaration","scope":8771,"src":"7790:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8767,"name":"uint48","nodeType":"ElementaryTypeName","src":"7790:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8770,"mutability":"mutable","name":"_value","nameLocation":"7819:6:38","nodeType":"VariableDeclaration","scope":8771,"src":"7811:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8769,"name":"uint208","nodeType":"ElementaryTypeName","src":"7811:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7766:13:38","nodeType":"StructDefinition","scope":9810,"src":"7759:73:38","visibility":"public"},{"body":{"id":8793,"nodeType":"Block","src":"8293:62:38","statements":[{"expression":{"arguments":[{"expression":{"id":8787,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8775,"src":"8318:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8323:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"8318:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8789,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"8337:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"8342:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8786,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8642,9166,9690],"referencedDeclaration":9166,"src":"8310:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8310:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8785,"id":8792,"nodeType":"Return","src":"8303:45:38"}]},"documentation":{"id":8772,"nodeType":"StructuredDocumentation","src":"7838:302:38","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":8794,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8154:4:38","nodeType":"FunctionDefinition","parameters":{"id":8780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8775,"mutability":"mutable","name":"self","nameLocation":"8185:4:38","nodeType":"VariableDeclaration","scope":8794,"src":"8168:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8774,"nodeType":"UserDefinedTypeName","pathNode":{"id":8773,"name":"Trace208","nameLocations":["8168:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"8168:8:38"},"referencedDeclaration":8766,"src":"8168:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8777,"mutability":"mutable","name":"key","nameLocation":"8206:3:38","nodeType":"VariableDeclaration","scope":8794,"src":"8199:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8776,"name":"uint48","nodeType":"ElementaryTypeName","src":"8199:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8779,"mutability":"mutable","name":"value","nameLocation":"8227:5:38","nodeType":"VariableDeclaration","scope":8794,"src":"8219:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8778,"name":"uint208","nodeType":"ElementaryTypeName","src":"8219:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8158:80:38"},"returnParameters":{"id":8785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8782,"mutability":"mutable","name":"oldValue","nameLocation":"8265:8:38","nodeType":"VariableDeclaration","scope":8794,"src":"8257:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8781,"name":"uint208","nodeType":"ElementaryTypeName","src":"8257:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8784,"mutability":"mutable","name":"newValue","nameLocation":"8283:8:38","nodeType":"VariableDeclaration","scope":8794,"src":"8275:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8783,"name":"uint208","nodeType":"ElementaryTypeName","src":"8275:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8256:36:38"},"scope":9810,"src":"8145:210:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8833,"nodeType":"Block","src":"8608:207:38","statements":[{"assignments":[8806],"declarations":[{"constant":false,"id":8806,"mutability":"mutable","name":"len","nameLocation":"8626:3:38","nodeType":"VariableDeclaration","scope":8833,"src":"8618:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8805,"name":"uint256","nodeType":"ElementaryTypeName","src":"8618:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8810,"initialValue":{"expression":{"expression":{"id":8807,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"8632:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8637:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"8632:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:38","memberName":"length","nodeType":"MemberAccess","src":"8632:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8618:38:38"},{"assignments":[8812],"declarations":[{"constant":false,"id":8812,"mutability":"mutable","name":"pos","nameLocation":"8674:3:38","nodeType":"VariableDeclaration","scope":8833,"src":"8666:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8811,"name":"uint256","nodeType":"ElementaryTypeName","src":"8666:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8820,"initialValue":{"arguments":[{"expression":{"id":8814,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"8699:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8704:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"8699:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8816,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8800,"src":"8718:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8818,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"8726:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8813,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8746,9270,9794],"referencedDeclaration":9270,"src":"8680:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8680:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8666:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8821,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"8747:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8822,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"8754:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8826,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"8778:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8783:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"8778:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8828,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"8797:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8825,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"8764:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8764:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8802:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"8764:44:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8747:61:38","trueExpression":{"hexValue":"30","id":8824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8760:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8804,"id":8832,"nodeType":"Return","src":"8740:68:38"}]},"documentation":{"id":8795,"nodeType":"StructuredDocumentation","src":"8361:154:38","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8834,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8529:11:38","nodeType":"FunctionDefinition","parameters":{"id":8801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"self","nameLocation":"8558:4:38","nodeType":"VariableDeclaration","scope":8834,"src":"8541:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8797,"nodeType":"UserDefinedTypeName","pathNode":{"id":8796,"name":"Trace208","nameLocations":["8541:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"8541:8:38"},"referencedDeclaration":8766,"src":"8541:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8800,"mutability":"mutable","name":"key","nameLocation":"8571:3:38","nodeType":"VariableDeclaration","scope":8834,"src":"8564:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8799,"name":"uint48","nodeType":"ElementaryTypeName","src":"8564:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8540:35:38"},"returnParameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8834,"src":"8599:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8802,"name":"uint208","nodeType":"ElementaryTypeName","src":"8599:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8598:9:38"},"scope":9810,"src":"8520:295:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8875,"nodeType":"Block","src":"9070:209:38","statements":[{"assignments":[8846],"declarations":[{"constant":false,"id":8846,"mutability":"mutable","name":"len","nameLocation":"9088:3:38","nodeType":"VariableDeclaration","scope":8875,"src":"9080:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8850,"initialValue":{"expression":{"expression":{"id":8847,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"9094:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"9094:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9112:6:38","memberName":"length","nodeType":"MemberAccess","src":"9094:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9080:38:38"},{"assignments":[8852],"declarations":[{"constant":false,"id":8852,"mutability":"mutable","name":"pos","nameLocation":"9136:3:38","nodeType":"VariableDeclaration","scope":8875,"src":"9128:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8851,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8860,"initialValue":{"arguments":[{"expression":{"id":8854,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"9161:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9166:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"9161:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8856,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"9180:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8858,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"9188:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8853,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":9218,"src":"9142:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9142:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9128:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8861,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"9209:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9209:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8866,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"9238:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9243:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"9238:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8868,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"9257:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9263:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9257:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8865,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"9224:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9224:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9266:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"9224:48:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9209:63:38","trueExpression":{"hexValue":"30","id":8864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9220:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8844,"id":8874,"nodeType":"Return","src":"9202:70:38"}]},"documentation":{"id":8835,"nodeType":"StructuredDocumentation","src":"8821:156:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8876,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8991:11:38","nodeType":"FunctionDefinition","parameters":{"id":8841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8838,"mutability":"mutable","name":"self","nameLocation":"9020:4:38","nodeType":"VariableDeclaration","scope":8876,"src":"9003:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8837,"nodeType":"UserDefinedTypeName","pathNode":{"id":8836,"name":"Trace208","nameLocations":["9003:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"9003:8:38"},"referencedDeclaration":8766,"src":"9003:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8840,"mutability":"mutable","name":"key","nameLocation":"9033:3:38","nodeType":"VariableDeclaration","scope":8876,"src":"9026:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8839,"name":"uint48","nodeType":"ElementaryTypeName","src":"9026:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9002:35:38"},"returnParameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8876,"src":"9061:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8842,"name":"uint208","nodeType":"ElementaryTypeName","src":"9061:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9060:9:38"},"scope":9810,"src":"8982:297:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8960,"nodeType":"Block","src":"9678:512:38","statements":[{"assignments":[8888],"declarations":[{"constant":false,"id":8888,"mutability":"mutable","name":"len","nameLocation":"9696:3:38","nodeType":"VariableDeclaration","scope":8960,"src":"9688:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9688:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8892,"initialValue":{"expression":{"expression":{"id":8889,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8880,"src":"9702:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9707:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"9702:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:38","memberName":"length","nodeType":"MemberAccess","src":"9702:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9688:38:38"},{"assignments":[8894],"declarations":[{"constant":false,"id":8894,"mutability":"mutable","name":"low","nameLocation":"9745:3:38","nodeType":"VariableDeclaration","scope":8960,"src":"9737:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8893,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8896,"initialValue":{"hexValue":"30","id":8895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9751:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9737:15:38"},{"assignments":[8898],"declarations":[{"constant":false,"id":8898,"mutability":"mutable","name":"high","nameLocation":"9770:4:38","nodeType":"VariableDeclaration","scope":8960,"src":"9762:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8897,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8900,"initialValue":{"id":8899,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"9777:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:18:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8901,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"9795:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9801:1:38","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9795:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8935,"nodeType":"IfStatement","src":"9791:234:38","trueBody":{"id":8934,"nodeType":"Block","src":"9804:221:38","statements":[{"assignments":[8905],"declarations":[{"constant":false,"id":8905,"mutability":"mutable","name":"mid","nameLocation":"9826:3:38","nodeType":"VariableDeclaration","scope":8934,"src":"9818:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"9818:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8912,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8906,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"9832:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8909,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"9848:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8907,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"9838:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9843:4:38","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5699,"src":"9838:9:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:14:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9832:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9818:34:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8913,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"9870:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8915,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8880,"src":"9890:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9895:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"9890:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8917,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"9909:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8914,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"9876:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9914:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8768,"src":"9876:42:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9870:48:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8932,"nodeType":"Block","src":"9969:46:38","statements":[{"expression":{"id":8930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8926,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8894,"src":"9987:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8927,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"9993:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9999:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9993:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8931,"nodeType":"ExpressionStatement","src":"9987:13:38"}]},"id":8933,"nodeType":"IfStatement","src":"9866:149:38","trueBody":{"id":8925,"nodeType":"Block","src":"9920:43:38","statements":[{"expression":{"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8921,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"9938:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8922,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"9945:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9938:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8924,"nodeType":"ExpressionStatement","src":"9938:10:38"}]}}]}},{"assignments":[8937],"declarations":[{"constant":false,"id":8937,"mutability":"mutable","name":"pos","nameLocation":"10043:3:38","nodeType":"VariableDeclaration","scope":8960,"src":"10035:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10035:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8945,"initialValue":{"arguments":[{"expression":{"id":8939,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8880,"src":"10068:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10073:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10068:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8941,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"10087:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8942,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8894,"src":"10092:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8943,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"10097:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8938,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":9218,"src":"10049:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10049:53:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10035:67:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8946,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"10120:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10127:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10120:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8951,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8880,"src":"10149:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10154:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10149:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8953,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"10168:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10174:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10168:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8950,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"10135:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10135:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10177:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"10135:48:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10120:63:38","trueExpression":{"hexValue":"30","id":8949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10131:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8886,"id":8959,"nodeType":"Return","src":"10113:70:38"}]},"documentation":{"id":8877,"nodeType":"StructuredDocumentation","src":"9285:294:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8961,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9593:17:38","nodeType":"FunctionDefinition","parameters":{"id":8883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8880,"mutability":"mutable","name":"self","nameLocation":"9628:4:38","nodeType":"VariableDeclaration","scope":8961,"src":"9611:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8879,"nodeType":"UserDefinedTypeName","pathNode":{"id":8878,"name":"Trace208","nameLocations":["9611:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"9611:8:38"},"referencedDeclaration":8766,"src":"9611:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8882,"mutability":"mutable","name":"key","nameLocation":"9641:3:38","nodeType":"VariableDeclaration","scope":8961,"src":"9634:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8881,"name":"uint48","nodeType":"ElementaryTypeName","src":"9634:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9610:35:38"},"returnParameters":{"id":8886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8961,"src":"9669:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8884,"name":"uint208","nodeType":"ElementaryTypeName","src":"9669:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9668:9:38"},"scope":9810,"src":"9584:606:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8990,"nodeType":"Block","src":"10381:135:38","statements":[{"assignments":[8971],"declarations":[{"constant":false,"id":8971,"mutability":"mutable","name":"pos","nameLocation":"10399:3:38","nodeType":"VariableDeclaration","scope":8990,"src":"10391:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8970,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8975,"initialValue":{"expression":{"expression":{"id":8972,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"10405:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10410:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10405:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:6:38","memberName":"length","nodeType":"MemberAccess","src":"10405:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10391:38:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8976,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8971,"src":"10446:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10453:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10446:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8981,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"10475:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10480:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10475:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8983,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8971,"src":"10494:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10500:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10494:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8980,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"10461:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10503:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"10461:48:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10446:63:38","trueExpression":{"hexValue":"30","id":8979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8969,"id":8989,"nodeType":"Return","src":"10439:70:38"}]},"documentation":{"id":8962,"nodeType":"StructuredDocumentation","src":"10196:109:38","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8991,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10319:6:38","nodeType":"FunctionDefinition","parameters":{"id":8966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8965,"mutability":"mutable","name":"self","nameLocation":"10343:4:38","nodeType":"VariableDeclaration","scope":8991,"src":"10326:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8964,"nodeType":"UserDefinedTypeName","pathNode":{"id":8963,"name":"Trace208","nameLocations":["10326:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"10326:8:38"},"referencedDeclaration":8766,"src":"10326:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10325:23:38"},"returnParameters":{"id":8969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8991,"src":"10372:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8967,"name":"uint208","nodeType":"ElementaryTypeName","src":"10372:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10371:9:38"},"scope":9810,"src":"10310:206:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9039,"nodeType":"Block","src":"10809:275:38","statements":[{"assignments":[9005],"declarations":[{"constant":false,"id":9005,"mutability":"mutable","name":"pos","nameLocation":"10827:3:38","nodeType":"VariableDeclaration","scope":9039,"src":"10819:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9004,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9009,"initialValue":{"expression":{"expression":{"id":9006,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8995,"src":"10833:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":9007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10838:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10833:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10851:6:38","memberName":"length","nodeType":"MemberAccess","src":"10833:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10819:38:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9010,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"10871:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10878:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10871:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9037,"nodeType":"Block","src":"10932:146:38","statements":[{"assignments":[9021],"declarations":[{"constant":false,"id":9021,"mutability":"mutable","name":"ckpt","nameLocation":"10968:4:38","nodeType":"VariableDeclaration","scope":9037,"src":"10946:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9020,"nodeType":"UserDefinedTypeName","pathNode":{"id":9019,"name":"Checkpoint208","nameLocations":["10946:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"10946:13:38"},"referencedDeclaration":8771,"src":"10946:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":9029,"initialValue":{"arguments":[{"expression":{"id":9023,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8995,"src":"10989:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":9024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10994:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"10989:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9025,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"11008:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11014:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11008:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9022,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"10975:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10975:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10946:70:38"},{"expression":{"components":[{"hexValue":"74727565","id":9030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11038:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":9031,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"11044:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8768,"src":"11044:9:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":9033,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"11055:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11060:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"11055:11:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":9035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11037:30:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":9003,"id":9036,"nodeType":"Return","src":"11030:37:38"}]},"id":9038,"nodeType":"IfStatement","src":"10867:211:38","trueBody":{"id":9018,"nodeType":"Block","src":"10881:45:38","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":9013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10903:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":9014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10910:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10913:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10902:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":9003,"id":9017,"nodeType":"Return","src":"10895:20:38"}]}}]},"documentation":{"id":8992,"nodeType":"StructuredDocumentation","src":"10522:168:38","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":9040,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10704:16:38","nodeType":"FunctionDefinition","parameters":{"id":8996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8995,"mutability":"mutable","name":"self","nameLocation":"10738:4:38","nodeType":"VariableDeclaration","scope":9040,"src":"10721:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8994,"nodeType":"UserDefinedTypeName","pathNode":{"id":8993,"name":"Trace208","nameLocations":["10721:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"10721:8:38"},"referencedDeclaration":8766,"src":"10721:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10720:23:38"},"returnParameters":{"id":9003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8998,"mutability":"mutable","name":"exists","nameLocation":"10772:6:38","nodeType":"VariableDeclaration","scope":9040,"src":"10767:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8997,"name":"bool","nodeType":"ElementaryTypeName","src":"10767:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9000,"mutability":"mutable","name":"_key","nameLocation":"10787:4:38","nodeType":"VariableDeclaration","scope":9040,"src":"10780:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8999,"name":"uint48","nodeType":"ElementaryTypeName","src":"10780:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9002,"mutability":"mutable","name":"_value","nameLocation":"10801:6:38","nodeType":"VariableDeclaration","scope":9040,"src":"10793:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9001,"name":"uint208","nodeType":"ElementaryTypeName","src":"10793:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10766:42:38"},"scope":9810,"src":"10695:389:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9053,"nodeType":"Block","src":"11223:48:38","statements":[{"expression":{"expression":{"expression":{"id":9049,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11240:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":9050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"11240:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11258:6:38","memberName":"length","nodeType":"MemberAccess","src":"11240:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9048,"id":9052,"nodeType":"Return","src":"11233:31:38"}]},"documentation":{"id":9041,"nodeType":"StructuredDocumentation","src":"11090:57:38","text":" @dev Returns the number of checkpoint."},"id":9054,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11161:6:38","nodeType":"FunctionDefinition","parameters":{"id":9045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9044,"mutability":"mutable","name":"self","nameLocation":"11185:4:38","nodeType":"VariableDeclaration","scope":9054,"src":"11168:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":9043,"nodeType":"UserDefinedTypeName","pathNode":{"id":9042,"name":"Trace208","nameLocations":["11168:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"11168:8:38"},"referencedDeclaration":8766,"src":"11168:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11167:23:38"},"returnParameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9054,"src":"11214:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11214:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11213:9:38"},"scope":9810,"src":"11152:119:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9071,"nodeType":"Block","src":"11435:46:38","statements":[{"expression":{"baseExpression":{"expression":{"id":9066,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"11452:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":9067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11457:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8765,"src":"11452:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":9069,"indexExpression":{"id":9068,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"11470:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11452:22:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":9065,"id":9070,"nodeType":"Return","src":"11445:29:38"}]},"documentation":{"id":9055,"nodeType":"StructuredDocumentation","src":"11277:61:38","text":" @dev Returns checkpoint at given position."},"id":9072,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11352:2:38","nodeType":"FunctionDefinition","parameters":{"id":9061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"self","nameLocation":"11372:4:38","nodeType":"VariableDeclaration","scope":9072,"src":"11355:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":9057,"nodeType":"UserDefinedTypeName","pathNode":{"id":9056,"name":"Trace208","nameLocations":["11355:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":8766,"src":"11355:8:38"},"referencedDeclaration":8766,"src":"11355:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8766_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"pos","nameLocation":"11385:3:38","nodeType":"VariableDeclaration","scope":9072,"src":"11378:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9059,"name":"uint32","nodeType":"ElementaryTypeName","src":"11378:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11354:35:38"},"returnParameters":{"id":9065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9072,"src":"11413:20:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9063,"nodeType":"UserDefinedTypeName","pathNode":{"id":9062,"name":"Checkpoint208","nameLocations":["11413:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"11413:13:38"},"referencedDeclaration":8771,"src":"11413:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11412:22:38"},"scope":9810,"src":"11343:138:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9165,"nodeType":"Block","src":"11814:765:38","statements":[{"assignments":[9089],"declarations":[{"constant":false,"id":9089,"mutability":"mutable","name":"pos","nameLocation":"11832:3:38","nodeType":"VariableDeclaration","scope":9165,"src":"11824:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11824:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9092,"initialValue":{"expression":{"id":9090,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"11838:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:6:38","memberName":"length","nodeType":"MemberAccess","src":"11838:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11824:25:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9093,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"11864:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11870:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11864:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9163,"nodeType":"Block","src":"12465:108:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":9154,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"12510:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":9155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"12523:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":9153,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"12489:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12504:4:38","12515:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12489:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":9150,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"12479:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:4:38","memberName":"push","nodeType":"MemberAccess","src":"12479:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8771_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9158,"nodeType":"ExpressionStatement","src":"12479:52:38"},{"expression":{"components":[{"hexValue":"30","id":9159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"12556:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":9161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12552:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":9087,"id":9162,"nodeType":"Return","src":"12545:17:38"}]},"id":9164,"nodeType":"IfStatement","src":"11860:713:38","trueBody":{"id":9149,"nodeType":"Block","src":"11873:586:38","statements":[{"assignments":[9098],"declarations":[{"constant":false,"id":9098,"mutability":"mutable","name":"last","nameLocation":"11909:4:38","nodeType":"VariableDeclaration","scope":9149,"src":"11887:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9097,"nodeType":"UserDefinedTypeName","pathNode":{"id":9096,"name":"Checkpoint208","nameLocations":["11887:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"11887:13:38"},"referencedDeclaration":8771,"src":"11887:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":9105,"initialValue":{"arguments":[{"id":9100,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"11930:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9101,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"11936:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11936:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9099,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"11916:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11887:57:38"},{"assignments":[9107],"declarations":[{"constant":false,"id":9107,"mutability":"mutable","name":"lastKey","nameLocation":"11965:7:38","nodeType":"VariableDeclaration","scope":9149,"src":"11958:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9106,"name":"uint48","nodeType":"ElementaryTypeName","src":"11958:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":9110,"initialValue":{"expression":{"id":9108,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"11975:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11980:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8768,"src":"11975:9:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11958:26:38"},{"assignments":[9112],"declarations":[{"constant":false,"id":9112,"mutability":"mutable","name":"lastValue","nameLocation":"12006:9:38","nodeType":"VariableDeclaration","scope":9149,"src":"11998:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9111,"name":"uint208","nodeType":"ElementaryTypeName","src":"11998:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"id":9115,"initialValue":{"expression":{"id":9113,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"12018:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12023:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"12018:11:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"VariableDeclarationStatement","src":"11998:31:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9116,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"12103:7:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9117,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"12113:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12103:13:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9123,"nodeType":"IfStatement","src":"12099:89:38","trueBody":{"id":9122,"nodeType":"Block","src":"12118:70:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9119,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"12143:28:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12143:30:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9121,"nodeType":"RevertStatement","src":"12136:37:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9124,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"12251:7:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9125,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"12262:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12251:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9143,"nodeType":"Block","src":"12325:85:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":9138,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"12374:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":9139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"12387:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":9137,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"12353:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12368:4:38","12379:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12353:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8771_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":9134,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"12343:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12348:4:38","memberName":"push","nodeType":"MemberAccess","src":"12343:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8771_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12343:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9142,"nodeType":"ExpressionStatement","src":"12343:52:38"}]},"id":9144,"nodeType":"IfStatement","src":"12247:163:38","trueBody":{"id":9133,"nodeType":"Block","src":"12267:52:38","statements":[{"expression":{"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9127,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"12285:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12290:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8770,"src":"12285:11:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"12299:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12285:19:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":9132,"nodeType":"ExpressionStatement","src":"12285:19:38"}]}},{"expression":{"components":[{"id":9145,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"12431:9:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":9146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"12442:5:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":9147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12430:18:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":9087,"id":9148,"nodeType":"Return","src":"12423:25:38"}]}}]},"documentation":{"id":9073,"nodeType":"StructuredDocumentation","src":"11487:165:38","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":9166,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11666:7:38","nodeType":"FunctionDefinition","parameters":{"id":9082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9077,"mutability":"mutable","name":"self","nameLocation":"11707:4:38","nodeType":"VariableDeclaration","scope":9166,"src":"11683:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9075,"nodeType":"UserDefinedTypeName","pathNode":{"id":9074,"name":"Checkpoint208","nameLocations":["11683:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"11683:13:38"},"referencedDeclaration":8771,"src":"11683:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9076,"nodeType":"ArrayTypeName","src":"11683:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9079,"mutability":"mutable","name":"key","nameLocation":"11728:3:38","nodeType":"VariableDeclaration","scope":9166,"src":"11721:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9078,"name":"uint48","nodeType":"ElementaryTypeName","src":"11721:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9081,"mutability":"mutable","name":"value","nameLocation":"11749:5:38","nodeType":"VariableDeclaration","scope":9166,"src":"11741:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9080,"name":"uint208","nodeType":"ElementaryTypeName","src":"11741:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11673:87:38"},"returnParameters":{"id":9087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9084,"mutability":"mutable","name":"oldValue","nameLocation":"11786:8:38","nodeType":"VariableDeclaration","scope":9166,"src":"11778:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9083,"name":"uint208","nodeType":"ElementaryTypeName","src":"11778:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":9086,"mutability":"mutable","name":"newValue","nameLocation":"11804:8:38","nodeType":"VariableDeclaration","scope":9166,"src":"11796:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9085,"name":"uint208","nodeType":"ElementaryTypeName","src":"11796:7:38","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11777:36:38"},"scope":9810,"src":"11657:922:38","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9217,"nodeType":"Block","src":"13095:267:38","statements":[{"body":{"id":9213,"nodeType":"Block","src":"13124:211:38","statements":[{"assignments":[9186],"declarations":[{"constant":false,"id":9186,"mutability":"mutable","name":"mid","nameLocation":"13146:3:38","nodeType":"VariableDeclaration","scope":9213,"src":"13138:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9185,"name":"uint256","nodeType":"ElementaryTypeName","src":"13138:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9192,"initialValue":{"arguments":[{"id":9189,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"13165:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9190,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"13170:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9187,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"13152:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13157:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"13152:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13152:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13138:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9194,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9171,"src":"13207:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":9195,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"13213:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9193,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"13193:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13218:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8768,"src":"13193:29:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9198,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"13225:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13193:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9211,"nodeType":"Block","src":"13279:46:38","statements":[{"expression":{"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9205,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"13297:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9206,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"13303:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13309:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13303:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13297:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9210,"nodeType":"ExpressionStatement","src":"13297:13:38"}]},"id":9212,"nodeType":"IfStatement","src":"13189:136:38","trueBody":{"id":9204,"nodeType":"Block","src":"13230:43:38","statements":[{"expression":{"id":9202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9200,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"13248:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9201,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"13255:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13248:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9203,"nodeType":"ExpressionStatement","src":"13248:10:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9182,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"13112:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9183,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"13118:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13112:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9214,"nodeType":"WhileStatement","src":"13105:230:38"},{"expression":{"id":9215,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"13351:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9181,"id":9216,"nodeType":"Return","src":"13344:11:38"}]},"documentation":{"id":9167,"nodeType":"StructuredDocumentation","src":"12585:339:38","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9218,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12938:18:38","nodeType":"FunctionDefinition","parameters":{"id":9178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9171,"mutability":"mutable","name":"self","nameLocation":"12990:4:38","nodeType":"VariableDeclaration","scope":9218,"src":"12966:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9169,"nodeType":"UserDefinedTypeName","pathNode":{"id":9168,"name":"Checkpoint208","nameLocations":["12966:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"12966:13:38"},"referencedDeclaration":8771,"src":"12966:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9170,"nodeType":"ArrayTypeName","src":"12966:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9173,"mutability":"mutable","name":"key","nameLocation":"13011:3:38","nodeType":"VariableDeclaration","scope":9218,"src":"13004:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9172,"name":"uint48","nodeType":"ElementaryTypeName","src":"13004:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9175,"mutability":"mutable","name":"low","nameLocation":"13032:3:38","nodeType":"VariableDeclaration","scope":9218,"src":"13024:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9174,"name":"uint256","nodeType":"ElementaryTypeName","src":"13024:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9177,"mutability":"mutable","name":"high","nameLocation":"13053:4:38","nodeType":"VariableDeclaration","scope":9218,"src":"13045:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13045:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12956:107:38"},"returnParameters":{"id":9181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9218,"src":"13086:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9179,"name":"uint256","nodeType":"ElementaryTypeName","src":"13086:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13085:9:38"},"scope":9810,"src":"12929:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9269,"nodeType":"Block","src":"13879:267:38","statements":[{"body":{"id":9265,"nodeType":"Block","src":"13908:211:38","statements":[{"assignments":[9238],"declarations":[{"constant":false,"id":9238,"mutability":"mutable","name":"mid","nameLocation":"13930:3:38","nodeType":"VariableDeclaration","scope":9265,"src":"13922:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9237,"name":"uint256","nodeType":"ElementaryTypeName","src":"13922:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9244,"initialValue":{"arguments":[{"id":9241,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"13949:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9242,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"13954:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9239,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"13936:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13941:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"13936:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13936:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13922:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9246,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"13991:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":9247,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"13997:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9245,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9285,"src":"13977:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8771_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13977:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14002:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8768,"src":"13977:29:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9250,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"14009:3:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13977:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9263,"nodeType":"Block","src":"14066:43:38","statements":[{"expression":{"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9259,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"14084:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9260,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"14091:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14084:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9262,"nodeType":"ExpressionStatement","src":"14084:10:38"}]},"id":9264,"nodeType":"IfStatement","src":"13973:136:38","trueBody":{"id":9258,"nodeType":"Block","src":"14014:46:38","statements":[{"expression":{"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9252,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"14032:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9253,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"14038:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14044:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14038:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14032:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9257,"nodeType":"ExpressionStatement","src":"14032:13:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9234,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"13896:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"13902:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13896:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9266,"nodeType":"WhileStatement","src":"13889:230:38"},{"expression":{"id":9267,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9229,"src":"14135:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9233,"id":9268,"nodeType":"Return","src":"14128:11:38"}]},"documentation":{"id":9219,"nodeType":"StructuredDocumentation","src":"13368:340:38","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9270,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13722:18:38","nodeType":"FunctionDefinition","parameters":{"id":9230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"self","nameLocation":"13774:4:38","nodeType":"VariableDeclaration","scope":9270,"src":"13750:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9221,"nodeType":"UserDefinedTypeName","pathNode":{"id":9220,"name":"Checkpoint208","nameLocations":["13750:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"13750:13:38"},"referencedDeclaration":8771,"src":"13750:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9222,"nodeType":"ArrayTypeName","src":"13750:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9225,"mutability":"mutable","name":"key","nameLocation":"13795:3:38","nodeType":"VariableDeclaration","scope":9270,"src":"13788:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9224,"name":"uint48","nodeType":"ElementaryTypeName","src":"13788:6:38","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9227,"mutability":"mutable","name":"low","nameLocation":"13816:3:38","nodeType":"VariableDeclaration","scope":9270,"src":"13808:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9229,"mutability":"mutable","name":"high","nameLocation":"13837:4:38","nodeType":"VariableDeclaration","scope":9270,"src":"13829:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9228,"name":"uint256","nodeType":"ElementaryTypeName","src":"13829:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13740:107:38"},"returnParameters":{"id":9233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9270,"src":"13870:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9231,"name":"uint256","nodeType":"ElementaryTypeName","src":"13870:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13869:9:38"},"scope":9810,"src":"13713:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9284,"nodeType":"Block","src":"14429:125:38","statements":[{"AST":{"nodeType":"YulBlock","src":"14448:100:38","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14469:1:38","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14472:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:38"},"nodeType":"YulFunctionCall","src":"14462:20:38"},"nodeType":"YulExpressionStatement","src":"14462:20:38"},{"nodeType":"YulAssignment","src":"14495:43:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14524:1:38","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14527:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14514:9:38"},"nodeType":"YulFunctionCall","src":"14514:18:38"},{"name":"pos","nodeType":"YulIdentifier","src":"14534:3:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14510:3:38"},"nodeType":"YulFunctionCall","src":"14510:28:38"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14495:11:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9277,"isOffset":false,"isSlot":false,"src":"14534:3:38","valueSize":1},{"declaration":9281,"isOffset":false,"isSlot":true,"src":"14495:11:38","suffix":"slot","valueSize":1},{"declaration":9275,"isOffset":false,"isSlot":true,"src":"14472:9:38","suffix":"slot","valueSize":1}],"id":9283,"nodeType":"InlineAssembly","src":"14439:109:38"}]},"documentation":{"id":9271,"nodeType":"StructuredDocumentation","src":"14152:132:38","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9285,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14298:13:38","nodeType":"FunctionDefinition","parameters":{"id":9278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9275,"mutability":"mutable","name":"self","nameLocation":"14345:4:38","nodeType":"VariableDeclaration","scope":9285,"src":"14321:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9273,"nodeType":"UserDefinedTypeName","pathNode":{"id":9272,"name":"Checkpoint208","nameLocations":["14321:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"14321:13:38"},"referencedDeclaration":8771,"src":"14321:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9274,"nodeType":"ArrayTypeName","src":"14321:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8771_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9277,"mutability":"mutable","name":"pos","nameLocation":"14367:3:38","nodeType":"VariableDeclaration","scope":9285,"src":"14359:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9276,"name":"uint256","nodeType":"ElementaryTypeName","src":"14359:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14311:65:38"},"returnParameters":{"id":9282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9281,"mutability":"mutable","name":"result","nameLocation":"14421:6:38","nodeType":"VariableDeclaration","scope":9285,"src":"14399:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9280,"nodeType":"UserDefinedTypeName","pathNode":{"id":9279,"name":"Checkpoint208","nameLocations":["14399:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":8771,"src":"14399:13:38"},"referencedDeclaration":8771,"src":"14399:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8771_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14398:30:38"},"scope":9810,"src":"14289:265:38","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":9290,"members":[{"constant":false,"id":9289,"mutability":"mutable","name":"_checkpoints","nameLocation":"14602:12:38","nodeType":"VariableDeclaration","scope":9290,"src":"14586:28:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9287,"nodeType":"UserDefinedTypeName","pathNode":{"id":9286,"name":"Checkpoint160","nameLocations":["14586:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"14586:13:38"},"referencedDeclaration":9295,"src":"14586:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9288,"nodeType":"ArrayTypeName","src":"14586:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14567:8:38","nodeType":"StructDefinition","scope":9810,"src":"14560:61:38","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":9295,"members":[{"constant":false,"id":9292,"mutability":"mutable","name":"_key","nameLocation":"14665:4:38","nodeType":"VariableDeclaration","scope":9295,"src":"14658:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9291,"name":"uint96","nodeType":"ElementaryTypeName","src":"14658:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9294,"mutability":"mutable","name":"_value","nameLocation":"14687:6:38","nodeType":"VariableDeclaration","scope":9295,"src":"14679:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9293,"name":"uint160","nodeType":"ElementaryTypeName","src":"14679:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14634:13:38","nodeType":"StructDefinition","scope":9810,"src":"14627:73:38","visibility":"public"},{"body":{"id":9317,"nodeType":"Block","src":"15161:62:38","statements":[{"expression":{"arguments":[{"expression":{"id":9311,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"15186:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15191:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"15186:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9313,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9301,"src":"15205:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9303,"src":"15210:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9310,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8642,9166,9690],"referencedDeclaration":9690,"src":"15178:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":9315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15178:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9309,"id":9316,"nodeType":"Return","src":"15171:45:38"}]},"documentation":{"id":9296,"nodeType":"StructuredDocumentation","src":"14706:302:38","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":9318,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"15022:4:38","nodeType":"FunctionDefinition","parameters":{"id":9304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9299,"mutability":"mutable","name":"self","nameLocation":"15053:4:38","nodeType":"VariableDeclaration","scope":9318,"src":"15036:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9298,"nodeType":"UserDefinedTypeName","pathNode":{"id":9297,"name":"Trace160","nameLocations":["15036:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"15036:8:38"},"referencedDeclaration":9290,"src":"15036:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9301,"mutability":"mutable","name":"key","nameLocation":"15074:3:38","nodeType":"VariableDeclaration","scope":9318,"src":"15067:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9300,"name":"uint96","nodeType":"ElementaryTypeName","src":"15067:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9303,"mutability":"mutable","name":"value","nameLocation":"15095:5:38","nodeType":"VariableDeclaration","scope":9318,"src":"15087:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9302,"name":"uint160","nodeType":"ElementaryTypeName","src":"15087:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15026:80:38"},"returnParameters":{"id":9309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9306,"mutability":"mutable","name":"oldValue","nameLocation":"15133:8:38","nodeType":"VariableDeclaration","scope":9318,"src":"15125:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9305,"name":"uint160","nodeType":"ElementaryTypeName","src":"15125:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9308,"mutability":"mutable","name":"newValue","nameLocation":"15151:8:38","nodeType":"VariableDeclaration","scope":9318,"src":"15143:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9307,"name":"uint160","nodeType":"ElementaryTypeName","src":"15143:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15124:36:38"},"scope":9810,"src":"15013:210:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9357,"nodeType":"Block","src":"15476:207:38","statements":[{"assignments":[9330],"declarations":[{"constant":false,"id":9330,"mutability":"mutable","name":"len","nameLocation":"15494:3:38","nodeType":"VariableDeclaration","scope":9357,"src":"15486:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9329,"name":"uint256","nodeType":"ElementaryTypeName","src":"15486:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9334,"initialValue":{"expression":{"expression":{"id":9331,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"15500:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15505:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"15500:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15518:6:38","memberName":"length","nodeType":"MemberAccess","src":"15500:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15486:38:38"},{"assignments":[9336],"declarations":[{"constant":false,"id":9336,"mutability":"mutable","name":"pos","nameLocation":"15542:3:38","nodeType":"VariableDeclaration","scope":9357,"src":"15534:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9335,"name":"uint256","nodeType":"ElementaryTypeName","src":"15534:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9344,"initialValue":{"arguments":[{"expression":{"id":9338,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"15567:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15572:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"15567:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9340,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"15586:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15591:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9342,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"15594:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9337,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8746,9270,9794],"referencedDeclaration":9794,"src":"15548:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15548:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15534:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9345,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9336,"src":"15615:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9346,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"15622:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15615:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9350,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"15646:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15651:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"15646:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9352,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9336,"src":"15665:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9349,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"15632:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15632:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15670:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"15632:44:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15615:61:38","trueExpression":{"hexValue":"30","id":9348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15628:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9328,"id":9356,"nodeType":"Return","src":"15608:68:38"}]},"documentation":{"id":9319,"nodeType":"StructuredDocumentation","src":"15229:154:38","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":9358,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15397:11:38","nodeType":"FunctionDefinition","parameters":{"id":9325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9322,"mutability":"mutable","name":"self","nameLocation":"15426:4:38","nodeType":"VariableDeclaration","scope":9358,"src":"15409:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9321,"nodeType":"UserDefinedTypeName","pathNode":{"id":9320,"name":"Trace160","nameLocations":["15409:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"15409:8:38"},"referencedDeclaration":9290,"src":"15409:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9324,"mutability":"mutable","name":"key","nameLocation":"15439:3:38","nodeType":"VariableDeclaration","scope":9358,"src":"15432:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9323,"name":"uint96","nodeType":"ElementaryTypeName","src":"15432:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15408:35:38"},"returnParameters":{"id":9328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9358,"src":"15467:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9326,"name":"uint160","nodeType":"ElementaryTypeName","src":"15467:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15466:9:38"},"scope":9810,"src":"15388:295:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9399,"nodeType":"Block","src":"15938:209:38","statements":[{"assignments":[9370],"declarations":[{"constant":false,"id":9370,"mutability":"mutable","name":"len","nameLocation":"15956:3:38","nodeType":"VariableDeclaration","scope":9399,"src":"15948:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9369,"name":"uint256","nodeType":"ElementaryTypeName","src":"15948:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9374,"initialValue":{"expression":{"expression":{"id":9371,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"15962:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15967:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"15962:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15980:6:38","memberName":"length","nodeType":"MemberAccess","src":"15962:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15948:38:38"},{"assignments":[9376],"declarations":[{"constant":false,"id":9376,"mutability":"mutable","name":"pos","nameLocation":"16004:3:38","nodeType":"VariableDeclaration","scope":9399,"src":"15996:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9375,"name":"uint256","nodeType":"ElementaryTypeName","src":"15996:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9384,"initialValue":{"arguments":[{"expression":{"id":9378,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"16029:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16034:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"16029:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9380,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9364,"src":"16048:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16053:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9382,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"16056:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9377,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":9742,"src":"16010:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16010:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15996:64:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9385,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"16077:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16084:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16077:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9390,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"16106:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16111:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"16106:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9392,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"16125:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16131:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16125:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9389,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"16092:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16092:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16134:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"16092:48:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16077:63:38","trueExpression":{"hexValue":"30","id":9388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16088:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9368,"id":9398,"nodeType":"Return","src":"16070:70:38"}]},"documentation":{"id":9359,"nodeType":"StructuredDocumentation","src":"15689:156:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":9400,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15859:11:38","nodeType":"FunctionDefinition","parameters":{"id":9365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9362,"mutability":"mutable","name":"self","nameLocation":"15888:4:38","nodeType":"VariableDeclaration","scope":9400,"src":"15871:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9361,"nodeType":"UserDefinedTypeName","pathNode":{"id":9360,"name":"Trace160","nameLocations":["15871:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"15871:8:38"},"referencedDeclaration":9290,"src":"15871:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9364,"mutability":"mutable","name":"key","nameLocation":"15901:3:38","nodeType":"VariableDeclaration","scope":9400,"src":"15894:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9363,"name":"uint96","nodeType":"ElementaryTypeName","src":"15894:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15870:35:38"},"returnParameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9400,"src":"15929:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9366,"name":"uint160","nodeType":"ElementaryTypeName","src":"15929:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15928:9:38"},"scope":9810,"src":"15850:297:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9484,"nodeType":"Block","src":"16546:512:38","statements":[{"assignments":[9412],"declarations":[{"constant":false,"id":9412,"mutability":"mutable","name":"len","nameLocation":"16564:3:38","nodeType":"VariableDeclaration","scope":9484,"src":"16556:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9411,"name":"uint256","nodeType":"ElementaryTypeName","src":"16556:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9416,"initialValue":{"expression":{"expression":{"id":9413,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"16570:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16575:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"16570:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:38","memberName":"length","nodeType":"MemberAccess","src":"16570:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16556:38:38"},{"assignments":[9418],"declarations":[{"constant":false,"id":9418,"mutability":"mutable","name":"low","nameLocation":"16613:3:38","nodeType":"VariableDeclaration","scope":9484,"src":"16605:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9417,"name":"uint256","nodeType":"ElementaryTypeName","src":"16605:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9420,"initialValue":{"hexValue":"30","id":9419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16619:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16605:15:38"},{"assignments":[9422],"declarations":[{"constant":false,"id":9422,"mutability":"mutable","name":"high","nameLocation":"16638:4:38","nodeType":"VariableDeclaration","scope":9484,"src":"16630:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16630:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9424,"initialValue":{"id":9423,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"16645:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16630:18:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9425,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"16663:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":9426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16669:1:38","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16663:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9459,"nodeType":"IfStatement","src":"16659:234:38","trueBody":{"id":9458,"nodeType":"Block","src":"16672:221:38","statements":[{"assignments":[9429],"declarations":[{"constant":false,"id":9429,"mutability":"mutable","name":"mid","nameLocation":"16694:3:38","nodeType":"VariableDeclaration","scope":9458,"src":"16686:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9428,"name":"uint256","nodeType":"ElementaryTypeName","src":"16686:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9436,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9430,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"16700:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":9433,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"16716:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9431,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"16706:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16711:4:38","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5699,"src":"16706:9:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16706:14:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16700:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16686:34:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9437,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"16738:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":9439,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"16758:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16763:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"16758:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9441,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"16777:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9438,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"16744:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16782:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9292,"src":"16744:42:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16738:48:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9456,"nodeType":"Block","src":"16837:46:38","statements":[{"expression":{"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9450,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"16855:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9451,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"16861:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16867:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16861:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16855:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9455,"nodeType":"ExpressionStatement","src":"16855:13:38"}]},"id":9457,"nodeType":"IfStatement","src":"16734:149:38","trueBody":{"id":9449,"nodeType":"Block","src":"16788:43:38","statements":[{"expression":{"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9445,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"16806:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9446,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"16813:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16806:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9448,"nodeType":"ExpressionStatement","src":"16806:10:38"}]}}]}},{"assignments":[9461],"declarations":[{"constant":false,"id":9461,"mutability":"mutable","name":"pos","nameLocation":"16911:3:38","nodeType":"VariableDeclaration","scope":9484,"src":"16903:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"16903:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9469,"initialValue":{"arguments":[{"expression":{"id":9463,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"16936:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16941:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"16936:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9465,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"16955:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9466,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"16960:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9467,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"16965:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9462,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8694,9218,9742],"referencedDeclaration":9742,"src":"16917:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16917:53:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16903:67:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9470,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"16988:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16995:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16988:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9475,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"17017:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17022:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"17017:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9477,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"17036:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17042:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17036:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9474,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"17003:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17045:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"17003:48:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16988:63:38","trueExpression":{"hexValue":"30","id":9473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16999:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9410,"id":9483,"nodeType":"Return","src":"16981:70:38"}]},"documentation":{"id":9401,"nodeType":"StructuredDocumentation","src":"16153:294:38","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":9485,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16461:17:38","nodeType":"FunctionDefinition","parameters":{"id":9407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"self","nameLocation":"16496:4:38","nodeType":"VariableDeclaration","scope":9485,"src":"16479:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9403,"nodeType":"UserDefinedTypeName","pathNode":{"id":9402,"name":"Trace160","nameLocations":["16479:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"16479:8:38"},"referencedDeclaration":9290,"src":"16479:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9406,"mutability":"mutable","name":"key","nameLocation":"16509:3:38","nodeType":"VariableDeclaration","scope":9485,"src":"16502:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9405,"name":"uint96","nodeType":"ElementaryTypeName","src":"16502:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16478:35:38"},"returnParameters":{"id":9410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9485,"src":"16537:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9408,"name":"uint160","nodeType":"ElementaryTypeName","src":"16537:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16536:9:38"},"scope":9810,"src":"16452:606:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9514,"nodeType":"Block","src":"17249:135:38","statements":[{"assignments":[9495],"declarations":[{"constant":false,"id":9495,"mutability":"mutable","name":"pos","nameLocation":"17267:3:38","nodeType":"VariableDeclaration","scope":9514,"src":"17259:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9494,"name":"uint256","nodeType":"ElementaryTypeName","src":"17259:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9499,"initialValue":{"expression":{"expression":{"id":9496,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17273:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17278:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"17273:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17291:6:38","memberName":"length","nodeType":"MemberAccess","src":"17273:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17259:38:38"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9500,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9495,"src":"17314:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17321:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17314:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9505,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17343:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17348:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"17343:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9507,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9495,"src":"17362:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17368:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17362:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9504,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"17329:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17329:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17371:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"17329:48:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17314:63:38","trueExpression":{"hexValue":"30","id":9503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17325:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9493,"id":9513,"nodeType":"Return","src":"17307:70:38"}]},"documentation":{"id":9486,"nodeType":"StructuredDocumentation","src":"17064:109:38","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":9515,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"17187:6:38","nodeType":"FunctionDefinition","parameters":{"id":9490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9489,"mutability":"mutable","name":"self","nameLocation":"17211:4:38","nodeType":"VariableDeclaration","scope":9515,"src":"17194:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9488,"nodeType":"UserDefinedTypeName","pathNode":{"id":9487,"name":"Trace160","nameLocations":["17194:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"17194:8:38"},"referencedDeclaration":9290,"src":"17194:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17193:23:38"},"returnParameters":{"id":9493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9515,"src":"17240:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9491,"name":"uint160","nodeType":"ElementaryTypeName","src":"17240:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17239:9:38"},"scope":9810,"src":"17178:206:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9563,"nodeType":"Block","src":"17677:275:38","statements":[{"assignments":[9529],"declarations":[{"constant":false,"id":9529,"mutability":"mutable","name":"pos","nameLocation":"17695:3:38","nodeType":"VariableDeclaration","scope":9563,"src":"17687:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9528,"name":"uint256","nodeType":"ElementaryTypeName","src":"17687:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9533,"initialValue":{"expression":{"expression":{"id":9530,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"17701:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17706:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"17701:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17719:6:38","memberName":"length","nodeType":"MemberAccess","src":"17701:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17687:38:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9534,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9529,"src":"17739:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17746:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17739:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9561,"nodeType":"Block","src":"17800:146:38","statements":[{"assignments":[9545],"declarations":[{"constant":false,"id":9545,"mutability":"mutable","name":"ckpt","nameLocation":"17836:4:38","nodeType":"VariableDeclaration","scope":9561,"src":"17814:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9544,"nodeType":"UserDefinedTypeName","pathNode":{"id":9543,"name":"Checkpoint160","nameLocations":["17814:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"17814:13:38"},"referencedDeclaration":9295,"src":"17814:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9553,"initialValue":{"arguments":[{"expression":{"id":9547,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"17857:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17862:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"17857:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9549,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9529,"src":"17876:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17882:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17876:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9546,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"17843:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17843:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17814:70:38"},{"expression":{"components":[{"hexValue":"74727565","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17906:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":9555,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"17912:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17917:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9292,"src":"17912:9:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":9557,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"17923:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17928:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"17923:11:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17905:30:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":9527,"id":9560,"nodeType":"Return","src":"17898:37:38"}]},"id":9562,"nodeType":"IfStatement","src":"17735:211:38","trueBody":{"id":9542,"nodeType":"Block","src":"17749:45:38","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":9537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17771:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":9538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17778:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17781:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17770:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":9527,"id":9541,"nodeType":"Return","src":"17763:20:38"}]}}]},"documentation":{"id":9516,"nodeType":"StructuredDocumentation","src":"17390:168:38","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":9564,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17572:16:38","nodeType":"FunctionDefinition","parameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"self","nameLocation":"17606:4:38","nodeType":"VariableDeclaration","scope":9564,"src":"17589:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9518,"nodeType":"UserDefinedTypeName","pathNode":{"id":9517,"name":"Trace160","nameLocations":["17589:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"17589:8:38"},"referencedDeclaration":9290,"src":"17589:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17588:23:38"},"returnParameters":{"id":9527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9522,"mutability":"mutable","name":"exists","nameLocation":"17640:6:38","nodeType":"VariableDeclaration","scope":9564,"src":"17635:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9521,"name":"bool","nodeType":"ElementaryTypeName","src":"17635:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9524,"mutability":"mutable","name":"_key","nameLocation":"17655:4:38","nodeType":"VariableDeclaration","scope":9564,"src":"17648:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9523,"name":"uint96","nodeType":"ElementaryTypeName","src":"17648:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9526,"mutability":"mutable","name":"_value","nameLocation":"17669:6:38","nodeType":"VariableDeclaration","scope":9564,"src":"17661:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9525,"name":"uint160","nodeType":"ElementaryTypeName","src":"17661:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17634:42:38"},"scope":9810,"src":"17563:389:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9577,"nodeType":"Block","src":"18091:48:38","statements":[{"expression":{"expression":{"expression":{"id":9573,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"18108:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18113:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"18108:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18126:6:38","memberName":"length","nodeType":"MemberAccess","src":"18108:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9572,"id":9576,"nodeType":"Return","src":"18101:31:38"}]},"documentation":{"id":9565,"nodeType":"StructuredDocumentation","src":"17958:57:38","text":" @dev Returns the number of checkpoint."},"id":9578,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18029:6:38","nodeType":"FunctionDefinition","parameters":{"id":9569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9568,"mutability":"mutable","name":"self","nameLocation":"18053:4:38","nodeType":"VariableDeclaration","scope":9578,"src":"18036:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9567,"nodeType":"UserDefinedTypeName","pathNode":{"id":9566,"name":"Trace160","nameLocations":["18036:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"18036:8:38"},"referencedDeclaration":9290,"src":"18036:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"18035:23:38"},"returnParameters":{"id":9572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9578,"src":"18082:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9570,"name":"uint256","nodeType":"ElementaryTypeName","src":"18082:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18081:9:38"},"scope":9810,"src":"18020:119:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9595,"nodeType":"Block","src":"18303:46:38","statements":[{"expression":{"baseExpression":{"expression":{"id":9590,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"18320:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18325:12:38","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9289,"src":"18320:17:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9593,"indexExpression":{"id":9592,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"18338:3:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18320:22:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":9589,"id":9594,"nodeType":"Return","src":"18313:29:38"}]},"documentation":{"id":9579,"nodeType":"StructuredDocumentation","src":"18145:61:38","text":" @dev Returns checkpoint at given position."},"id":9596,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"18220:2:38","nodeType":"FunctionDefinition","parameters":{"id":9585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9582,"mutability":"mutable","name":"self","nameLocation":"18240:4:38","nodeType":"VariableDeclaration","scope":9596,"src":"18223:21:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9581,"nodeType":"UserDefinedTypeName","pathNode":{"id":9580,"name":"Trace160","nameLocations":["18223:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"18223:8:38"},"referencedDeclaration":9290,"src":"18223:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9290_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9584,"mutability":"mutable","name":"pos","nameLocation":"18253:3:38","nodeType":"VariableDeclaration","scope":9596,"src":"18246:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9583,"name":"uint32","nodeType":"ElementaryTypeName","src":"18246:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"18222:35:38"},"returnParameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9596,"src":"18281:20:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9587,"nodeType":"UserDefinedTypeName","pathNode":{"id":9586,"name":"Checkpoint160","nameLocations":["18281:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"18281:13:38"},"referencedDeclaration":9295,"src":"18281:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18280:22:38"},"scope":9810,"src":"18211:138:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9689,"nodeType":"Block","src":"18682:765:38","statements":[{"assignments":[9613],"declarations":[{"constant":false,"id":9613,"mutability":"mutable","name":"pos","nameLocation":"18700:3:38","nodeType":"VariableDeclaration","scope":9689,"src":"18692:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9612,"name":"uint256","nodeType":"ElementaryTypeName","src":"18692:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9616,"initialValue":{"expression":{"id":9614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"18706:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18711:6:38","memberName":"length","nodeType":"MemberAccess","src":"18706:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18692:25:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9617,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"18732:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18738:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18732:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9687,"nodeType":"Block","src":"19333:108:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":9678,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"19378:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"19391:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9677,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"19357:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19372:4:38","19383:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19357:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9295_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9674,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"19347:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19352:4:38","memberName":"push","nodeType":"MemberAccess","src":"19347:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9295_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19347:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9682,"nodeType":"ExpressionStatement","src":"19347:52:38"},{"expression":{"components":[{"hexValue":"30","id":9683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19421:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"19424:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19420:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":9611,"id":9686,"nodeType":"Return","src":"19413:17:38"}]},"id":9688,"nodeType":"IfStatement","src":"18728:713:38","trueBody":{"id":9673,"nodeType":"Block","src":"18741:586:38","statements":[{"assignments":[9622],"declarations":[{"constant":false,"id":9622,"mutability":"mutable","name":"last","nameLocation":"18777:4:38","nodeType":"VariableDeclaration","scope":9673,"src":"18755:26:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9621,"nodeType":"UserDefinedTypeName","pathNode":{"id":9620,"name":"Checkpoint160","nameLocations":["18755:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"18755:13:38"},"referencedDeclaration":9295,"src":"18755:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9629,"initialValue":{"arguments":[{"id":9624,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"18798:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9625,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"18804:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18810:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18804:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9623,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"18784:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18784:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18755:57:38"},{"assignments":[9631],"declarations":[{"constant":false,"id":9631,"mutability":"mutable","name":"lastKey","nameLocation":"18833:7:38","nodeType":"VariableDeclaration","scope":9673,"src":"18826:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9630,"name":"uint96","nodeType":"ElementaryTypeName","src":"18826:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":9634,"initialValue":{"expression":{"id":9632,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"18843:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18848:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9292,"src":"18843:9:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"18826:26:38"},{"assignments":[9636],"declarations":[{"constant":false,"id":9636,"mutability":"mutable","name":"lastValue","nameLocation":"18874:9:38","nodeType":"VariableDeclaration","scope":9673,"src":"18866:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9635,"name":"uint160","nodeType":"ElementaryTypeName","src":"18866:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":9639,"initialValue":{"expression":{"id":9637,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"18886:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18891:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"18886:11:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"18866:31:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9640,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9631,"src":"18971:7:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9641,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"18981:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18971:13:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9647,"nodeType":"IfStatement","src":"18967:89:38","trueBody":{"id":9646,"nodeType":"Block","src":"18986:70:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9643,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"19011:28:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19011:30:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9645,"nodeType":"RevertStatement","src":"19004:37:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9648,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9631,"src":"19119:7:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9649,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"19130:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19119:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9667,"nodeType":"Block","src":"19193:85:38","statements":[{"expression":{"arguments":[{"arguments":[{"id":9662,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"19242:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"19255:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9661,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"19221:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19236:4:38","19247:6:38"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19221:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9295_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9658,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"19211:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19216:4:38","memberName":"push","nodeType":"MemberAccess","src":"19211:9:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9295_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19211:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9666,"nodeType":"ExpressionStatement","src":"19211:52:38"}]},"id":9668,"nodeType":"IfStatement","src":"19115:163:38","trueBody":{"id":9657,"nodeType":"Block","src":"19135:52:38","statements":[{"expression":{"id":9655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9651,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"19153:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19158:6:38","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9294,"src":"19153:11:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"19167:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"19153:19:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9656,"nodeType":"ExpressionStatement","src":"19153:19:38"}]}},{"expression":{"components":[{"id":9669,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"19299:9:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":9670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"19310:5:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19298:18:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9611,"id":9672,"nodeType":"Return","src":"19291:25:38"}]}}]},"documentation":{"id":9597,"nodeType":"StructuredDocumentation","src":"18355:165:38","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":9690,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18534:7:38","nodeType":"FunctionDefinition","parameters":{"id":9606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9601,"mutability":"mutable","name":"self","nameLocation":"18575:4:38","nodeType":"VariableDeclaration","scope":9690,"src":"18551:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9599,"nodeType":"UserDefinedTypeName","pathNode":{"id":9598,"name":"Checkpoint160","nameLocations":["18551:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"18551:13:38"},"referencedDeclaration":9295,"src":"18551:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9600,"nodeType":"ArrayTypeName","src":"18551:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9603,"mutability":"mutable","name":"key","nameLocation":"18596:3:38","nodeType":"VariableDeclaration","scope":9690,"src":"18589:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9602,"name":"uint96","nodeType":"ElementaryTypeName","src":"18589:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9605,"mutability":"mutable","name":"value","nameLocation":"18617:5:38","nodeType":"VariableDeclaration","scope":9690,"src":"18609:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9604,"name":"uint160","nodeType":"ElementaryTypeName","src":"18609:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18541:87:38"},"returnParameters":{"id":9611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9608,"mutability":"mutable","name":"oldValue","nameLocation":"18654:8:38","nodeType":"VariableDeclaration","scope":9690,"src":"18646:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9607,"name":"uint160","nodeType":"ElementaryTypeName","src":"18646:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9610,"mutability":"mutable","name":"newValue","nameLocation":"18672:8:38","nodeType":"VariableDeclaration","scope":9690,"src":"18664:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9609,"name":"uint160","nodeType":"ElementaryTypeName","src":"18664:7:38","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18645:36:38"},"scope":9810,"src":"18525:922:38","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9741,"nodeType":"Block","src":"19963:267:38","statements":[{"body":{"id":9737,"nodeType":"Block","src":"19992:211:38","statements":[{"assignments":[9710],"declarations":[{"constant":false,"id":9710,"mutability":"mutable","name":"mid","nameLocation":"20014:3:38","nodeType":"VariableDeclaration","scope":9737,"src":"20006:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9709,"name":"uint256","nodeType":"ElementaryTypeName","src":"20006:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9716,"initialValue":{"arguments":[{"id":9713,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"20033:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9714,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"20038:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9711,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"20020:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20025:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"20020:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20020:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20006:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9718,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9695,"src":"20075:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9719,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9710,"src":"20081:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9717,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"20061:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20086:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9292,"src":"20061:29:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9722,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9697,"src":"20093:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20061:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9735,"nodeType":"Block","src":"20147:46:38","statements":[{"expression":{"id":9733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9729,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"20165:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9730,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9710,"src":"20171:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20177:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20171:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20165:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9734,"nodeType":"ExpressionStatement","src":"20165:13:38"}]},"id":9736,"nodeType":"IfStatement","src":"20057:136:38","trueBody":{"id":9728,"nodeType":"Block","src":"20098:43:38","statements":[{"expression":{"id":9726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9724,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"20116:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9725,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9710,"src":"20123:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9727,"nodeType":"ExpressionStatement","src":"20116:10:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9706,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"19980:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9707,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"19986:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19980:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9738,"nodeType":"WhileStatement","src":"19973:230:38"},{"expression":{"id":9739,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"20219:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9705,"id":9740,"nodeType":"Return","src":"20212:11:38"}]},"documentation":{"id":9691,"nodeType":"StructuredDocumentation","src":"19453:339:38","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9742,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19806:18:38","nodeType":"FunctionDefinition","parameters":{"id":9702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9695,"mutability":"mutable","name":"self","nameLocation":"19858:4:38","nodeType":"VariableDeclaration","scope":9742,"src":"19834:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9693,"nodeType":"UserDefinedTypeName","pathNode":{"id":9692,"name":"Checkpoint160","nameLocations":["19834:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"19834:13:38"},"referencedDeclaration":9295,"src":"19834:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9694,"nodeType":"ArrayTypeName","src":"19834:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9697,"mutability":"mutable","name":"key","nameLocation":"19879:3:38","nodeType":"VariableDeclaration","scope":9742,"src":"19872:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9696,"name":"uint96","nodeType":"ElementaryTypeName","src":"19872:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9699,"mutability":"mutable","name":"low","nameLocation":"19900:3:38","nodeType":"VariableDeclaration","scope":9742,"src":"19892:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9698,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9701,"mutability":"mutable","name":"high","nameLocation":"19921:4:38","nodeType":"VariableDeclaration","scope":9742,"src":"19913:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9700,"name":"uint256","nodeType":"ElementaryTypeName","src":"19913:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19824:107:38"},"returnParameters":{"id":9705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9742,"src":"19954:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9703,"name":"uint256","nodeType":"ElementaryTypeName","src":"19954:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19953:9:38"},"scope":9810,"src":"19797:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9793,"nodeType":"Block","src":"20747:267:38","statements":[{"body":{"id":9789,"nodeType":"Block","src":"20776:211:38","statements":[{"assignments":[9762],"declarations":[{"constant":false,"id":9762,"mutability":"mutable","name":"mid","nameLocation":"20798:3:38","nodeType":"VariableDeclaration","scope":9789,"src":"20790:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9761,"name":"uint256","nodeType":"ElementaryTypeName","src":"20790:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9768,"initialValue":{"arguments":[{"id":9765,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9751,"src":"20817:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9766,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"20822:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9763,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"20804:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":9764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20809:7:38","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"20804:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20804:23:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20790:37:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9770,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"20859:4:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9771,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9762,"src":"20865:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9769,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8761,9285,9809],"referencedDeclaration":9809,"src":"20845:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9295_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20845:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20870:4:38","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9292,"src":"20845:29:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9774,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9749,"src":"20877:3:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20845:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9787,"nodeType":"Block","src":"20934:43:38","statements":[{"expression":{"id":9785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9783,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"20952:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9784,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9762,"src":"20959:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20952:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9786,"nodeType":"ExpressionStatement","src":"20952:10:38"}]},"id":9788,"nodeType":"IfStatement","src":"20841:136:38","trueBody":{"id":9782,"nodeType":"Block","src":"20882:46:38","statements":[{"expression":{"id":9780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9776,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9751,"src":"20900:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9777,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9762,"src":"20906:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20912:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20906:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20900:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9781,"nodeType":"ExpressionStatement","src":"20900:13:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9758,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9751,"src":"20764:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9759,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"20770:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20764:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9790,"nodeType":"WhileStatement","src":"20757:230:38"},{"expression":{"id":9791,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"21003:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9757,"id":9792,"nodeType":"Return","src":"20996:11:38"}]},"documentation":{"id":9743,"nodeType":"StructuredDocumentation","src":"20236:340:38","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9794,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20590:18:38","nodeType":"FunctionDefinition","parameters":{"id":9754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9747,"mutability":"mutable","name":"self","nameLocation":"20642:4:38","nodeType":"VariableDeclaration","scope":9794,"src":"20618:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9745,"nodeType":"UserDefinedTypeName","pathNode":{"id":9744,"name":"Checkpoint160","nameLocations":["20618:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"20618:13:38"},"referencedDeclaration":9295,"src":"20618:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9746,"nodeType":"ArrayTypeName","src":"20618:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9749,"mutability":"mutable","name":"key","nameLocation":"20663:3:38","nodeType":"VariableDeclaration","scope":9794,"src":"20656:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9748,"name":"uint96","nodeType":"ElementaryTypeName","src":"20656:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9751,"mutability":"mutable","name":"low","nameLocation":"20684:3:38","nodeType":"VariableDeclaration","scope":9794,"src":"20676:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9750,"name":"uint256","nodeType":"ElementaryTypeName","src":"20676:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9753,"mutability":"mutable","name":"high","nameLocation":"20705:4:38","nodeType":"VariableDeclaration","scope":9794,"src":"20697:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9752,"name":"uint256","nodeType":"ElementaryTypeName","src":"20697:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20608:107:38"},"returnParameters":{"id":9757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9794,"src":"20738:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9755,"name":"uint256","nodeType":"ElementaryTypeName","src":"20738:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20737:9:38"},"scope":9810,"src":"20581:433:38","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9808,"nodeType":"Block","src":"21297:125:38","statements":[{"AST":{"nodeType":"YulBlock","src":"21316:100:38","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21337:1:38","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"21340:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21330:6:38"},"nodeType":"YulFunctionCall","src":"21330:20:38"},"nodeType":"YulExpressionStatement","src":"21330:20:38"},{"nodeType":"YulAssignment","src":"21363:43:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21392:1:38","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21395:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21382:9:38"},"nodeType":"YulFunctionCall","src":"21382:18:38"},{"name":"pos","nodeType":"YulIdentifier","src":"21402:3:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21378:3:38"},"nodeType":"YulFunctionCall","src":"21378:28:38"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"21363:11:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9801,"isOffset":false,"isSlot":false,"src":"21402:3:38","valueSize":1},{"declaration":9805,"isOffset":false,"isSlot":true,"src":"21363:11:38","suffix":"slot","valueSize":1},{"declaration":9799,"isOffset":false,"isSlot":true,"src":"21340:9:38","suffix":"slot","valueSize":1}],"id":9807,"nodeType":"InlineAssembly","src":"21307:109:38"}]},"documentation":{"id":9795,"nodeType":"StructuredDocumentation","src":"21020:132:38","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9809,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"21166:13:38","nodeType":"FunctionDefinition","parameters":{"id":9802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9799,"mutability":"mutable","name":"self","nameLocation":"21213:4:38","nodeType":"VariableDeclaration","scope":9809,"src":"21189:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9797,"nodeType":"UserDefinedTypeName","pathNode":{"id":9796,"name":"Checkpoint160","nameLocations":["21189:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"21189:13:38"},"referencedDeclaration":9295,"src":"21189:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9798,"nodeType":"ArrayTypeName","src":"21189:15:38","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9295_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9801,"mutability":"mutable","name":"pos","nameLocation":"21235:3:38","nodeType":"VariableDeclaration","scope":9809,"src":"21227:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9800,"name":"uint256","nodeType":"ElementaryTypeName","src":"21227:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21179:65:38"},"returnParameters":{"id":9806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9805,"mutability":"mutable","name":"result","nameLocation":"21289:6:38","nodeType":"VariableDeclaration","scope":9809,"src":"21267:28:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9804,"nodeType":"UserDefinedTypeName","pathNode":{"id":9803,"name":"Checkpoint160","nameLocations":["21267:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":9295,"src":"21267:13:38"},"referencedDeclaration":9295,"src":"21267:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9295_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"21266:30:38"},"scope":9810,"src":"21157:265:38","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":9811,"src":"668:20756:38","usedErrors":[8237],"usedEvents":[]}],"src":"201:21224:38"},"id":38},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[10423]},"id":10424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9812,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:39"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":9813,"nodeType":"StructuredDocumentation","src":"231:1098:39","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":10423,"linearizedBaseContracts":[10423],"name":"EnumerableSet","nameLocation":"1338:13:39","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":9821,"members":[{"constant":false,"id":9816,"mutability":"mutable","name":"_values","nameLocation":"1862:7:39","nodeType":"VariableDeclaration","scope":9821,"src":"1852:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9815,"nodeType":"ArrayTypeName","src":"1852:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9820,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:39","nodeType":"VariableDeclaration","scope":9821,"src":"2020:44:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":9819,"keyName":"value","keyNameLocation":"2036:5:39","keyType":{"id":9817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:39","nodeType":"StructDefinition","scope":10423,"src":"1798:273:39","visibility":"public"},{"body":{"id":9862,"nodeType":"Block","src":"2310:337:39","statements":[{"condition":{"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:39","subExpression":{"arguments":[{"id":9833,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"2335:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":9834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"2340:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9832,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9966,"src":"2325:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9860,"nodeType":"Block","src":"2604:37:39","statements":[{"expression":{"hexValue":"66616c7365","id":9858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9831,"id":9859,"nodeType":"Return","src":"2618:12:39"}]},"id":9861,"nodeType":"IfStatement","src":"2320:321:39","trueBody":{"id":9857,"nodeType":"Block","src":"2348:250:39","statements":[{"expression":{"arguments":[{"id":9842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"2379:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":9837,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"2362:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"2362:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:39","memberName":"push","nodeType":"MemberAccess","src":"2362:16:39","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":9843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9844,"nodeType":"ExpressionStatement","src":"2362:23:39"},{"expression":{"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9845,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"2520:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:39","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9820,"src":"2520:14:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9849,"indexExpression":{"id":9847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"2535:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":9850,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"2544:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"2544:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:39","memberName":"length","nodeType":"MemberAccess","src":"2544:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9854,"nodeType":"ExpressionStatement","src":"2520:42:39"},{"expression":{"hexValue":"74727565","id":9855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9831,"id":9856,"nodeType":"Return","src":"2576:11:39"}]}}]},"documentation":{"id":9822,"nodeType":"StructuredDocumentation","src":"2077:159:39","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9863,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:39","nodeType":"FunctionDefinition","parameters":{"id":9828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9825,"mutability":"mutable","name":"set","nameLocation":"2267:3:39","nodeType":"VariableDeclaration","scope":9863,"src":"2255:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9824,"nodeType":"UserDefinedTypeName","pathNode":{"id":9823,"name":"Set","nameLocations":["2255:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"2255:3:39"},"referencedDeclaration":9821,"src":"2255:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9827,"mutability":"mutable","name":"value","nameLocation":"2280:5:39","nodeType":"VariableDeclaration","scope":9863,"src":"2272:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:39"},"returnParameters":{"id":9831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9863,"src":"2304:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9829,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:39"},"scope":10423,"src":"2241:406:39","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9946,"nodeType":"Block","src":"2887:1296:39","statements":[{"assignments":[9875],"declarations":[{"constant":false,"id":9875,"mutability":"mutable","name":"position","nameLocation":"2999:8:39","nodeType":"VariableDeclaration","scope":9946,"src":"2991:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9880,"initialValue":{"baseExpression":{"expression":{"id":9876,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3010:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:39","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9820,"src":"3010:14:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9879,"indexExpression":{"id":9878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9869,"src":"3025:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9881,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"3046:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9944,"nodeType":"Block","src":"4140:37:39","statements":[{"expression":{"hexValue":"66616c7365","id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9873,"id":9943,"nodeType":"Return","src":"4154:12:39"}]},"id":9945,"nodeType":"IfStatement","src":"3042:1135:39","trueBody":{"id":9941,"nodeType":"Block","src":"3061:1073:39","statements":[{"assignments":[9885],"declarations":[{"constant":false,"id":9885,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:39","nodeType":"VariableDeclaration","scope":9941,"src":"3413:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9889,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9886,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"3434:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:39"},{"assignments":[9891],"declarations":[{"constant":false,"id":9891,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:39","nodeType":"VariableDeclaration","scope":9941,"src":"3460:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9897,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3480:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"3480:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:39","memberName":"length","nodeType":"MemberAccess","src":"3480:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9898,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"3521:10:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9899,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"3535:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9925,"nodeType":"IfStatement","src":"3517:378:39","trueBody":{"id":9924,"nodeType":"Block","src":"3546:349:39","statements":[{"assignments":[9902],"declarations":[{"constant":false,"id":9902,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:39","nodeType":"VariableDeclaration","scope":9924,"src":"3564:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9907,"initialValue":{"baseExpression":{"expression":{"id":9903,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3584:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"3584:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9906,"indexExpression":{"id":9905,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"3596:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:39"},{"expression":{"id":9914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9908,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3705:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"3705:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9912,"indexExpression":{"id":9910,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"3717:10:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9913,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"3731:9:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9915,"nodeType":"ExpressionStatement","src":"3705:35:39"},{"expression":{"id":9922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9916,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3844:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:39","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9820,"src":"3844:14:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9920,"indexExpression":{"id":9918,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"3859:9:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9921,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"3872:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9923,"nodeType":"ExpressionStatement","src":"3844:36:39"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9926,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3973:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"3973:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:39","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:39","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9932,"nodeType":"ExpressionStatement","src":"3973:17:39"},{"expression":{"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:39","subExpression":{"baseExpression":{"expression":{"id":9933,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"4076:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:39","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9820,"src":"4076:14:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9936,"indexExpression":{"id":9935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9869,"src":"4091:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9938,"nodeType":"ExpressionStatement","src":"4069:28:39"},{"expression":{"hexValue":"74727565","id":9939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9873,"id":9940,"nodeType":"Return","src":"4112:11:39"}]}}]},"documentation":{"id":9864,"nodeType":"StructuredDocumentation","src":"2653:157:39","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9947,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:39","nodeType":"FunctionDefinition","parameters":{"id":9870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9867,"mutability":"mutable","name":"set","nameLocation":"2844:3:39","nodeType":"VariableDeclaration","scope":9947,"src":"2832:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9866,"nodeType":"UserDefinedTypeName","pathNode":{"id":9865,"name":"Set","nameLocations":["2832:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"2832:3:39"},"referencedDeclaration":9821,"src":"2832:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9869,"mutability":"mutable","name":"value","nameLocation":"2857:5:39","nodeType":"VariableDeclaration","scope":9947,"src":"2849:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:39"},"returnParameters":{"id":9873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9947,"src":"2881:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9871,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:39"},"scope":10423,"src":"2815:1368:39","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9965,"nodeType":"Block","src":"4343:50:39","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":9958,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9951,"src":"4360:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:39","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":9820,"src":"4360:14:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9961,"indexExpression":{"id":9960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9953,"src":"4375:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9957,"id":9964,"nodeType":"Return","src":"4353:33:39"}]},"documentation":{"id":9948,"nodeType":"StructuredDocumentation","src":"4189:70:39","text":" @dev Returns true if the value is in the set. O(1)."},"id":9966,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:39","nodeType":"FunctionDefinition","parameters":{"id":9954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9951,"mutability":"mutable","name":"set","nameLocation":"4295:3:39","nodeType":"VariableDeclaration","scope":9966,"src":"4283:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9950,"nodeType":"UserDefinedTypeName","pathNode":{"id":9949,"name":"Set","nameLocations":["4283:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"4283:3:39"},"referencedDeclaration":9821,"src":"4283:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9953,"mutability":"mutable","name":"value","nameLocation":"4308:5:39","nodeType":"VariableDeclaration","scope":9966,"src":"4300:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:39"},"returnParameters":{"id":9957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9966,"src":"4337:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9955,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:39"},"scope":10423,"src":"4264:129:39","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9979,"nodeType":"Block","src":"4539:42:39","statements":[{"expression":{"expression":{"expression":{"id":9975,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9970,"src":"4556:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"4556:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:39","memberName":"length","nodeType":"MemberAccess","src":"4556:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9974,"id":9978,"nodeType":"Return","src":"4549:25:39"}]},"documentation":{"id":9967,"nodeType":"StructuredDocumentation","src":"4399:70:39","text":" @dev Returns the number of values on the set. O(1)."},"id":9980,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:39","nodeType":"FunctionDefinition","parameters":{"id":9971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9970,"mutability":"mutable","name":"set","nameLocation":"4503:3:39","nodeType":"VariableDeclaration","scope":9980,"src":"4491:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9969,"nodeType":"UserDefinedTypeName","pathNode":{"id":9968,"name":"Set","nameLocations":["4491:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"4491:3:39"},"referencedDeclaration":9821,"src":"4491:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:39"},"returnParameters":{"id":9974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9980,"src":"4530:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9972,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:39"},"scope":10423,"src":"4474:107:39","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9996,"nodeType":"Block","src":"4999:42:39","statements":[{"expression":{"baseExpression":{"expression":{"id":9991,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9984,"src":"5016:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":9992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"5016:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9994,"indexExpression":{"id":9993,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"5028:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9990,"id":9995,"nodeType":"Return","src":"5009:25:39"}]},"documentation":{"id":9981,"nodeType":"StructuredDocumentation","src":"4587:331:39","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9997,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:39","nodeType":"FunctionDefinition","parameters":{"id":9987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9984,"mutability":"mutable","name":"set","nameLocation":"4948:3:39","nodeType":"VariableDeclaration","scope":9997,"src":"4936:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9983,"nodeType":"UserDefinedTypeName","pathNode":{"id":9982,"name":"Set","nameLocations":["4936:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"4936:3:39"},"referencedDeclaration":9821,"src":"4936:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9986,"mutability":"mutable","name":"index","nameLocation":"4961:5:39","nodeType":"VariableDeclaration","scope":9997,"src":"4953:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9985,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:39"},"returnParameters":{"id":9990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9997,"src":"4990:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:39"},"scope":10423,"src":"4923:118:39","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10010,"nodeType":"Block","src":"5655:35:39","statements":[{"expression":{"expression":{"id":10007,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10001,"src":"5672:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:39","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"5672:11:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":10006,"id":10009,"nodeType":"Return","src":"5665:18:39"}]},"documentation":{"id":9998,"nodeType":"StructuredDocumentation","src":"5047:529:39","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10011,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:39","nodeType":"FunctionDefinition","parameters":{"id":10002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10001,"mutability":"mutable","name":"set","nameLocation":"5610:3:39","nodeType":"VariableDeclaration","scope":10011,"src":"5598:15:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10000,"nodeType":"UserDefinedTypeName","pathNode":{"id":9999,"name":"Set","nameLocations":["5598:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"5598:3:39"},"referencedDeclaration":9821,"src":"5598:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:39"},"returnParameters":{"id":10006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10011,"src":"5637:16:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10004,"nodeType":"ArrayTypeName","src":"5637:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:39"},"scope":10423,"src":"5581:109:39","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":10015,"members":[{"constant":false,"id":10014,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:39","nodeType":"VariableDeclaration","scope":10015,"src":"5743:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10013,"nodeType":"UserDefinedTypeName","pathNode":{"id":10012,"name":"Set","nameLocations":["5743:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"5743:3:39"},"referencedDeclaration":9821,"src":"5743:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:39","nodeType":"StructDefinition","scope":10423,"src":"5715:45:39","visibility":"public"},{"body":{"id":10032,"nodeType":"Block","src":"6006:47:39","statements":[{"expression":{"arguments":[{"expression":{"id":10027,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"6028:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"6028:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"6040:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10026,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"6023:4:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10025,"id":10031,"nodeType":"Return","src":"6016:30:39"}]},"documentation":{"id":10016,"nodeType":"StructuredDocumentation","src":"5766:159:39","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10033,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:39","nodeType":"FunctionDefinition","parameters":{"id":10022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10019,"mutability":"mutable","name":"set","nameLocation":"5962:3:39","nodeType":"VariableDeclaration","scope":10033,"src":"5943:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10018,"nodeType":"UserDefinedTypeName","pathNode":{"id":10017,"name":"Bytes32Set","nameLocations":["5943:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"5943:10:39"},"referencedDeclaration":10015,"src":"5943:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10021,"mutability":"mutable","name":"value","nameLocation":"5975:5:39","nodeType":"VariableDeclaration","scope":10033,"src":"5967:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:39"},"returnParameters":{"id":10025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10033,"src":"6000:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10023,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:39"},"scope":10423,"src":"5930:123:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10050,"nodeType":"Block","src":"6300:50:39","statements":[{"expression":{"arguments":[{"expression":{"id":10045,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"6325:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"6325:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"6337:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10044,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"6317:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10043,"id":10049,"nodeType":"Return","src":"6310:33:39"}]},"documentation":{"id":10034,"nodeType":"StructuredDocumentation","src":"6059:157:39","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10051,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:39","nodeType":"FunctionDefinition","parameters":{"id":10040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10037,"mutability":"mutable","name":"set","nameLocation":"6256:3:39","nodeType":"VariableDeclaration","scope":10051,"src":"6237:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10036,"nodeType":"UserDefinedTypeName","pathNode":{"id":10035,"name":"Bytes32Set","nameLocations":["6237:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"6237:10:39"},"referencedDeclaration":10015,"src":"6237:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10039,"mutability":"mutable","name":"value","nameLocation":"6269:5:39","nodeType":"VariableDeclaration","scope":10051,"src":"6261:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:39"},"returnParameters":{"id":10043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10051,"src":"6294:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10041,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:39"},"scope":10423,"src":"6221:129:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10068,"nodeType":"Block","src":"6517:52:39","statements":[{"expression":{"arguments":[{"expression":{"id":10063,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10055,"src":"6544:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"6544:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"6556:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10062,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9966,"src":"6534:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10061,"id":10067,"nodeType":"Return","src":"6527:35:39"}]},"documentation":{"id":10052,"nodeType":"StructuredDocumentation","src":"6356:70:39","text":" @dev Returns true if the value is in the set. O(1)."},"id":10069,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:39","nodeType":"FunctionDefinition","parameters":{"id":10058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10055,"mutability":"mutable","name":"set","nameLocation":"6468:3:39","nodeType":"VariableDeclaration","scope":10069,"src":"6449:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10054,"nodeType":"UserDefinedTypeName","pathNode":{"id":10053,"name":"Bytes32Set","nameLocations":["6449:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"6449:10:39"},"referencedDeclaration":10015,"src":"6449:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10057,"mutability":"mutable","name":"value","nameLocation":"6481:5:39","nodeType":"VariableDeclaration","scope":10069,"src":"6473:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:39"},"returnParameters":{"id":10061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10069,"src":"6511:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10059,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:39"},"scope":10423,"src":"6431:138:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10083,"nodeType":"Block","src":"6722:43:39","statements":[{"expression":{"arguments":[{"expression":{"id":10079,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10073,"src":"6747:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"6747:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10078,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9980,"src":"6739:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10077,"id":10082,"nodeType":"Return","src":"6732:26:39"}]},"documentation":{"id":10070,"nodeType":"StructuredDocumentation","src":"6575:70:39","text":" @dev Returns the number of values in the set. O(1)."},"id":10084,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:39","nodeType":"FunctionDefinition","parameters":{"id":10074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10073,"mutability":"mutable","name":"set","nameLocation":"6685:3:39","nodeType":"VariableDeclaration","scope":10084,"src":"6666:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10072,"nodeType":"UserDefinedTypeName","pathNode":{"id":10071,"name":"Bytes32Set","nameLocations":["6666:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"6666:10:39"},"referencedDeclaration":10015,"src":"6666:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:39"},"returnParameters":{"id":10077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10084,"src":"6713:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10075,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:39"},"scope":10423,"src":"6650:115:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10101,"nodeType":"Block","src":"7190:46:39","statements":[{"expression":{"arguments":[{"expression":{"id":10096,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"7211:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"7211:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10098,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10090,"src":"7223:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10095,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"7207:3:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10094,"id":10100,"nodeType":"Return","src":"7200:29:39"}]},"documentation":{"id":10085,"nodeType":"StructuredDocumentation","src":"6771:331:39","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10102,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:39","nodeType":"FunctionDefinition","parameters":{"id":10091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10088,"mutability":"mutable","name":"set","nameLocation":"7138:3:39","nodeType":"VariableDeclaration","scope":10102,"src":"7119:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10087,"nodeType":"UserDefinedTypeName","pathNode":{"id":10086,"name":"Bytes32Set","nameLocations":["7119:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"7119:10:39"},"referencedDeclaration":10015,"src":"7119:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10090,"mutability":"mutable","name":"index","nameLocation":"7151:5:39","nodeType":"VariableDeclaration","scope":10102,"src":"7143:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:39"},"returnParameters":{"id":10094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10102,"src":"7181:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:39"},"scope":10423,"src":"7107:129:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10131,"nodeType":"Block","src":"7857:192:39","statements":[{"assignments":[10116],"declarations":[{"constant":false,"id":10116,"mutability":"mutable","name":"store","nameLocation":"7884:5:39","nodeType":"VariableDeclaration","scope":10131,"src":"7867:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10115,"nodeType":"ArrayTypeName","src":"7867:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10121,"initialValue":{"arguments":[{"expression":{"id":10118,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"7900:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"7900:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10117,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"7892:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:39"},{"assignments":[10126],"declarations":[{"constant":false,"id":10126,"mutability":"mutable","name":"result","nameLocation":"7938:6:39","nodeType":"VariableDeclaration","scope":10131,"src":"7921:23:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10125,"nodeType":"ArrayTypeName","src":"7921:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10127,"nodeType":"VariableDeclarationStatement","src":"7921:23:39"},{"AST":{"nodeType":"YulBlock","src":"7980:39:39","statements":[{"nodeType":"YulAssignment","src":"7994:15:39","value":{"name":"store","nodeType":"YulIdentifier","src":"8004:5:39"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7994:6:39"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10126,"isOffset":false,"isSlot":false,"src":"7994:6:39","valueSize":1},{"declaration":10116,"isOffset":false,"isSlot":false,"src":"8004:5:39","valueSize":1}],"flags":["memory-safe"],"id":10128,"nodeType":"InlineAssembly","src":"7955:64:39"},{"expression":{"id":10129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"8036:6:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":10111,"id":10130,"nodeType":"Return","src":"8029:13:39"}]},"documentation":{"id":10103,"nodeType":"StructuredDocumentation","src":"7242:529:39","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10132,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:39","nodeType":"FunctionDefinition","parameters":{"id":10107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10106,"mutability":"mutable","name":"set","nameLocation":"7811:3:39","nodeType":"VariableDeclaration","scope":10132,"src":"7792:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10105,"nodeType":"UserDefinedTypeName","pathNode":{"id":10104,"name":"Bytes32Set","nameLocations":["7792:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10015,"src":"7792:10:39"},"referencedDeclaration":10015,"src":"7792:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10015_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:39"},"returnParameters":{"id":10111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10132,"src":"7839:16:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10109,"nodeType":"ArrayTypeName","src":"7839:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:39"},"scope":10423,"src":"7776:273:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":10136,"members":[{"constant":false,"id":10135,"mutability":"mutable","name":"_inner","nameLocation":"8106:6:39","nodeType":"VariableDeclaration","scope":10136,"src":"8102:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10134,"nodeType":"UserDefinedTypeName","pathNode":{"id":10133,"name":"Set","nameLocations":["8102:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"8102:3:39"},"referencedDeclaration":9821,"src":"8102:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8081:10:39","nodeType":"StructDefinition","scope":10423,"src":"8074:45:39","visibility":"public"},{"body":{"id":10162,"nodeType":"Block","src":"8365:74:39","statements":[{"expression":{"arguments":[{"expression":{"id":10148,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10140,"src":"8387:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8391:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"8387:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"8423:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10154,"name":"uint160","nodeType":"ElementaryTypeName","src":"8415:7:39","typeDescriptions":{}}},"id":10157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8407:7:39","typeDescriptions":{}}},"id":10158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8407:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8399:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8399:7:39","typeDescriptions":{}}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10147,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"8382:4:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8382:50:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10146,"id":10161,"nodeType":"Return","src":"8375:57:39"}]},"documentation":{"id":10137,"nodeType":"StructuredDocumentation","src":"8125:159:39","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10163,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8298:3:39","nodeType":"FunctionDefinition","parameters":{"id":10143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10140,"mutability":"mutable","name":"set","nameLocation":"8321:3:39","nodeType":"VariableDeclaration","scope":10163,"src":"8302:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10139,"nodeType":"UserDefinedTypeName","pathNode":{"id":10138,"name":"AddressSet","nameLocations":["8302:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"8302:10:39"},"referencedDeclaration":10136,"src":"8302:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10142,"mutability":"mutable","name":"value","nameLocation":"8334:5:39","nodeType":"VariableDeclaration","scope":10163,"src":"8326:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10141,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8301:39:39"},"returnParameters":{"id":10146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10163,"src":"8359:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10144,"name":"bool","nodeType":"ElementaryTypeName","src":"8359:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8358:6:39"},"scope":10423,"src":"8289:150:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10189,"nodeType":"Block","src":"8686:77:39","statements":[{"expression":{"arguments":[{"expression":{"id":10175,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"8711:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8715:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"8711:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10169,"src":"8747:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10181,"name":"uint160","nodeType":"ElementaryTypeName","src":"8739:7:39","typeDescriptions":{}}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10179,"name":"uint256","nodeType":"ElementaryTypeName","src":"8731:7:39","typeDescriptions":{}}},"id":10185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8723:7:39","typeDescriptions":{}}},"id":10186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10174,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"8703:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8703:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10173,"id":10188,"nodeType":"Return","src":"8696:60:39"}]},"documentation":{"id":10164,"nodeType":"StructuredDocumentation","src":"8445:157:39","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10190,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8616:6:39","nodeType":"FunctionDefinition","parameters":{"id":10170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10167,"mutability":"mutable","name":"set","nameLocation":"8642:3:39","nodeType":"VariableDeclaration","scope":10190,"src":"8623:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10166,"nodeType":"UserDefinedTypeName","pathNode":{"id":10165,"name":"AddressSet","nameLocations":["8623:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"8623:10:39"},"referencedDeclaration":10136,"src":"8623:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10169,"mutability":"mutable","name":"value","nameLocation":"8655:5:39","nodeType":"VariableDeclaration","scope":10190,"src":"8647:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10168,"name":"address","nodeType":"ElementaryTypeName","src":"8647:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8622:39:39"},"returnParameters":{"id":10173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10190,"src":"8680:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10171,"name":"bool","nodeType":"ElementaryTypeName","src":"8680:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8679:6:39"},"scope":10423,"src":"8607:156:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10216,"nodeType":"Block","src":"8930:79:39","statements":[{"expression":{"arguments":[{"expression":{"id":10202,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10194,"src":"8957:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8961:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"8957:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10196,"src":"8993:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10208,"name":"uint160","nodeType":"ElementaryTypeName","src":"8985:7:39","typeDescriptions":{}}},"id":10211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10206,"name":"uint256","nodeType":"ElementaryTypeName","src":"8977:7:39","typeDescriptions":{}}},"id":10212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8977:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8969:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8969:7:39","typeDescriptions":{}}},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8969:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10201,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9966,"src":"8947:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:55:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10200,"id":10215,"nodeType":"Return","src":"8940:62:39"}]},"documentation":{"id":10191,"nodeType":"StructuredDocumentation","src":"8769:70:39","text":" @dev Returns true if the value is in the set. O(1)."},"id":10217,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8853:8:39","nodeType":"FunctionDefinition","parameters":{"id":10197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10194,"mutability":"mutable","name":"set","nameLocation":"8881:3:39","nodeType":"VariableDeclaration","scope":10217,"src":"8862:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10193,"nodeType":"UserDefinedTypeName","pathNode":{"id":10192,"name":"AddressSet","nameLocations":["8862:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"8862:10:39"},"referencedDeclaration":10136,"src":"8862:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10196,"mutability":"mutable","name":"value","nameLocation":"8894:5:39","nodeType":"VariableDeclaration","scope":10217,"src":"8886:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10195,"name":"address","nodeType":"ElementaryTypeName","src":"8886:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8861:39:39"},"returnParameters":{"id":10200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10217,"src":"8924:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10198,"name":"bool","nodeType":"ElementaryTypeName","src":"8924:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8923:6:39"},"scope":10423,"src":"8844:165:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10231,"nodeType":"Block","src":"9162:43:39","statements":[{"expression":{"arguments":[{"expression":{"id":10227,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"9187:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9191:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"9187:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10226,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9980,"src":"9179:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9179:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10225,"id":10230,"nodeType":"Return","src":"9172:26:39"}]},"documentation":{"id":10218,"nodeType":"StructuredDocumentation","src":"9015:70:39","text":" @dev Returns the number of values in the set. O(1)."},"id":10232,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9099:6:39","nodeType":"FunctionDefinition","parameters":{"id":10222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10221,"mutability":"mutable","name":"set","nameLocation":"9125:3:39","nodeType":"VariableDeclaration","scope":10232,"src":"9106:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10220,"nodeType":"UserDefinedTypeName","pathNode":{"id":10219,"name":"AddressSet","nameLocations":["9106:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"9106:10:39"},"referencedDeclaration":10136,"src":"9106:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9105:24:39"},"returnParameters":{"id":10225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10232,"src":"9153:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10223,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9152:9:39"},"scope":10423,"src":"9090:115:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10258,"nodeType":"Block","src":"9630:73:39","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10250,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10236,"src":"9675:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9679:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"9675:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10252,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"9687:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10249,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"9671:3:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9663:7:39","typeDescriptions":{}}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:31:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10245,"name":"uint160","nodeType":"ElementaryTypeName","src":"9655:7:39","typeDescriptions":{}}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9647:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10243,"name":"address","nodeType":"ElementaryTypeName","src":"9647:7:39","typeDescriptions":{}}},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9647:49:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10242,"id":10257,"nodeType":"Return","src":"9640:56:39"}]},"documentation":{"id":10233,"nodeType":"StructuredDocumentation","src":"9211:331:39","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10259,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9556:2:39","nodeType":"FunctionDefinition","parameters":{"id":10239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10236,"mutability":"mutable","name":"set","nameLocation":"9578:3:39","nodeType":"VariableDeclaration","scope":10259,"src":"9559:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10235,"nodeType":"UserDefinedTypeName","pathNode":{"id":10234,"name":"AddressSet","nameLocations":["9559:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"9559:10:39"},"referencedDeclaration":10136,"src":"9559:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10238,"mutability":"mutable","name":"index","nameLocation":"9591:5:39","nodeType":"VariableDeclaration","scope":10259,"src":"9583:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10237,"name":"uint256","nodeType":"ElementaryTypeName","src":"9583:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9558:39:39"},"returnParameters":{"id":10242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10259,"src":"9621:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10240,"name":"address","nodeType":"ElementaryTypeName","src":"9621:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9620:9:39"},"scope":10423,"src":"9547:156:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10288,"nodeType":"Block","src":"10324:192:39","statements":[{"assignments":[10273],"declarations":[{"constant":false,"id":10273,"mutability":"mutable","name":"store","nameLocation":"10351:5:39","nodeType":"VariableDeclaration","scope":10288,"src":"10334:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10334:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10272,"nodeType":"ArrayTypeName","src":"10334:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10278,"initialValue":{"arguments":[{"expression":{"id":10275,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10263,"src":"10367:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10371:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"10367:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10274,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"10359:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10359:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10334:44:39"},{"assignments":[10283],"declarations":[{"constant":false,"id":10283,"mutability":"mutable","name":"result","nameLocation":"10405:6:39","nodeType":"VariableDeclaration","scope":10288,"src":"10388:23:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10281,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10282,"nodeType":"ArrayTypeName","src":"10388:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":10284,"nodeType":"VariableDeclarationStatement","src":"10388:23:39"},{"AST":{"nodeType":"YulBlock","src":"10447:39:39","statements":[{"nodeType":"YulAssignment","src":"10461:15:39","value":{"name":"store","nodeType":"YulIdentifier","src":"10471:5:39"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10461:6:39"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10283,"isOffset":false,"isSlot":false,"src":"10461:6:39","valueSize":1},{"declaration":10273,"isOffset":false,"isSlot":false,"src":"10471:5:39","valueSize":1}],"flags":["memory-safe"],"id":10285,"nodeType":"InlineAssembly","src":"10422:64:39"},{"expression":{"id":10286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10283,"src":"10503:6:39","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":10268,"id":10287,"nodeType":"Return","src":"10496:13:39"}]},"documentation":{"id":10260,"nodeType":"StructuredDocumentation","src":"9709:529:39","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10289,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10252:6:39","nodeType":"FunctionDefinition","parameters":{"id":10264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10263,"mutability":"mutable","name":"set","nameLocation":"10278:3:39","nodeType":"VariableDeclaration","scope":10289,"src":"10259:22:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10262,"nodeType":"UserDefinedTypeName","pathNode":{"id":10261,"name":"AddressSet","nameLocations":["10259:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":10136,"src":"10259:10:39"},"referencedDeclaration":10136,"src":"10259:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10136_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10258:24:39"},"returnParameters":{"id":10268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10289,"src":"10306:16:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10265,"name":"address","nodeType":"ElementaryTypeName","src":"10306:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10266,"nodeType":"ArrayTypeName","src":"10306:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10305:18:39"},"scope":10423,"src":"10243:273:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":10293,"members":[{"constant":false,"id":10292,"mutability":"mutable","name":"_inner","nameLocation":"10567:6:39","nodeType":"VariableDeclaration","scope":10293,"src":"10563:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10291,"nodeType":"UserDefinedTypeName","pathNode":{"id":10290,"name":"Set","nameLocations":["10563:3:39"],"nodeType":"IdentifierPath","referencedDeclaration":9821,"src":"10563:3:39"},"referencedDeclaration":9821,"src":"10563:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10545:7:39","nodeType":"StructDefinition","scope":10423,"src":"10538:42:39","visibility":"public"},{"body":{"id":10313,"nodeType":"Block","src":"10823:56:39","statements":[{"expression":{"arguments":[{"expression":{"id":10305,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10297,"src":"10845:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10849:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"10845:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10299,"src":"10865:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10857:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10857:7:39","typeDescriptions":{}}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10857:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10304,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"10840:4:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10303,"id":10312,"nodeType":"Return","src":"10833:39:39"}]},"documentation":{"id":10294,"nodeType":"StructuredDocumentation","src":"10586:159:39","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10314,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10759:3:39","nodeType":"FunctionDefinition","parameters":{"id":10300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10297,"mutability":"mutable","name":"set","nameLocation":"10779:3:39","nodeType":"VariableDeclaration","scope":10314,"src":"10763:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10296,"nodeType":"UserDefinedTypeName","pathNode":{"id":10295,"name":"UintSet","nameLocations":["10763:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"10763:7:39"},"referencedDeclaration":10293,"src":"10763:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10299,"mutability":"mutable","name":"value","nameLocation":"10792:5:39","nodeType":"VariableDeclaration","scope":10314,"src":"10784:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10298,"name":"uint256","nodeType":"ElementaryTypeName","src":"10784:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10762:36:39"},"returnParameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10314,"src":"10817:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10301,"name":"bool","nodeType":"ElementaryTypeName","src":"10817:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10816:6:39"},"scope":10423,"src":"10750:129:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10334,"nodeType":"Block","src":"11123:59:39","statements":[{"expression":{"arguments":[{"expression":{"id":10326,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10318,"src":"11148:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11152:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"11148:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10320,"src":"11168:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11160:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11160:7:39","typeDescriptions":{}}},"id":10331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11160:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10325,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"11140:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:35:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10324,"id":10333,"nodeType":"Return","src":"11133:42:39"}]},"documentation":{"id":10315,"nodeType":"StructuredDocumentation","src":"10885:157:39","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10335,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11056:6:39","nodeType":"FunctionDefinition","parameters":{"id":10321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10318,"mutability":"mutable","name":"set","nameLocation":"11079:3:39","nodeType":"VariableDeclaration","scope":10335,"src":"11063:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10317,"nodeType":"UserDefinedTypeName","pathNode":{"id":10316,"name":"UintSet","nameLocations":["11063:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"11063:7:39"},"referencedDeclaration":10293,"src":"11063:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10320,"mutability":"mutable","name":"value","nameLocation":"11092:5:39","nodeType":"VariableDeclaration","scope":10335,"src":"11084:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10319,"name":"uint256","nodeType":"ElementaryTypeName","src":"11084:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11062:36:39"},"returnParameters":{"id":10324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10335,"src":"11117:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10322,"name":"bool","nodeType":"ElementaryTypeName","src":"11117:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11116:6:39"},"scope":10423,"src":"11047:135:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10355,"nodeType":"Block","src":"11346:61:39","statements":[{"expression":{"arguments":[{"expression":{"id":10347,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10339,"src":"11373:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11377:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"11373:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10341,"src":"11393:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11385:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11385:7:39","typeDescriptions":{}}},"id":10352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11385:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10346,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9966,"src":"11363:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11363:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10345,"id":10354,"nodeType":"Return","src":"11356:44:39"}]},"documentation":{"id":10336,"nodeType":"StructuredDocumentation","src":"11188:70:39","text":" @dev Returns true if the value is in the set. O(1)."},"id":10356,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11272:8:39","nodeType":"FunctionDefinition","parameters":{"id":10342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10339,"mutability":"mutable","name":"set","nameLocation":"11297:3:39","nodeType":"VariableDeclaration","scope":10356,"src":"11281:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10338,"nodeType":"UserDefinedTypeName","pathNode":{"id":10337,"name":"UintSet","nameLocations":["11281:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"11281:7:39"},"referencedDeclaration":10293,"src":"11281:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10341,"mutability":"mutable","name":"value","nameLocation":"11310:5:39","nodeType":"VariableDeclaration","scope":10356,"src":"11302:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:36:39"},"returnParameters":{"id":10345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10356,"src":"11340:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10343,"name":"bool","nodeType":"ElementaryTypeName","src":"11340:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11339:6:39"},"scope":10423,"src":"11263:144:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10370,"nodeType":"Block","src":"11557:43:39","statements":[{"expression":{"arguments":[{"expression":{"id":10366,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10360,"src":"11582:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11586:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"11582:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10365,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9980,"src":"11574:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11574:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10364,"id":10369,"nodeType":"Return","src":"11567:26:39"}]},"documentation":{"id":10357,"nodeType":"StructuredDocumentation","src":"11413:70:39","text":" @dev Returns the number of values in the set. O(1)."},"id":10371,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11497:6:39","nodeType":"FunctionDefinition","parameters":{"id":10361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10360,"mutability":"mutable","name":"set","nameLocation":"11520:3:39","nodeType":"VariableDeclaration","scope":10371,"src":"11504:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10359,"nodeType":"UserDefinedTypeName","pathNode":{"id":10358,"name":"UintSet","nameLocations":["11504:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"11504:7:39"},"referencedDeclaration":10293,"src":"11504:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11503:21:39"},"returnParameters":{"id":10364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10371,"src":"11548:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11548:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11547:9:39"},"scope":10423,"src":"11488:112:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10391,"nodeType":"Block","src":"12022:55:39","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":10385,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10375,"src":"12051:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12055:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"12051:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10387,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10377,"src":"12063:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10384,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"12047:3:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12047:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12039:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10382,"name":"uint256","nodeType":"ElementaryTypeName","src":"12039:7:39","typeDescriptions":{}}},"id":10389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12039:31:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10381,"id":10390,"nodeType":"Return","src":"12032:38:39"}]},"documentation":{"id":10372,"nodeType":"StructuredDocumentation","src":"11606:331:39","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10392,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11951:2:39","nodeType":"FunctionDefinition","parameters":{"id":10378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10375,"mutability":"mutable","name":"set","nameLocation":"11970:3:39","nodeType":"VariableDeclaration","scope":10392,"src":"11954:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10374,"nodeType":"UserDefinedTypeName","pathNode":{"id":10373,"name":"UintSet","nameLocations":["11954:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"11954:7:39"},"referencedDeclaration":10293,"src":"11954:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10377,"mutability":"mutable","name":"index","nameLocation":"11983:5:39","nodeType":"VariableDeclaration","scope":10392,"src":"11975:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10376,"name":"uint256","nodeType":"ElementaryTypeName","src":"11975:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:36:39"},"returnParameters":{"id":10381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10392,"src":"12013:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10379,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:9:39"},"scope":10423,"src":"11942:135:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10421,"nodeType":"Block","src":"12695:192:39","statements":[{"assignments":[10406],"declarations":[{"constant":false,"id":10406,"mutability":"mutable","name":"store","nameLocation":"12722:5:39","nodeType":"VariableDeclaration","scope":10421,"src":"12705:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12705:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10405,"nodeType":"ArrayTypeName","src":"12705:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10411,"initialValue":{"arguments":[{"expression":{"id":10408,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10396,"src":"12738:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12742:6:39","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10292,"src":"12738:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9821_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10407,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"12730:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9821_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12730:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12705:44:39"},{"assignments":[10416],"declarations":[{"constant":false,"id":10416,"mutability":"mutable","name":"result","nameLocation":"12776:6:39","nodeType":"VariableDeclaration","scope":10421,"src":"12759:23:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10414,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10415,"nodeType":"ArrayTypeName","src":"12759:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10417,"nodeType":"VariableDeclarationStatement","src":"12759:23:39"},{"AST":{"nodeType":"YulBlock","src":"12818:39:39","statements":[{"nodeType":"YulAssignment","src":"12832:15:39","value":{"name":"store","nodeType":"YulIdentifier","src":"12842:5:39"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12832:6:39"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10416,"isOffset":false,"isSlot":false,"src":"12832:6:39","valueSize":1},{"declaration":10406,"isOffset":false,"isSlot":false,"src":"12842:5:39","valueSize":1}],"flags":["memory-safe"],"id":10418,"nodeType":"InlineAssembly","src":"12793:64:39"},{"expression":{"id":10419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"12874:6:39","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":10401,"id":10420,"nodeType":"Return","src":"12867:13:39"}]},"documentation":{"id":10393,"nodeType":"StructuredDocumentation","src":"12083:529:39","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10422,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12626:6:39","nodeType":"FunctionDefinition","parameters":{"id":10397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10396,"mutability":"mutable","name":"set","nameLocation":"12649:3:39","nodeType":"VariableDeclaration","scope":10422,"src":"12633:19:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10395,"nodeType":"UserDefinedTypeName","pathNode":{"id":10394,"name":"UintSet","nameLocations":["12633:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":10293,"src":"12633:7:39"},"referencedDeclaration":10293,"src":"12633:7:39","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10293_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12632:21:39"},"returnParameters":{"id":10401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"12677:16:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12677:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10399,"nodeType":"ArrayTypeName","src":"12677:9:39","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12676:18:39"},"scope":10423,"src":"12617:270:39","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10424,"src":"1330:11559:39","usedErrors":[],"usedEvents":[]}],"src":"205:12685:39"},"id":39},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[6320],"SafeCast":[8085],"Time":[10697]},"id":10698,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10425,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:40"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":10427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10698,"sourceUnit":6321,"src":"130:38:40","symbolAliases":[{"foreign":{"id":10426,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"138:4:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":10429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10698,"sourceUnit":8086,"src":"169:46:40","symbolAliases":[{"foreign":{"id":10428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"177:8:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":10430,"nodeType":"StructuredDocumentation","src":"217:422:40","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":10697,"linearizedBaseContracts":[10697],"name":"Time","nameLocation":"648:4:40","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10432,"libraryName":{"id":10431,"name":"Time","nameLocations":["665:4:40"],"nodeType":"IdentifierPath","referencedDeclaration":10697,"src":"665:4:40"},"nodeType":"UsingForDirective","src":"659:17:40"},{"body":{"id":10444,"nodeType":"Block","src":"802:58:40","statements":[{"expression":{"arguments":[{"expression":{"id":10440,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"837:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:40","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10438,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"819:8:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":10439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:40","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"819:17:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":10442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":10437,"id":10443,"nodeType":"Return","src":"812:41:40"}]},"documentation":{"id":10433,"nodeType":"StructuredDocumentation","src":"682:63:40","text":" @dev Get the block timestamp as a Timepoint."},"id":10445,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:40","nodeType":"FunctionDefinition","parameters":{"id":10434,"nodeType":"ParameterList","parameters":[],"src":"768:2:40"},"returnParameters":{"id":10437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10445,"src":"794:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10435,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:40"},"scope":10697,"src":"750:110:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10457,"nodeType":"Block","src":"985:55:40","statements":[{"expression":{"arguments":[{"expression":{"id":10453,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"1020:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:40","memberName":"number","nodeType":"MemberAccess","src":"1020:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"1002:8:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8085_$","typeString":"type(library SafeCast)"}},"id":10452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:40","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"1002:17:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":10455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":10450,"id":10456,"nodeType":"Return","src":"995:38:40"}]},"documentation":{"id":10446,"nodeType":"StructuredDocumentation","src":"866:60:40","text":" @dev Get the block number as a Timepoint."},"id":10458,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:40","nodeType":"FunctionDefinition","parameters":{"id":10447,"nodeType":"ParameterList","parameters":[],"src":"951:2:40"},"returnParameters":{"id":10450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10458,"src":"977:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10448,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:40"},"scope":10697,"src":"931:109:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":10460,"name":"Delay","nameLocation":"2377:5:40","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:40","underlyingType":{"id":10459,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":10474,"nodeType":"Block","src":"2572:44:40","statements":[{"expression":{"arguments":[{"id":10471,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10463,"src":"2600:8:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":10469,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"2589:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$10460_$","typeString":"type(Time.Delay)"}},"id":10470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:40","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:40","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":10472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"functionReturnParameters":10468,"id":10473,"nodeType":"Return","src":"2582:27:40"}]},"documentation":{"id":10461,"nodeType":"StructuredDocumentation","src":"2400:103:40","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":10475,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:40","nodeType":"FunctionDefinition","parameters":{"id":10464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10463,"mutability":"mutable","name":"duration","nameLocation":"2532:8:40","nodeType":"VariableDeclaration","scope":10475,"src":"2525:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10462,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:40"},"returnParameters":{"id":10468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10475,"src":"2565:5:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10466,"nodeType":"UserDefinedTypeName","pathNode":{"id":10465,"name":"Delay","nameLocations":["2565:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"2565:5:40"},"referencedDeclaration":10460,"src":"2565:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:40"},"scope":10697,"src":"2508:108:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10512,"nodeType":"Block","src":"3016:159:40","statements":[{"expression":{"id":10497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":10490,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10484,"src":"3027:11:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10491,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10486,"src":"3040:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10492,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10488,"src":"3052:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":10493,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3026:33:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10494,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10479,"src":"3062:4:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"id":10495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3067:6:40","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":10658,"src":"3062:11:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$10460_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":10496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"src":"3026:49:40","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10498,"nodeType":"ExpressionStatement","src":"3026:49:40"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":10501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10499,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10488,"src":"3092:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10500,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"3102:9:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3092:19:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":10506,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10484,"src":"3136:11:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10507,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10486,"src":"3149:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10508,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10488,"src":"3161:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":10509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3135:33:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3092:76:40","trueExpression":{"components":[{"id":10502,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10486,"src":"3115:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":10503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":10504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":10505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:18:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":10489,"id":10511,"nodeType":"Return","src":"3085:83:40"}]},"documentation":{"id":10476,"nodeType":"StructuredDocumentation","src":"2622:241:40","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":10513,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:40","nodeType":"FunctionDefinition","parameters":{"id":10482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10479,"mutability":"mutable","name":"self","nameLocation":"2903:4:40","nodeType":"VariableDeclaration","scope":10513,"src":"2897:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10478,"nodeType":"UserDefinedTypeName","pathNode":{"id":10477,"name":"Delay","nameLocations":["2897:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"2897:5:40"},"referencedDeclaration":10460,"src":"2897:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":10481,"mutability":"mutable","name":"timepoint","nameLocation":"2924:9:40","nodeType":"VariableDeclaration","scope":10513,"src":"2917:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10480,"name":"uint48","nodeType":"ElementaryTypeName","src":"2917:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:52:40"},"returnParameters":{"id":10489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10484,"mutability":"mutable","name":"valueBefore","nameLocation":"2969:11:40","nodeType":"VariableDeclaration","scope":10513,"src":"2962:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10483,"name":"uint32","nodeType":"ElementaryTypeName","src":"2962:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10486,"mutability":"mutable","name":"valueAfter","nameLocation":"2989:10:40","nodeType":"VariableDeclaration","scope":10513,"src":"2982:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10485,"name":"uint32","nodeType":"ElementaryTypeName","src":"2982:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10488,"mutability":"mutable","name":"effect","nameLocation":"3008:6:40","nodeType":"VariableDeclaration","scope":10513,"src":"3001:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10487,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2961:54:40"},"scope":10697,"src":"2868:307:40","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":10532,"nodeType":"Block","src":"3499:53:40","statements":[{"expression":{"arguments":[{"id":10527,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10517,"src":"3527:4:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10528,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"3533:9:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:11:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":10526,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"3516:10:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$10460_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":10530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:29:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":10525,"id":10531,"nodeType":"Return","src":"3509:36:40"}]},"documentation":{"id":10514,"nodeType":"StructuredDocumentation","src":"3181:207:40","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":10533,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3402:7:40","nodeType":"FunctionDefinition","parameters":{"id":10518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10517,"mutability":"mutable","name":"self","nameLocation":"3416:4:40","nodeType":"VariableDeclaration","scope":10533,"src":"3410:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10516,"nodeType":"UserDefinedTypeName","pathNode":{"id":10515,"name":"Delay","nameLocations":["3410:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"3410:5:40"},"referencedDeclaration":10460,"src":"3410:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3409:12:40"},"returnParameters":{"id":10525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10520,"mutability":"mutable","name":"valueBefore","nameLocation":"3452:11:40","nodeType":"VariableDeclaration","scope":10533,"src":"3445:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10519,"name":"uint32","nodeType":"ElementaryTypeName","src":"3445:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10522,"mutability":"mutable","name":"valueAfter","nameLocation":"3472:10:40","nodeType":"VariableDeclaration","scope":10533,"src":"3465:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10521,"name":"uint32","nodeType":"ElementaryTypeName","src":"3465:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10524,"mutability":"mutable","name":"effect","nameLocation":"3491:6:40","nodeType":"VariableDeclaration","scope":10533,"src":"3484:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10523,"name":"uint48","nodeType":"ElementaryTypeName","src":"3484:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3444:54:40"},"scope":10697,"src":"3393:159:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10550,"nodeType":"Block","src":"3665:74:40","statements":[{"assignments":[10543,null,null],"declarations":[{"constant":false,"id":10543,"mutability":"mutable","name":"delay","nameLocation":"3683:5:40","nodeType":"VariableDeclaration","scope":10550,"src":"3676:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10542,"name":"uint32","nodeType":"ElementaryTypeName","src":"3676:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":10547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10544,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10537,"src":"3696:4:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"id":10545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:7:40","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":10533,"src":"3696:12:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$10460_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:14:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3675:35:40"},{"expression":{"id":10548,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"3727:5:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":10541,"id":10549,"nodeType":"Return","src":"3720:12:40"}]},"documentation":{"id":10534,"nodeType":"StructuredDocumentation","src":"3558:46:40","text":" @dev Get the current value."},"id":10551,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3618:3:40","nodeType":"FunctionDefinition","parameters":{"id":10538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10537,"mutability":"mutable","name":"self","nameLocation":"3628:4:40","nodeType":"VariableDeclaration","scope":10551,"src":"3622:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10536,"nodeType":"UserDefinedTypeName","pathNode":{"id":10535,"name":"Delay","nameLocations":["3622:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"3622:5:40"},"referencedDeclaration":10460,"src":"3622:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3621:12:40"},"returnParameters":{"id":10541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10551,"src":"3657:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10539,"name":"uint32","nodeType":"ElementaryTypeName","src":"3657:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3656:8:40"},"scope":10697,"src":"3609:130:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10606,"nodeType":"Block","src":"4189:234:40","statements":[{"assignments":[10568],"declarations":[{"constant":false,"id":10568,"mutability":"mutable","name":"value","nameLocation":"4206:5:40","nodeType":"VariableDeclaration","scope":10606,"src":"4199:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10567,"name":"uint32","nodeType":"ElementaryTypeName","src":"4199:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":10572,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10569,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10555,"src":"4214:4:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4219:3:40","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":10551,"src":"4214:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$10460_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":10571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:10:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4199:25:40"},{"assignments":[10574],"declarations":[{"constant":false,"id":10574,"mutability":"mutable","name":"setback","nameLocation":"4241:7:40","nodeType":"VariableDeclaration","scope":10606,"src":"4234:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10573,"name":"uint32","nodeType":"ElementaryTypeName","src":"4234:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":10590,"initialValue":{"arguments":[{"arguments":[{"id":10579,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10559,"src":"4267:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":10582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10568,"src":"4279:5:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10581,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10557,"src":"4287:8:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4279:16:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":10586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4317:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":10587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4279:39:40","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":10585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10568,"src":"4298:5:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10584,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10557,"src":"4306:8:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4298:16:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":10577,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"4258:4:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6320_$","typeString":"type(library Math)"}},"id":10578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:3:40","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"4258:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":10588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:61:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4251:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":10575,"name":"uint32","nodeType":"ElementaryTypeName","src":"4251:6:40","typeDescriptions":{}}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:69:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4234:86:40"},{"expression":{"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10591,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10565,"src":"4330:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10592,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"4339:9:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":10593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:11:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10594,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10574,"src":"4353:7:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4339:21:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4330:30:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":10597,"nodeType":"ExpressionStatement","src":"4330:30:40"},{"expression":{"components":[{"arguments":[{"id":10599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10568,"src":"4383:5:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10600,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10557,"src":"4390:8:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10601,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10565,"src":"4400:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":10598,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10696,"src":"4378:4:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":10602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:29:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},{"id":10603,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10565,"src":"4409:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":10604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4377:39:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$10460_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":10566,"id":10605,"nodeType":"Return","src":"4370:46:40"}]},"documentation":{"id":10552,"nodeType":"StructuredDocumentation","src":"3745:283:40","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":10607,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"4042:10:40","nodeType":"FunctionDefinition","parameters":{"id":10560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10555,"mutability":"mutable","name":"self","nameLocation":"4068:4:40","nodeType":"VariableDeclaration","scope":10607,"src":"4062:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10554,"nodeType":"UserDefinedTypeName","pathNode":{"id":10553,"name":"Delay","nameLocations":["4062:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"4062:5:40"},"referencedDeclaration":10460,"src":"4062:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":10557,"mutability":"mutable","name":"newValue","nameLocation":"4089:8:40","nodeType":"VariableDeclaration","scope":10607,"src":"4082:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10556,"name":"uint32","nodeType":"ElementaryTypeName","src":"4082:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10559,"mutability":"mutable","name":"minSetback","nameLocation":"4114:10:40","nodeType":"VariableDeclaration","scope":10607,"src":"4107:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10558,"name":"uint32","nodeType":"ElementaryTypeName","src":"4107:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4052:78:40"},"returnParameters":{"id":10566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10563,"mutability":"mutable","name":"updatedDelay","nameLocation":"4160:12:40","nodeType":"VariableDeclaration","scope":10607,"src":"4154:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10562,"nodeType":"UserDefinedTypeName","pathNode":{"id":10561,"name":"Delay","nameLocations":["4154:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"4154:5:40"},"referencedDeclaration":10460,"src":"4154:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":10565,"mutability":"mutable","name":"effect","nameLocation":"4181:6:40","nodeType":"VariableDeclaration","scope":10607,"src":"4174:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10564,"name":"uint48","nodeType":"ElementaryTypeName","src":"4174:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4153:35:40"},"scope":10697,"src":"4033:390:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10657,"nodeType":"Block","src":"4656:212:40","statements":[{"assignments":[10621],"declarations":[{"constant":false,"id":10621,"mutability":"mutable","name":"raw","nameLocation":"4674:3:40","nodeType":"VariableDeclaration","scope":10657,"src":"4666:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":10620,"name":"uint112","nodeType":"ElementaryTypeName","src":"4666:7:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":10626,"initialValue":{"arguments":[{"id":10624,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10611,"src":"4693:4:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}],"expression":{"id":10622,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"4680:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$10460_$","typeString":"type(Time.Delay)"}},"id":10623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4686:6:40","memberName":"unwrap","nodeType":"MemberAccess","src":"4680:12:40","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$10460_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":10625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:18:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4666:32:40"},{"expression":{"id":10632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10627,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10616,"src":"4709:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10630,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10621,"src":"4729:3:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":10629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4722:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":10628,"name":"uint32","nodeType":"ElementaryTypeName","src":"4722:6:40","typeDescriptions":{}}},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:11:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4709:24:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":10633,"nodeType":"ExpressionStatement","src":"4709:24:40"},{"expression":{"id":10641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10634,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"4743:11:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10637,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10621,"src":"4764:3:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":10638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:2:40","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4764:9:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":10636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4757:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":10635,"name":"uint32","nodeType":"ElementaryTypeName","src":"4757:6:40","typeDescriptions":{}}},"id":10640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4743:31:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":10642,"nodeType":"ExpressionStatement","src":"4743:31:40"},{"expression":{"id":10650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10643,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10618,"src":"4784:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10646,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10621,"src":"4800:3:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":10647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:2:40","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4800:9:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":10645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4793:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":10644,"name":"uint48","nodeType":"ElementaryTypeName","src":"4793:6:40","typeDescriptions":{}}},"id":10649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4784:26:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":10651,"nodeType":"ExpressionStatement","src":"4784:26:40"},{"expression":{"components":[{"id":10652,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"4829:11:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10653,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10616,"src":"4842:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10654,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10618,"src":"4854:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":10655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:33:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":10619,"id":10656,"nodeType":"Return","src":"4821:40:40"}]},"documentation":{"id":10608,"nodeType":"StructuredDocumentation","src":"4429:117:40","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":10658,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4560:6:40","nodeType":"FunctionDefinition","parameters":{"id":10612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10611,"mutability":"mutable","name":"self","nameLocation":"4573:4:40","nodeType":"VariableDeclaration","scope":10658,"src":"4567:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10610,"nodeType":"UserDefinedTypeName","pathNode":{"id":10609,"name":"Delay","nameLocations":["4567:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"4567:5:40"},"referencedDeclaration":10460,"src":"4567:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4566:12:40"},"returnParameters":{"id":10619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10614,"mutability":"mutable","name":"valueBefore","nameLocation":"4609:11:40","nodeType":"VariableDeclaration","scope":10658,"src":"4602:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10613,"name":"uint32","nodeType":"ElementaryTypeName","src":"4602:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10616,"mutability":"mutable","name":"valueAfter","nameLocation":"4629:10:40","nodeType":"VariableDeclaration","scope":10658,"src":"4622:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10615,"name":"uint32","nodeType":"ElementaryTypeName","src":"4622:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10618,"mutability":"mutable","name":"effect","nameLocation":"4648:6:40","nodeType":"VariableDeclaration","scope":10658,"src":"4641:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10617,"name":"uint48","nodeType":"ElementaryTypeName","src":"4641:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4601:54:40"},"scope":10697,"src":"4551:317:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10695,"nodeType":"Block","src":"5041:112:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10675,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10665,"src":"5078:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":10674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":10673,"name":"uint112","nodeType":"ElementaryTypeName","src":"5070:7:40","typeDescriptions":{}}},"id":10676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:15:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":10677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:40","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5070:21:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":10679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5069:23:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10682,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10661,"src":"5104:11:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":10681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5096:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":10680,"name":"uint112","nodeType":"ElementaryTypeName","src":"5096:7:40","typeDescriptions":{}}},"id":10683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":10684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:2:40","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5096:26:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":10686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5095:28:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:54:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":10690,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10663,"src":"5134:10:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":10689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":10688,"name":"uint112","nodeType":"ElementaryTypeName","src":"5126:7:40","typeDescriptions":{}}},"id":10691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:76:40","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":10671,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"5058:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$10460_$","typeString":"type(Time.Delay)"}},"id":10672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5064:4:40","memberName":"wrap","nodeType":"MemberAccess","src":"5058:10:40","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$10460_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:88:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"functionReturnParameters":10670,"id":10694,"nodeType":"Return","src":"5051:95:40"}]},"documentation":{"id":10659,"nodeType":"StructuredDocumentation","src":"4874:64:40","text":" @dev pack the components into a Delay object."},"id":10696,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4952:4:40","nodeType":"FunctionDefinition","parameters":{"id":10666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10661,"mutability":"mutable","name":"valueBefore","nameLocation":"4964:11:40","nodeType":"VariableDeclaration","scope":10696,"src":"4957:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10660,"name":"uint32","nodeType":"ElementaryTypeName","src":"4957:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10663,"mutability":"mutable","name":"valueAfter","nameLocation":"4984:10:40","nodeType":"VariableDeclaration","scope":10696,"src":"4977:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10662,"name":"uint32","nodeType":"ElementaryTypeName","src":"4977:6:40","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10665,"mutability":"mutable","name":"effect","nameLocation":"5003:6:40","nodeType":"VariableDeclaration","scope":10696,"src":"4996:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":10664,"name":"uint48","nodeType":"ElementaryTypeName","src":"4996:6:40","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4956:54:40"},"returnParameters":{"id":10670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10696,"src":"5034:5:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"},"typeName":{"id":10668,"nodeType":"UserDefinedTypeName","pathNode":{"id":10667,"name":"Delay","nameLocations":["5034:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":10460,"src":"5034:5:40"},"referencedDeclaration":10460,"src":"5034:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$10460","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"5033:7:40"},"scope":10697,"src":"4943:210:40","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10698,"src":"640:4515:40","usedErrors":[],"usedEvents":[]}],"src":"104:5052:40"},"id":40},"contracts/FeeDistributor.sol":{"ast":{"absolutePath":"contracts/FeeDistributor.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[536],"EnumerableSet":[10423],"FeeDistributor":[11220],"IAccessControlEnumerable":[562],"IERC20":[2063]},"id":11221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10699,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"54:24:41"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11221,"sourceUnit":2064,"src":"79:56:41","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":10701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11221,"sourceUnit":537,"src":"136:79:41","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10703,"name":"AccessControlEnumerable","nameLocations":["383:23:41"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"383:23:41"},"id":10704,"nodeType":"InheritanceSpecifier","src":"383:23:41"}],"canonicalName":"FeeDistributor","contractDependencies":[],"contractKind":"contract","documentation":{"id":10702,"nodeType":"StructuredDocumentation","src":"217:138:41","text":" @title Fee Distributor\n @notice Collects protocol fees and distributes them to staking, treasury, insurance fund, and buyback"},"fullyImplemented":true,"id":11220,"linearizedBaseContracts":[11220,536,295,4702,4714,562,378,3157],"name":"FeeDistributor","nameLocation":"365:14:41","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"62a2a47c","id":10709,"mutability":"constant","name":"FEE_COLLECTOR_ROLE","nameLocation":"450:18:41","nodeType":"VariableDeclaration","scope":11220,"src":"426:76:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"426:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4645455f434f4c4c4543544f525f524f4c45","id":10707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"481:20:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b67038821","typeString":"literal_string \"FEE_COLLECTOR_ROLE\""},"value":"FEE_COLLECTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b67038821","typeString":"literal_string \"FEE_COLLECTOR_ROLE\""}],"id":10706,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"471:9:41","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"471:31:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"0186f8a4","id":10711,"mutability":"mutable","name":"omniToken","nameLocation":"554:9:41","nodeType":"VariableDeclaration","scope":11220,"src":"539:24:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10710,"name":"address","nodeType":"ElementaryTypeName","src":"539:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ee99205c","id":10713,"mutability":"mutable","name":"stakingContract","nameLocation":"619:15:41","nodeType":"VariableDeclaration","scope":11220,"src":"604:30:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10712,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":10715,"mutability":"mutable","name":"treasury","nameLocation":"655:8:41","nodeType":"VariableDeclaration","scope":11220,"src":"640:23:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10714,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b7902303","id":10717,"mutability":"mutable","name":"insuranceFund","nameLocation":"684:13:41","nodeType":"VariableDeclaration","scope":11220,"src":"669:28:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10716,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"81e1ccba","id":10720,"mutability":"mutable","name":"stakingPercentage","nameLocation":"770:17:41","nodeType":"VariableDeclaration","scope":11220,"src":"755:39:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10718,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":10719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:4:41","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"public"},{"constant":false,"functionSelector":"7ab56083","id":10723,"mutability":"mutable","name":"treasuryPercentage","nameLocation":"822:18:41","nodeType":"VariableDeclaration","scope":11220,"src":"807:40:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10721,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":10722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:4:41","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"public"},{"constant":false,"functionSelector":"69ee19af","id":10726,"mutability":"mutable","name":"buybackBurnPercentage","nameLocation":"875:21:41","nodeType":"VariableDeclaration","scope":11220,"src":"860:43:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10724,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":10725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:4:41","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":false,"functionSelector":"0967a771","id":10729,"mutability":"mutable","name":"insuranceFundPercentage","nameLocation":"931:23:41","nodeType":"VariableDeclaration","scope":11220,"src":"916:45:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10727,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":10728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:4:41","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"public"},{"constant":false,"functionSelector":"60c6d8ae","id":10731,"mutability":"mutable","name":"totalFeesCollected","nameLocation":"1027:18:41","nodeType":"VariableDeclaration","scope":11220,"src":"1012:33:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"94684e7e","id":10733,"mutability":"mutable","name":"totalStakingDistributed","nameLocation":"1066:23:41","nodeType":"VariableDeclaration","scope":11220,"src":"1051:38:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1051:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"938a8bca","id":10735,"mutability":"mutable","name":"totalTreasuryDistributed","nameLocation":"1110:24:41","nodeType":"VariableDeclaration","scope":11220,"src":"1095:39:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c93d0ece","id":10737,"mutability":"mutable","name":"totalBuybackBurned","nameLocation":"1155:18:41","nodeType":"VariableDeclaration","scope":11220,"src":"1140:33:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1140:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"55857c27","id":10739,"mutability":"mutable","name":"totalInsuranceFundDistributed","nameLocation":"1194:29:41","nodeType":"VariableDeclaration","scope":11220,"src":"1179:44:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f","id":10743,"name":"FeesCollected","nameLocation":"1254:13:41","nodeType":"EventDefinition","parameters":{"id":10742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10741,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1276:6:41","nodeType":"VariableDeclaration","scope":10743,"src":"1268:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:16:41"},"src":"1248:36:41"},{"anonymous":false,"eventSelector":"78490b24a020086d2701460dc169a540280c517bef9cdcd742f751a9099922a3","id":10753,"name":"FeesDistributed","nameLocation":"1295:15:41","nodeType":"EventDefinition","parameters":{"id":10752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10745,"indexed":false,"mutability":"mutable","name":"stakingAmount","nameLocation":"1328:13:41","nodeType":"VariableDeclaration","scope":10753,"src":"1320:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10747,"indexed":false,"mutability":"mutable","name":"treasuryAmount","nameLocation":"1359:14:41","nodeType":"VariableDeclaration","scope":10753,"src":"1351:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10749,"indexed":false,"mutability":"mutable","name":"buybackAmount","nameLocation":"1391:13:41","nodeType":"VariableDeclaration","scope":10753,"src":"1383:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10751,"indexed":false,"mutability":"mutable","name":"insuranceFundAmount","nameLocation":"1422:19:41","nodeType":"VariableDeclaration","scope":10753,"src":"1414:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1310:137:41"},"src":"1289:159:41"},{"anonymous":false,"eventSelector":"8adead107ba13fae1b5f36d9fa779c58b2bf71aab754388ad1feb3f6427fbd67","id":10763,"name":"DistributionUpdated","nameLocation":"1459:19:41","nodeType":"EventDefinition","parameters":{"id":10762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10755,"indexed":false,"mutability":"mutable","name":"stakingPercentage","nameLocation":"1496:17:41","nodeType":"VariableDeclaration","scope":10763,"src":"1488:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10757,"indexed":false,"mutability":"mutable","name":"treasuryPercentage","nameLocation":"1531:18:41","nodeType":"VariableDeclaration","scope":10763,"src":"1523:26:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10759,"indexed":false,"mutability":"mutable","name":"buybackBurnPercentage","nameLocation":"1567:21:41","nodeType":"VariableDeclaration","scope":10763,"src":"1559:29:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10761,"indexed":false,"mutability":"mutable","name":"insuranceFundPercentage","nameLocation":"1606:23:41","nodeType":"VariableDeclaration","scope":10763,"src":"1598:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1478:157:41"},"src":"1453:183:41"},{"anonymous":false,"eventSelector":"97a48c4be738bdf3e84e8f3927df6d4e52ccc94c58e96a666faca603e456d490","id":10771,"name":"AddressesUpdated","nameLocation":"1647:16:41","nodeType":"EventDefinition","parameters":{"id":10770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10765,"indexed":false,"mutability":"mutable","name":"stakingContract","nameLocation":"1681:15:41","nodeType":"VariableDeclaration","scope":10771,"src":"1673:23:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10764,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10767,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"1714:8:41","nodeType":"VariableDeclaration","scope":10771,"src":"1706:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10766,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10769,"indexed":false,"mutability":"mutable","name":"insuranceFund","nameLocation":"1740:13:41","nodeType":"VariableDeclaration","scope":10771,"src":"1732:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10768,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:96:41"},"src":"1641:119:41"},{"body":{"id":10850,"nodeType":"Block","src":"1932:573:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10785,"name":"_omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10773,"src":"1950:10:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1972:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1964:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10786,"name":"address","nodeType":"ElementaryTypeName","src":"1964:7:41","typeDescriptions":{}}},"id":10789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1950:24:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f4d4e20746f6b656e2061646472657373","id":10791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1976:27:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8fef3a59580bf32efd7decc35d622429d9666f6069649a0504698e227c9d5e8","typeString":"literal_string \"Invalid OMN token address\""},"value":"Invalid OMN token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8fef3a59580bf32efd7decc35d622429d9666f6069649a0504698e227c9d5e8","typeString":"literal_string \"Invalid OMN token address\""}],"id":10784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1942:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:62:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10793,"nodeType":"ExpressionStatement","src":"1942:62:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10795,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10775,"src":"2022:16:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2050:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2042:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10796,"name":"address","nodeType":"ElementaryTypeName","src":"2042:7:41","typeDescriptions":{}}},"id":10799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2022:30:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207374616b696e6720636f6e74726163742061646472657373","id":10801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2054:34:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae72990ae645843feed20d6037c7841cc1458cdcf1cbae58ccb609970383225e","typeString":"literal_string \"Invalid staking contract address\""},"value":"Invalid staking contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae72990ae645843feed20d6037c7841cc1458cdcf1cbae58ccb609970383225e","typeString":"literal_string \"Invalid staking contract address\""}],"id":10794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2014:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:75:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10803,"nodeType":"ExpressionStatement","src":"2014:75:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10805,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10777,"src":"2107:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2120:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10806,"name":"address","nodeType":"ElementaryTypeName","src":"2120:7:41","typeDescriptions":{}}},"id":10809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2120:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2107:23:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074726561737572792061646472657373","id":10811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2132:26:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f","typeString":"literal_string \"Invalid treasury address\""},"value":"Invalid treasury address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f","typeString":"literal_string \"Invalid treasury address\""}],"id":10804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2099:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2099:60:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10813,"nodeType":"ExpressionStatement","src":"2099:60:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10815,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"2177:14:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2203:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2195:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10816,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:41","typeDescriptions":{}}},"id":10819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2195:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2177:28:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e737572616e63652066756e642061646472657373","id":10821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:32:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_2107ff14ac501263835745caa63e0059fb1880cbeb66417206877fb1d6a4eb7a","typeString":"literal_string \"Invalid insurance fund address\""},"value":"Invalid insurance fund address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2107ff14ac501263835745caa63e0059fb1880cbeb66417206877fb1d6a4eb7a","typeString":"literal_string \"Invalid insurance fund address\""}],"id":10814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2169:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:71:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10823,"nodeType":"ExpressionStatement","src":"2169:71:41"},{"expression":{"id":10826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10824,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10711,"src":"2259:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10825,"name":"_omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10773,"src":"2271:10:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2259:22:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10827,"nodeType":"ExpressionStatement","src":"2259:22:41"},{"expression":{"id":10830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10828,"name":"stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10713,"src":"2291:15:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10829,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10775,"src":"2309:16:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2291:34:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10831,"nodeType":"ExpressionStatement","src":"2291:34:41"},{"expression":{"id":10834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10832,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10715,"src":"2335:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10833,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10777,"src":"2346:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2335:20:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10835,"nodeType":"ExpressionStatement","src":"2335:20:41"},{"expression":{"id":10838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10836,"name":"insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10717,"src":"2365:13:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10837,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"2381:14:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2365:30:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10839,"nodeType":"ExpressionStatement","src":"2365:30:41"},{"expression":{"arguments":[{"id":10841,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2425:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10842,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10781,"src":"2445:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10840,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[503],"referencedDeclaration":503,"src":"2414:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:37:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10844,"nodeType":"ExpressionStatement","src":"2414:37:41"},{"expression":{"arguments":[{"id":10846,"name":"FEE_COLLECTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10709,"src":"2472:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10847,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10781,"src":"2492:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10845,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[503],"referencedDeclaration":503,"src":"2461:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2461:37:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10849,"nodeType":"ExpressionStatement","src":"2461:37:41"}]},"id":10851,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10773,"mutability":"mutable","name":"_omniToken","nameLocation":"1799:10:41","nodeType":"VariableDeclaration","scope":10851,"src":"1791:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10772,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10775,"mutability":"mutable","name":"_stakingContract","nameLocation":"1827:16:41","nodeType":"VariableDeclaration","scope":10851,"src":"1819:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10774,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10777,"mutability":"mutable","name":"_treasury","nameLocation":"1861:9:41","nodeType":"VariableDeclaration","scope":10851,"src":"1853:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10776,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10779,"mutability":"mutable","name":"_insuranceFund","nameLocation":"1888:14:41","nodeType":"VariableDeclaration","scope":10851,"src":"1880:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10778,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10781,"mutability":"mutable","name":"admin","nameLocation":"1920:5:41","nodeType":"VariableDeclaration","scope":10851,"src":"1912:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10780,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1781:150:41"},"returnParameters":{"id":10783,"nodeType":"ParameterList","parameters":[],"src":"1932:0:41"},"scope":11220,"src":"1770:735:41","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10876,"nodeType":"Block","src":"2654:159:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10859,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2672:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2676:5:41","memberName":"value","nodeType":"MemberAccess","src":"2672:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2684:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2672:13:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f20636f6c6c656374","id":10863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2687:20:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_be5a897bd0ffe176d4bdd74eb85cf1d251e1d59d0a05970043390fa6870ba99a","typeString":"literal_string \"No fees to collect\""},"value":"No fees to collect"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be5a897bd0ffe176d4bdd74eb85cf1d251e1d59d0a05970043390fa6870ba99a","typeString":"literal_string \"No fees to collect\""}],"id":10858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2664:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:44:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10865,"nodeType":"ExpressionStatement","src":"2664:44:41"},{"expression":{"id":10869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10866,"name":"totalFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10731,"src":"2727:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":10867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2749:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:5:41","memberName":"value","nodeType":"MemberAccess","src":"2749:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2727:31:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10870,"nodeType":"ExpressionStatement","src":"2727:31:41"},{"eventCall":{"arguments":[{"expression":{"id":10872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2796:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2800:5:41","memberName":"value","nodeType":"MemberAccess","src":"2796:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10871,"name":"FeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10743,"src":"2782:13:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2782:24:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10875,"nodeType":"EmitStatement","src":"2777:29:41"}]},"documentation":{"id":10852,"nodeType":"StructuredDocumentation","src":"2515:65:41","text":" @notice Collects fees from protocol operations"},"functionSelector":"c8796572","id":10877,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10855,"name":"FEE_COLLECTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10709,"src":"2634:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10856,"kind":"modifierInvocation","modifierName":{"id":10854,"name":"onlyRole","nameLocations":["2625:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2625:8:41"},"nodeType":"ModifierInvocation","src":"2625:28:41"}],"name":"collectFees","nameLocation":"2594:11:41","nodeType":"FunctionDefinition","parameters":{"id":10853,"nodeType":"ParameterList","parameters":[],"src":"2605:2:41"},"returnParameters":{"id":10857,"nodeType":"ParameterList","parameters":[],"src":"2654:0:41"},"scope":11220,"src":"2585:228:41","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":11089,"nodeType":"Block","src":"2954:2759:41","statements":[{"assignments":[10882],"declarations":[{"constant":false,"id":10882,"mutability":"mutable","name":"balance","nameLocation":"2972:7:41","nodeType":"VariableDeclaration","scope":11089,"src":"2964:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2964:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10888,"initialValue":{"expression":{"arguments":[{"id":10885,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2990:4:41","typeDescriptions":{"typeIdentifier":"t_contract$_FeeDistributor_$11220","typeString":"contract FeeDistributor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FeeDistributor_$11220","typeString":"contract FeeDistributor"}],"id":10884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2982:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10883,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:41","typeDescriptions":{}}},"id":10886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:13:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2996:7:41","memberName":"balance","nodeType":"MemberAccess","src":"2982:21:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2964:39:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10890,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"3021:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3031:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3021:11:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f2064697374726962757465","id":10893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3034:23:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5820894a6baae7bc3640e02dd65dc70a39bbfba1f5c7a68b8c0279dbbe13793","typeString":"literal_string \"No fees to distribute\""},"value":"No fees to distribute"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5820894a6baae7bc3640e02dd65dc70a39bbfba1f5c7a68b8c0279dbbe13793","typeString":"literal_string \"No fees to distribute\""}],"id":10889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3013:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3013:45:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10895,"nodeType":"ExpressionStatement","src":"3013:45:41"},{"assignments":[10897],"declarations":[{"constant":false,"id":10897,"mutability":"mutable","name":"stakingAmount","nameLocation":"3114:13:41","nodeType":"VariableDeclaration","scope":11089,"src":"3106:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10898,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"3131:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10899,"name":"stakingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"3141:17:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3131:27:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3130:29:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":10902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3162:5:41","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3130:37:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3106:61:41"},{"assignments":[10906],"declarations":[{"constant":false,"id":10906,"mutability":"mutable","name":"treasuryAmount","nameLocation":"3185:14:41","nodeType":"VariableDeclaration","scope":11089,"src":"3177:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3177:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10913,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10907,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"3203:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10908,"name":"treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10723,"src":"3213:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3203:28:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3202:30:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":10911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:5:41","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3202:38:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3177:63:41"},{"assignments":[10915],"declarations":[{"constant":false,"id":10915,"mutability":"mutable","name":"buybackAmount","nameLocation":"3258:13:41","nodeType":"VariableDeclaration","scope":11089,"src":"3250:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3250:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10922,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10916,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"3275:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10917,"name":"buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10726,"src":"3285:21:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3275:31:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3274:33:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":10920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:5:41","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3274:41:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3250:65:41"},{"assignments":[10924],"declarations":[{"constant":false,"id":10924,"mutability":"mutable","name":"insuranceFundAmount","nameLocation":"3333:19:41","nodeType":"VariableDeclaration","scope":11089,"src":"3325:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10923,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10925,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"3356:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10926,"name":"insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10729,"src":"3366:23:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:33:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3355:35:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":10929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3393:5:41","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3355:43:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3325:73:41"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10932,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10897,"src":"3463:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3479:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3463:17:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10954,"nodeType":"IfStatement","src":"3459:242:41","trueBody":{"id":10953,"nodeType":"Block","src":"3482:219:41","statements":[{"assignments":[10936,null],"declarations":[{"constant":false,"id":10936,"mutability":"mutable","name":"stakingSuccess","nameLocation":"3502:14:41","nodeType":"VariableDeclaration","scope":10953,"src":"3497:19:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10935,"name":"bool","nodeType":"ElementaryTypeName","src":"3497:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10943,"initialValue":{"arguments":[{"hexValue":"","id":10941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3565:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10937,"name":"stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10713,"src":"3522:15:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3538:4:41","memberName":"call","nodeType":"MemberAccess","src":"3522:20:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10939,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10897,"src":"3550:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3522:42:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:46:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3496:72:41"},{"expression":{"arguments":[{"id":10945,"name":"stakingSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10936,"src":"3590:14:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720646973747269627574696f6e206661696c6564","id":10946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3606:29:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ca75b708913ae0dbdf356c4e1f99b99bfa67f905f81e86eb684058e3b69c40e","typeString":"literal_string \"Staking distribution failed\""},"value":"Staking distribution failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ca75b708913ae0dbdf356c4e1f99b99bfa67f905f81e86eb684058e3b69c40e","typeString":"literal_string \"Staking distribution failed\""}],"id":10944,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3582:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:54:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10948,"nodeType":"ExpressionStatement","src":"3582:54:41"},{"expression":{"id":10951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10949,"name":"totalStakingDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10733,"src":"3650:23:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10950,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10897,"src":"3677:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3650:40:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10952,"nodeType":"ExpressionStatement","src":"3650:40:41"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10955,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10906,"src":"3757:14:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3774:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3757:18:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10977,"nodeType":"IfStatement","src":"3753:242:41","trueBody":{"id":10976,"nodeType":"Block","src":"3777:218:41","statements":[{"assignments":[10959,null],"declarations":[{"constant":false,"id":10959,"mutability":"mutable","name":"treasurySuccess","nameLocation":"3797:15:41","nodeType":"VariableDeclaration","scope":10976,"src":"3792:20:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10958,"name":"bool","nodeType":"ElementaryTypeName","src":"3792:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10966,"initialValue":{"arguments":[{"hexValue":"","id":10964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3855:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10960,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10715,"src":"3818:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3827:4:41","memberName":"call","nodeType":"MemberAccess","src":"3818:13:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10962,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10906,"src":"3839:14:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3818:36:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:40:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3791:67:41"},{"expression":{"arguments":[{"id":10968,"name":"treasurySuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10959,"src":"3880:15:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"547265617375727920646973747269627574696f6e206661696c6564","id":10969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3897:30:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_408188de7f429ecf85a709432722e35efa3be58b9a29c98df291d7a5f53322b1","typeString":"literal_string \"Treasury distribution failed\""},"value":"Treasury distribution failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_408188de7f429ecf85a709432722e35efa3be58b9a29c98df291d7a5f53322b1","typeString":"literal_string \"Treasury distribution failed\""}],"id":10967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3872:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3872:56:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10971,"nodeType":"ExpressionStatement","src":"3872:56:41"},{"expression":{"id":10974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10972,"name":"totalTreasuryDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"3942:24:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10973,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10906,"src":"3970:14:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:42:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10975,"nodeType":"ExpressionStatement","src":"3942:42:41"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10978,"name":"insuranceFundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10924,"src":"4057:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4079:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4057:23:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11000,"nodeType":"IfStatement","src":"4053:275:41","trueBody":{"id":10999,"nodeType":"Block","src":"4082:246:41","statements":[{"assignments":[10982,null],"declarations":[{"constant":false,"id":10982,"mutability":"mutable","name":"insuranceSuccess","nameLocation":"4102:16:41","nodeType":"VariableDeclaration","scope":10999,"src":"4097:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10981,"name":"bool","nodeType":"ElementaryTypeName","src":"4097:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10989,"initialValue":{"arguments":[{"hexValue":"","id":10987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4171:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10983,"name":"insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10717,"src":"4124:13:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:4:41","memberName":"call","nodeType":"MemberAccess","src":"4124:18:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10985,"name":"insuranceFundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10924,"src":"4150:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4124:46:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:50:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4096:78:41"},{"expression":{"arguments":[{"id":10991,"name":"insuranceSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10982,"src":"4196:16:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e737572616e63652066756e6420646973747269627574696f6e206661696c6564","id":10992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4214:36:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_8fec56112fbcb71b03f650e61c15104f9027f97ae9457015717e00709953b18e","typeString":"literal_string \"Insurance fund distribution failed\""},"value":"Insurance fund distribution failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8fec56112fbcb71b03f650e61c15104f9027f97ae9457015717e00709953b18e","typeString":"literal_string \"Insurance fund distribution failed\""}],"id":10990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4188:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:63:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10994,"nodeType":"ExpressionStatement","src":"4188:63:41"},{"expression":{"id":10997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10995,"name":"totalInsuranceFundDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10739,"src":"4265:29:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10996,"name":"insuranceFundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10924,"src":"4298:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4265:52:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10998,"nodeType":"ExpressionStatement","src":"4265:52:41"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11001,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"4408:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4408:17:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11081,"nodeType":"IfStatement","src":"4404:1197:41","trueBody":{"id":11080,"nodeType":"Block","src":"4427:1174:41","statements":[{"assignments":[11005],"declarations":[{"constant":false,"id":11005,"mutability":"mutable","name":"admin","nameLocation":"4639:5:41","nodeType":"VariableDeclaration","scope":11080,"src":"4631:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11004,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":11010,"initialValue":{"arguments":[{"id":11007,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4661:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":11008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4681:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11006,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4647:13:41","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":11009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4647:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4631:52:41"},{"assignments":[11012],"declarations":[{"constant":false,"id":11012,"mutability":"mutable","name":"burnAmount","nameLocation":"4705:10:41","nodeType":"VariableDeclaration","scope":11080,"src":"4697:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11011,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11013,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"4718:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":11014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4734:2:41","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4718:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4697:39:41"},{"clauses":[{"block":{"id":11061,"nodeType":"Block","src":"4873:506:41","statements":[{"clauses":[{"block":{"id":11042,"nodeType":"Block","src":"5023:76:41","statements":[{"expression":{"id":11040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11038,"name":"totalBuybackBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10737,"src":"5045:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11039,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"5067:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5045:35:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11041,"nodeType":"ExpressionStatement","src":"5045:35:41"}]},"errorName":"","id":11043,"nodeType":"TryCatchClause","src":"5023:76:41"},{"block":{"id":11058,"nodeType":"Block","src":"5106:259:41","statements":[{"assignments":[11045,null],"declarations":[{"constant":false,"id":11045,"mutability":"mutable","name":"adminSuccess","nameLocation":"5224:12:41","nodeType":"VariableDeclaration","scope":11058,"src":"5219:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11044,"name":"bool","nodeType":"ElementaryTypeName","src":"5219:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11052,"initialValue":{"arguments":[{"hexValue":"","id":11050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5275:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":11046,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11005,"src":"5242:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5248:4:41","memberName":"call","nodeType":"MemberAccess","src":"5242:10:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11048,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"5260:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5242:32:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5242:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5218:60:41"},{"expression":{"arguments":[{"id":11054,"name":"adminSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"5308:12:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e207472616e73666572206661696c6564","id":11055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5322:23:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd68671a7fe1890cf5f1f4dde5a94d05616a212bffe14c4109825706a19f781e","typeString":"literal_string \"Admin transfer failed\""},"value":"Admin transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd68671a7fe1890cf5f1f4dde5a94d05616a212bffe14c4109825706a19f781e","typeString":"literal_string \"Admin transfer failed\""}],"id":11053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5300:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5300:46:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11057,"nodeType":"ExpressionStatement","src":"5300:46:41"}]},"errorName":"","id":11059,"nodeType":"TryCatchClause","src":"5100:265:41"}],"externalCall":{"arguments":[{"arguments":[{"hexValue":"30","id":11034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5007:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4999:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11032,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:41","typeDescriptions":{}}},"id":11035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11036,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11012,"src":"5011:10:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11029,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10711,"src":"4979:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11028,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4972:6:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2063_$","typeString":"type(contract IERC20)"}},"id":11030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:17:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":11031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4990:8:41","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"4972:26:41","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:50:41","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11060,"nodeType":"TryStatement","src":"4968:397:41"}]},"errorName":"","id":11062,"nodeType":"TryCatchClause","src":"4873:506:41"},{"block":{"id":11077,"nodeType":"Block","src":"5386:205:41","statements":[{"assignments":[11064,null],"declarations":[{"constant":false,"id":11064,"mutability":"mutable","name":"adminSuccess","nameLocation":"5458:12:41","nodeType":"VariableDeclaration","scope":11077,"src":"5453:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11063,"name":"bool","nodeType":"ElementaryTypeName","src":"5453:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11071,"initialValue":{"arguments":[{"hexValue":"","id":11069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5509:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":11065,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11005,"src":"5476:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5482:4:41","memberName":"call","nodeType":"MemberAccess","src":"5476:10:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11067,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"5494:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5476:32:41","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5452:60:41"},{"expression":{"arguments":[{"id":11073,"name":"adminSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11064,"src":"5538:12:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e207472616e73666572206661696c6564","id":11074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5552:23:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd68671a7fe1890cf5f1f4dde5a94d05616a212bffe14c4109825706a19f781e","typeString":"literal_string \"Admin transfer failed\""},"value":"Admin transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd68671a7fe1890cf5f1f4dde5a94d05616a212bffe14c4109825706a19f781e","typeString":"literal_string \"Admin transfer failed\""}],"id":11072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5530:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5530:46:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11076,"nodeType":"ExpressionStatement","src":"5530:46:41"}]},"errorName":"","id":11078,"nodeType":"TryCatchClause","src":"5380:211:41"}],"externalCall":{"arguments":[{"id":11021,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11005,"src":"4839:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4854:4:41","typeDescriptions":{"typeIdentifier":"t_contract$_FeeDistributor_$11220","typeString":"contract FeeDistributor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FeeDistributor_$11220","typeString":"contract FeeDistributor"}],"id":11023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4846:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11022,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:41","typeDescriptions":{}}},"id":11025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4846:13:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11026,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11012,"src":"4861:10:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11018,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10711,"src":"4815:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11017,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4808:6:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2063_$","typeString":"type(contract IERC20)"}},"id":11019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:17:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":11020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4826:12:41","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"4808:30:41","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":11027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:64:41","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11079,"nodeType":"TryStatement","src":"4804:787:41"}]}},{"eventCall":{"arguments":[{"id":11083,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10897,"src":"5640:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11084,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10906,"src":"5655:14:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11085,"name":"buybackAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"5671:13:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11086,"name":"insuranceFundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10924,"src":"5686:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11082,"name":"FeesDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10753,"src":"5624:15:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":11087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5624:82:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11088,"nodeType":"EmitStatement","src":"5619:87:41"}]},"documentation":{"id":10878,"nodeType":"StructuredDocumentation","src":"2823:91:41","text":" @notice Distributes collected fees according to distribution percentages"},"functionSelector":"bb57ad20","id":11090,"implemented":true,"kind":"function","modifiers":[],"name":"distributeFees","nameLocation":"2928:14:41","nodeType":"FunctionDefinition","parameters":{"id":10879,"nodeType":"ParameterList","parameters":[],"src":"2942:2:41"},"returnParameters":{"id":10880,"nodeType":"ParameterList","parameters":[],"src":"2954:0:41"},"scope":11220,"src":"2919:2794:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11141,"nodeType":"Block","src":"6332:611:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11106,"name":"_stakingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"6363:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11107,"name":"_treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11095,"src":"6384:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6363:40:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11109,"name":"_buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11097,"src":"6406:22:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6363:65:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11111,"name":"_insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11099,"src":"6431:24:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6363:92:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":11113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6459:5:41","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6363:101:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50657263656e7461676573206d7573742061646420757020746f2031303025","id":11115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6478:33:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfbce791e4248ae5067400f1bade1e00321cc08308fd398851c98df080bbfd45","typeString":"literal_string \"Percentages must add up to 100%\""},"value":"Percentages must add up to 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfbce791e4248ae5067400f1bade1e00321cc08308fd398851c98df080bbfd45","typeString":"literal_string \"Percentages must add up to 100%\""}],"id":11105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6342:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:179:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11117,"nodeType":"ExpressionStatement","src":"6342:179:41"},{"expression":{"id":11120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11118,"name":"stakingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"6540:17:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11119,"name":"_stakingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"6560:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6540:38:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11121,"nodeType":"ExpressionStatement","src":"6540:38:41"},{"expression":{"id":11124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11122,"name":"treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10723,"src":"6588:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11123,"name":"_treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11095,"src":"6609:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6588:40:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11125,"nodeType":"ExpressionStatement","src":"6588:40:41"},{"expression":{"id":11128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11126,"name":"buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10726,"src":"6638:21:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11127,"name":"_buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11097,"src":"6662:22:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6638:46:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11129,"nodeType":"ExpressionStatement","src":"6638:46:41"},{"expression":{"id":11132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11130,"name":"insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10729,"src":"6694:23:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11131,"name":"_insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11099,"src":"6720:24:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6694:50:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11133,"nodeType":"ExpressionStatement","src":"6694:50:41"},{"eventCall":{"arguments":[{"id":11135,"name":"_stakingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"6801:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11136,"name":"_treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11095,"src":"6833:19:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11137,"name":"_buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11097,"src":"6866:22:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11138,"name":"_insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11099,"src":"6902:24:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11134,"name":"DistributionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10763,"src":"6768:19:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":11139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:168:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11140,"nodeType":"EmitStatement","src":"6763:173:41"}]},"documentation":{"id":11091,"nodeType":"StructuredDocumentation","src":"5723:377:41","text":" @notice Updates the fee distribution percentages\n @param _stakingPercentage Percentage for staking (basis points)\n @param _treasuryPercentage Percentage for treasury (basis points)\n @param _buybackBurnPercentage Percentage for buyback & burn (basis points)\n @param _insuranceFundPercentage Percentage for insurance fund (basis points)"},"functionSelector":"a1546687","id":11142,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11102,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"6312:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11103,"kind":"modifierInvocation","modifierName":{"id":11101,"name":"onlyRole","nameLocations":["6303:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6303:8:41"},"nodeType":"ModifierInvocation","src":"6303:28:41"}],"name":"updateDistribution","nameLocation":"6114:18:41","nodeType":"FunctionDefinition","parameters":{"id":11100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11093,"mutability":"mutable","name":"_stakingPercentage","nameLocation":"6150:18:41","nodeType":"VariableDeclaration","scope":11142,"src":"6142:26:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11092,"name":"uint256","nodeType":"ElementaryTypeName","src":"6142:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11095,"mutability":"mutable","name":"_treasuryPercentage","nameLocation":"6186:19:41","nodeType":"VariableDeclaration","scope":11142,"src":"6178:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6178:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11097,"mutability":"mutable","name":"_buybackBurnPercentage","nameLocation":"6223:22:41","nodeType":"VariableDeclaration","scope":11142,"src":"6215:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11096,"name":"uint256","nodeType":"ElementaryTypeName","src":"6215:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11099,"mutability":"mutable","name":"_insuranceFundPercentage","nameLocation":"6263:24:41","nodeType":"VariableDeclaration","scope":11142,"src":"6255:32:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11098,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6132:161:41"},"returnParameters":{"id":11104,"nodeType":"ParameterList","parameters":[],"src":"6332:0:41"},"scope":11220,"src":"6105:838:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11203,"nodeType":"Block","src":"7338:497:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11156,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11145,"src":"7356:16:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7384:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7376:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11157,"name":"address","nodeType":"ElementaryTypeName","src":"7376:7:41","typeDescriptions":{}}},"id":11160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7356:30:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207374616b696e6720636f6e74726163742061646472657373","id":11162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7388:34:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae72990ae645843feed20d6037c7841cc1458cdcf1cbae58ccb609970383225e","typeString":"literal_string \"Invalid staking contract address\""},"value":"Invalid staking contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae72990ae645843feed20d6037c7841cc1458cdcf1cbae58ccb609970383225e","typeString":"literal_string \"Invalid staking contract address\""}],"id":11155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7348:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7348:75:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11164,"nodeType":"ExpressionStatement","src":"7348:75:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11166,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11147,"src":"7441:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7462:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7454:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11167,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:41","typeDescriptions":{}}},"id":11170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7441:23:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074726561737572792061646472657373","id":11172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7466:26:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f","typeString":"literal_string \"Invalid treasury address\""},"value":"Invalid treasury address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f","typeString":"literal_string \"Invalid treasury address\""}],"id":11165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7433:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7433:60:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11174,"nodeType":"ExpressionStatement","src":"7433:60:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11176,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11149,"src":"7511:14:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7537:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7529:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11177,"name":"address","nodeType":"ElementaryTypeName","src":"7529:7:41","typeDescriptions":{}}},"id":11180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7511:28:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e737572616e63652066756e642061646472657373","id":11182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7541:32:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_2107ff14ac501263835745caa63e0059fb1880cbeb66417206877fb1d6a4eb7a","typeString":"literal_string \"Invalid insurance fund address\""},"value":"Invalid insurance fund address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2107ff14ac501263835745caa63e0059fb1880cbeb66417206877fb1d6a4eb7a","typeString":"literal_string \"Invalid insurance fund address\""}],"id":11175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7503:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7503:71:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11184,"nodeType":"ExpressionStatement","src":"7503:71:41"},{"expression":{"id":11187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11185,"name":"stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10713,"src":"7593:15:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11186,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11145,"src":"7611:16:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7593:34:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11188,"nodeType":"ExpressionStatement","src":"7593:34:41"},{"expression":{"id":11191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11189,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10715,"src":"7637:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11190,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11147,"src":"7648:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7637:20:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11192,"nodeType":"ExpressionStatement","src":"7637:20:41"},{"expression":{"id":11195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11193,"name":"insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10717,"src":"7667:13:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11194,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11149,"src":"7683:14:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7667:30:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11196,"nodeType":"ExpressionStatement","src":"7667:30:41"},{"eventCall":{"arguments":[{"id":11198,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11145,"src":"7751:16:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11199,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11147,"src":"7781:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11200,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11149,"src":"7804:14:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11197,"name":"AddressesUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10771,"src":"7721:16:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":11201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7721:107:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11202,"nodeType":"EmitStatement","src":"7716:112:41"}]},"documentation":{"id":11143,"nodeType":"StructuredDocumentation","src":"6953:218:41","text":" @notice Updates distribution addresses\n @param _stakingContract New staking contract address\n @param _treasury New treasury address\n @param _insuranceFund New insurance fund address"},"functionSelector":"334c1439","id":11204,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11152,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"7318:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11153,"kind":"modifierInvocation","modifierName":{"id":11151,"name":"onlyRole","nameLocations":["7309:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7309:8:41"},"nodeType":"ModifierInvocation","src":"7309:28:41"}],"name":"updateAddresses","nameLocation":"7185:15:41","nodeType":"FunctionDefinition","parameters":{"id":11150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11145,"mutability":"mutable","name":"_stakingContract","nameLocation":"7218:16:41","nodeType":"VariableDeclaration","scope":11204,"src":"7210:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11144,"name":"address","nodeType":"ElementaryTypeName","src":"7210:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11147,"mutability":"mutable","name":"_treasury","nameLocation":"7252:9:41","nodeType":"VariableDeclaration","scope":11204,"src":"7244:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11146,"name":"address","nodeType":"ElementaryTypeName","src":"7244:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11149,"mutability":"mutable","name":"_insuranceFund","nameLocation":"7279:14:41","nodeType":"VariableDeclaration","scope":11204,"src":"7271:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11148,"name":"address","nodeType":"ElementaryTypeName","src":"7271:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7200:99:41"},"returnParameters":{"id":11154,"nodeType":"ParameterList","parameters":[],"src":"7338:0:41"},"scope":11220,"src":"7176:659:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11218,"nodeType":"Block","src":"7938:87:41","statements":[{"expression":{"id":11211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11208,"name":"totalFeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10731,"src":"7948:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":11209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7970:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7974:5:41","memberName":"value","nodeType":"MemberAccess","src":"7970:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:31:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11212,"nodeType":"ExpressionStatement","src":"7948:31:41"},{"eventCall":{"arguments":[{"expression":{"id":11214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8008:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8012:5:41","memberName":"value","nodeType":"MemberAccess","src":"8008:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11213,"name":"FeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10743,"src":"7994:13:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:24:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11217,"nodeType":"EmitStatement","src":"7989:29:41"}]},"documentation":{"id":11205,"nodeType":"StructuredDocumentation","src":"7845:61:41","text":" @notice Allows the contract to receive ETH"},"id":11219,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11206,"nodeType":"ParameterList","parameters":[],"src":"7918:2:41"},"returnParameters":{"id":11207,"nodeType":"ParameterList","parameters":[],"src":"7938:0:41"},"scope":11220,"src":"7911:114:41","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":11221,"src":"356:7671:41","usedErrors":[305,308],"usedEvents":[317,326,335,10743,10753,10763,10771]}],"src":"54:7973:41"},"id":41},"contracts/OMNIStaking.sol":{"ast":{"absolutePath":"contracts/OMNIStaking.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[536],"Address":[3127],"EnumerableSet":[10423],"IAccessControlEnumerable":[562],"IERC1363":[1274],"IERC20":[2063],"IFeeDistributor":[11238],"IOMNIToken":[11234],"OMNIStaking":[12386],"ReentrancyGuard":[3368],"SafeERC20":[2868]},"id":12387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11222,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"50:24:42"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12387,"sourceUnit":2064,"src":"76:56:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":11224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12387,"sourceUnit":2869,"src":"133:65:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":11225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12387,"sourceUnit":3369,"src":"199:59:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":11226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12387,"sourceUnit":537,"src":"259:79:42","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOMNIToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":11234,"linearizedBaseContracts":[11234],"name":"IOMNIToken","nameLocation":"350:10:42","nodeType":"ContractDefinition","nodes":[{"functionSelector":"503c2a80","id":11233,"implemented":false,"kind":"function","modifiers":[],"name":"getDiscountForStakedAmount","nameLocation":"376:26:42","nodeType":"FunctionDefinition","parameters":{"id":11229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11228,"mutability":"mutable","name":"stakedAmount","nameLocation":"411:12:42","nodeType":"VariableDeclaration","scope":11233,"src":"403:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11227,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:22:42"},"returnParameters":{"id":11232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11233,"src":"448:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11230,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"447:9:42"},"scope":11234,"src":"367:90:42","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":12387,"src":"340:119:42","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IFeeDistributor","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":11238,"linearizedBaseContracts":[11238],"name":"IFeeDistributor","nameLocation":"471:15:42","nodeType":"ContractDefinition","nodes":[{"functionSelector":"42f34f5d","id":11237,"implemented":false,"kind":"function","modifiers":[],"name":"distributeToStakers","nameLocation":"502:19:42","nodeType":"FunctionDefinition","parameters":{"id":11235,"nodeType":"ParameterList","parameters":[],"src":"521:2:42"},"returnParameters":{"id":11236,"nodeType":"ParameterList","parameters":[],"src":"540:0:42"},"scope":11238,"src":"493:48:42","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":12387,"src":"461:82:42","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":11240,"name":"ReentrancyGuard","nameLocations":["700:15:42"],"nodeType":"IdentifierPath","referencedDeclaration":3368,"src":"700:15:42"},"id":11241,"nodeType":"InheritanceSpecifier","src":"700:15:42"},{"baseName":{"id":11242,"name":"AccessControlEnumerable","nameLocations":["717:23:42"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"717:23:42"},"id":11243,"nodeType":"InheritanceSpecifier","src":"717:23:42"}],"canonicalName":"OMNIStaking","contractDependencies":[],"contractKind":"contract","documentation":{"id":11239,"nodeType":"StructuredDocumentation","src":"545:130:42","text":" @title OMNI Staking Contract\n @notice Allows users to stake OMNI tokens to earn ETH rewards and trading fee discounts"},"fullyImplemented":true,"id":12386,"linearizedBaseContracts":[12386,536,295,4702,4714,562,378,3157,3368],"name":"OMNIStaking","nameLocation":"685:11:42","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11247,"libraryName":{"id":11244,"name":"SafeERC20","nameLocations":["753:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"753:9:42"},"nodeType":"UsingForDirective","src":"747:27:42","typeName":{"id":11246,"nodeType":"UserDefinedTypeName","pathNode":{"id":11245,"name":"IERC20","nameLocations":["767:6:42"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"767:6:42"},"referencedDeclaration":2063,"src":"767:6:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"0cdac963","id":11252,"mutability":"constant","name":"FEE_DISTRIBUTOR_ROLE","nameLocation":"821:20:42","nodeType":"VariableDeclaration","scope":12386,"src":"797:80:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4645455f4449535452494255544f525f524f4c45","id":11250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"854:22:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea","typeString":"literal_string \"FEE_DISTRIBUTOR_ROLE\""},"value":"FEE_DISTRIBUTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea","typeString":"literal_string \"FEE_DISTRIBUTOR_ROLE\""}],"id":11249,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"844:9:42","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:33:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"OMNIStaking.StakingTier","id":11257,"members":[{"constant":false,"id":11254,"mutability":"mutable","name":"lockDuration","nameLocation":"951:12:42","nodeType":"VariableDeclaration","scope":11257,"src":"943:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11253,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11256,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"995:16:42","nodeType":"VariableDeclaration","scope":11257,"src":"987:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11255,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakingTier","nameLocation":"921:11:42","nodeType":"StructDefinition","scope":12386,"src":"914:152:42","visibility":"public"},{"canonicalName":"OMNIStaking.UserStake","id":11270,"members":[{"constant":false,"id":11259,"mutability":"mutable","name":"amount","nameLocation":"1111:6:42","nodeType":"VariableDeclaration","scope":11270,"src":"1103:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11261,"mutability":"mutable","name":"lockDuration","nameLocation":"1135:12:42","nodeType":"VariableDeclaration","scope":11270,"src":"1127:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11263,"mutability":"mutable","name":"startTime","nameLocation":"1165:9:42","nodeType":"VariableDeclaration","scope":11270,"src":"1157:17:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11265,"mutability":"mutable","name":"endTime","nameLocation":"1192:7:42","nodeType":"VariableDeclaration","scope":11270,"src":"1184:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11267,"mutability":"mutable","name":"lastRewardClaimTime","nameLocation":"1217:19:42","nodeType":"VariableDeclaration","scope":11270,"src":"1209:27:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11269,"mutability":"mutable","name":"unlocked","nameLocation":"1251:8:42","nodeType":"VariableDeclaration","scope":11270,"src":"1246:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11268,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"UserStake","nameLocation":"1083:9:42","nodeType":"StructDefinition","scope":12386,"src":"1076:190:42","visibility":"public"},{"constant":false,"functionSelector":"0186f8a4","id":11273,"mutability":"mutable","name":"omniToken","nameLocation":"1311:9:42","nodeType":"VariableDeclaration","scope":12386,"src":"1297:23:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"},"typeName":{"id":11272,"nodeType":"UserDefinedTypeName","pathNode":{"id":11271,"name":"IERC20","nameLocations":["1297:6:42"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"1297:6:42"},"referencedDeclaration":2063,"src":"1297:6:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"d50267ee","id":11278,"mutability":"mutable","name":"stakingTiers","nameLocation":"1425:12:42","nodeType":"VariableDeclaration","scope":12386,"src":"1386:51:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier)"},"typeName":{"id":11277,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1394:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1386:31:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11276,"nodeType":"UserDefinedTypeName","pathNode":{"id":11275,"name":"StakingTier","nameLocations":["1405:11:42"],"nodeType":"IdentifierPath","referencedDeclaration":11257,"src":"1405:11:42"},"referencedDeclaration":11257,"src":"1405:11:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage_ptr","typeString":"struct OMNIStaking.StakingTier"}}},"visibility":"public"},{"constant":false,"functionSelector":"32298be1","id":11281,"mutability":"mutable","name":"lockDurations","nameLocation":"1497:13:42","nodeType":"VariableDeclaration","scope":12386,"src":"1480:30:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":11279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11280,"nodeType":"ArrayTypeName","src":"1480:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"b5d5b5fa","id":11287,"mutability":"mutable","name":"userStakes","nameLocation":"1601:10:42","nodeType":"VariableDeclaration","scope":12386,"src":"1562:49:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake[])"},"typeName":{"id":11286,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11282,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1562:31:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":11284,"nodeType":"UserDefinedTypeName","pathNode":{"id":11283,"name":"UserStake","nameLocations":["1581:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":11270,"src":"1581:9:42"},"referencedDeclaration":11270,"src":"1581:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake"}},"id":11285,"nodeType":"ArrayTypeName","src":"1581:11:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_ptr","typeString":"struct OMNIStaking.UserStake[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"817b1cd2","id":11289,"mutability":"mutable","name":"totalStaked","nameLocation":"1660:11:42","nodeType":"VariableDeclaration","scope":12386,"src":"1645:26:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1645:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ee172546","id":11291,"mutability":"mutable","name":"totalRewardsDistributed","nameLocation":"1692:23:42","nodeType":"VariableDeclaration","scope":12386,"src":"1677:38:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1677:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"38962186","id":11293,"mutability":"mutable","name":"accumulatedRewardsPerToken","nameLocation":"1736:26:42","nodeType":"VariableDeclaration","scope":12386,"src":"1721:41:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8686b39a","id":11297,"mutability":"mutable","name":"userRewardDebts","nameLocation":"1821:15:42","nodeType":"VariableDeclaration","scope":12386,"src":"1786:50:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11296,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11294,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1786:27:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"31d7a262","id":11301,"mutability":"mutable","name":"pendingRewards","nameLocation":"1877:14:42","nodeType":"VariableDeclaration","scope":12386,"src":"1842:49:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11300,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11298,"name":"address","nodeType":"ElementaryTypeName","src":"1850:7:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1842:27:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"291a3d9e","id":11304,"mutability":"mutable","name":"earlyWithdrawalPenalty","nameLocation":"1945:22:42","nodeType":"VariableDeclaration","scope":12386,"src":"1930:44:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":11303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"anonymous":false,"eventSelector":"b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed","id":11314,"name":"Staked","nameLocation":"2028:6:42","nodeType":"EventDefinition","parameters":{"id":11313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11306,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2051:4:42","nodeType":"VariableDeclaration","scope":11314,"src":"2035:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11305,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11308,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2065:6:42","nodeType":"VariableDeclaration","scope":11314,"src":"2057:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11310,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2081:12:42","nodeType":"VariableDeclaration","scope":11314,"src":"2073:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11312,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2103:7:42","nodeType":"VariableDeclaration","scope":11314,"src":"2095:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2034:77:42"},"src":"2022:90:42"},{"anonymous":false,"eventSelector":"4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e","id":11322,"name":"Unstaked","nameLocation":"2123:8:42","nodeType":"EventDefinition","parameters":{"id":11321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11316,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2148:4:42","nodeType":"VariableDeclaration","scope":11322,"src":"2132:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11315,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11318,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2162:6:42","nodeType":"VariableDeclaration","scope":11322,"src":"2154:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11320,"indexed":false,"mutability":"mutable","name":"penalized","nameLocation":"2175:9:42","nodeType":"VariableDeclaration","scope":11322,"src":"2170:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11319,"name":"bool","nodeType":"ElementaryTypeName","src":"2170:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2131:54:42"},"src":"2117:69:42"},{"anonymous":false,"eventSelector":"fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe","id":11328,"name":"RewardsClaimed","nameLocation":"2197:14:42","nodeType":"EventDefinition","parameters":{"id":11327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11324,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2228:4:42","nodeType":"VariableDeclaration","scope":11328,"src":"2212:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11323,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11326,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2242:6:42","nodeType":"VariableDeclaration","scope":11328,"src":"2234:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2211:38:42"},"src":"2191:59:42"},{"anonymous":false,"eventSelector":"6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be442","id":11332,"name":"RewardsDistributed","nameLocation":"2261:18:42","nodeType":"EventDefinition","parameters":{"id":11331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11330,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2288:6:42","nodeType":"VariableDeclaration","scope":11332,"src":"2280:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2280:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2279:16:42"},"src":"2255:41:42"},{"anonymous":false,"eventSelector":"092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe27","id":11338,"name":"StakingTierAdded","nameLocation":"2307:16:42","nodeType":"EventDefinition","parameters":{"id":11337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11334,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2332:12:42","nodeType":"VariableDeclaration","scope":11338,"src":"2324:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2324:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11336,"indexed":false,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"2354:16:42","nodeType":"VariableDeclaration","scope":11338,"src":"2346:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2323:48:42"},"src":"2301:71:42"},{"anonymous":false,"eventSelector":"8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a5468","id":11344,"name":"StakingTierUpdated","nameLocation":"2383:18:42","nodeType":"EventDefinition","parameters":{"id":11343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11340,"indexed":false,"mutability":"mutable","name":"lockDuration","nameLocation":"2410:12:42","nodeType":"VariableDeclaration","scope":11344,"src":"2402:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11342,"indexed":false,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"2432:16:42","nodeType":"VariableDeclaration","scope":11344,"src":"2424:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2424:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2401:48:42"},"src":"2377:73:42"},{"anonymous":false,"eventSelector":"653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d4","id":11348,"name":"EarlyWithdrawalPenaltyUpdated","nameLocation":"2461:29:42","nodeType":"EventDefinition","parameters":{"id":11347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11346,"indexed":false,"mutability":"mutable","name":"penalty","nameLocation":"2499:7:42","nodeType":"VariableDeclaration","scope":11348,"src":"2491:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2490:17:42"},"src":"2455:53:42"},{"body":{"id":11391,"nodeType":"Block","src":"2565:529:42","statements":[{"expression":{"id":11359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11355,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11273,"src":"2575:9:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11357,"name":"_omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11350,"src":"2594:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11356,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2587:6:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2063_$","typeString":"type(contract IERC20)"}},"id":11358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:18:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"src":"2575:30:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":11360,"nodeType":"ExpressionStatement","src":"2575:30:42"},{"expression":{"arguments":[{"id":11362,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2663:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":11363,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11352,"src":"2683:5:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11361,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[503],"referencedDeclaration":503,"src":"2652:10:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:37:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11365,"nodeType":"ExpressionStatement","src":"2652:37:42"},{"expression":{"arguments":[{"hexValue":"30","id":11367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"313030","id":11368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2767:3:42","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"id":11366,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"2748:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2748:23:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11370,"nodeType":"ExpressionStatement","src":"2748:23:42"},{"expression":{"arguments":[{"hexValue":"3330","id":11372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:7:42","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},{"hexValue":"313035","id":11373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2844:3:42","typeDescriptions":{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"},"value":"105"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"}],"id":11371,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"2819:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2819:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11375,"nodeType":"ExpressionStatement","src":"2819:29:42"},{"expression":{"arguments":[{"hexValue":"3930","id":11377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2904:7:42","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},{"hexValue":"313135","id":11378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2913:3:42","typeDescriptions":{"typeIdentifier":"t_rational_115_by_1","typeString":"int_const 115"},"value":"115"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},{"typeIdentifier":"t_rational_115_by_1","typeString":"int_const 115"}],"id":11376,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"2888:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11380,"nodeType":"ExpressionStatement","src":"2888:29:42"},{"expression":{"arguments":[{"hexValue":"313830","id":11382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2973:8:42","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},"value":"180"},{"hexValue":"313330","id":11383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:3:42","typeDescriptions":{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"},"value":"130"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"}],"id":11381,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"2957:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:30:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11385,"nodeType":"ExpressionStatement","src":"2957:30:42"},{"expression":{"arguments":[{"hexValue":"333635","id":11387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3043:8:42","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},{"hexValue":"313530","id":11388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3053:3:42","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"}],"id":11386,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"3027:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3027:30:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11390,"nodeType":"ExpressionStatement","src":"3027:30:42"}]},"id":11392,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11350,"mutability":"mutable","name":"_omniToken","nameLocation":"2538:10:42","nodeType":"VariableDeclaration","scope":11392,"src":"2530:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11349,"name":"address","nodeType":"ElementaryTypeName","src":"2530:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11352,"mutability":"mutable","name":"admin","nameLocation":"2558:5:42","nodeType":"VariableDeclaration","scope":11392,"src":"2550:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11351,"name":"address","nodeType":"ElementaryTypeName","src":"2550:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2529:35:42"},"returnParameters":{"id":11354,"nodeType":"ParameterList","parameters":[],"src":"2565:0:42"},"scope":12386,"src":"2518:576:42","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11408,"nodeType":"Block","src":"3374:64:42","statements":[{"expression":{"arguments":[{"id":11404,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11395,"src":"3400:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11405,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11397,"src":"3414:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11403,"name":"_addStakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11455,"src":"3384:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:47:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11407,"nodeType":"ExpressionStatement","src":"3384:47:42"}]},"documentation":{"id":11393,"nodeType":"StructuredDocumentation","src":"3104:155:42","text":" @notice Adds a new staking tier\n @param lockDuration Duration in seconds\n @param rewardMultiplier Multiplier in basis points"},"functionSelector":"111a9802","id":11409,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11400,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3354:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11401,"kind":"modifierInvocation","modifierName":{"id":11399,"name":"onlyRole","nameLocations":["3345:8:42"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3345:8:42"},"nodeType":"ModifierInvocation","src":"3345:28:42"}],"name":"addStakingTier","nameLocation":"3273:14:42","nodeType":"FunctionDefinition","parameters":{"id":11398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11395,"mutability":"mutable","name":"lockDuration","nameLocation":"3296:12:42","nodeType":"VariableDeclaration","scope":11409,"src":"3288:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3288:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11397,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"3318:16:42","nodeType":"VariableDeclaration","scope":11409,"src":"3310:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3287:48:42"},"returnParameters":{"id":11402,"nodeType":"ParameterList","parameters":[],"src":"3374:0:42"},"scope":12386,"src":"3264:174:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11454,"nodeType":"Block","src":"3601:461:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11418,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11414,"src":"3619:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":11419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3639:3:42","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3619:23:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469706c696572206d757374206265206174206c65617374203130302028317829","id":11421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3644:38:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""},"value":"Multiplier must be at least 100 (1x)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""}],"id":11417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3611:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3611:72:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11423,"nodeType":"ExpressionStatement","src":"3611:72:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":11425,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"3701:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11427,"indexExpression":{"id":11426,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11412,"src":"3714:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3701:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3728:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"3701:43:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3748:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3701:48:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469657220616c726561647920657869737473","id":11431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3751:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8af6920dbd8dace9b924e3584379cca6e3bbcf8cbc394090050ccb643a2dc44","typeString":"literal_string \"Tier already exists\""},"value":"Tier already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8af6920dbd8dace9b924e3584379cca6e3bbcf8cbc394090050ccb643a2dc44","typeString":"literal_string \"Tier already exists\""}],"id":11424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3693:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3693:80:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11433,"nodeType":"ExpressionStatement","src":"3693:80:42"},{"expression":{"id":11441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11434,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"3792:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11436,"indexExpression":{"id":11435,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11412,"src":"3805:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3792:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11438,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11412,"src":"3861:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11439,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11414,"src":"3905:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11437,"name":"StakingTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11257,"src":"3821:11:42","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StakingTier_$11257_storage_ptr_$","typeString":"type(struct OMNIStaking.StakingTier storage pointer)"}},"id":11440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3847:12:42","3887:16:42"],"names":["lockDuration","rewardMultiplier"],"nodeType":"FunctionCall","src":"3821:111:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_memory_ptr","typeString":"struct OMNIStaking.StakingTier memory"}},"src":"3792:140:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11442,"nodeType":"ExpressionStatement","src":"3792:140:42"},{"expression":{"arguments":[{"id":11446,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11412,"src":"3970:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11443,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11281,"src":"3951:13:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":11445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3965:4:42","memberName":"push","nodeType":"MemberAccess","src":"3951:18:42","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":11447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3951:32:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11448,"nodeType":"ExpressionStatement","src":"3951:32:42"},{"eventCall":{"arguments":[{"id":11450,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11412,"src":"4024:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11451,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11414,"src":"4038:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11449,"name":"StakingTierAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11338,"src":"4007:16:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:48:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11453,"nodeType":"EmitStatement","src":"4002:53:42"}]},"documentation":{"id":11410,"nodeType":"StructuredDocumentation","src":"3448:66:42","text":" @notice Internal function to add a staking tier"},"id":11455,"implemented":true,"kind":"function","modifiers":[],"name":"_addStakingTier","nameLocation":"3528:15:42","nodeType":"FunctionDefinition","parameters":{"id":11415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11412,"mutability":"mutable","name":"lockDuration","nameLocation":"3552:12:42","nodeType":"VariableDeclaration","scope":11455,"src":"3544:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11414,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"3574:16:42","nodeType":"VariableDeclaration","scope":11455,"src":"3566:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3566:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3543:48:42"},"returnParameters":{"id":11416,"nodeType":"ParameterList","parameters":[],"src":"3601:0:42"},"scope":12386,"src":"3519:543:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":11495,"nodeType":"Block","src":"4341:333:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11467,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11460,"src":"4359:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":11468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4379:3:42","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4359:23:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469706c696572206d757374206265206174206c65617374203130302028317829","id":11470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4384:38:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""},"value":"Multiplier must be at least 100 (1x)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_81893b29acba354f488e263849eaeabdf81dc07470c0753a62e099277084f71c","typeString":"literal_string \"Multiplier must be at least 100 (1x)\""}],"id":11466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4351:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:72:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11472,"nodeType":"ExpressionStatement","src":"4351:72:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":11474,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"4441:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11476,"indexExpression":{"id":11475,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11458,"src":"4454:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4441:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4468:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"4441:43:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":11478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4488:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4441:48:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469657220646f65736e2774206578697374","id":11480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4491:20:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_6401960103d2fa1392a37bfffd14a3b1f09d9635831db486f8d0499a3bd7bf3d","typeString":"literal_string \"Tier doesn't exist\""},"value":"Tier doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6401960103d2fa1392a37bfffd14a3b1f09d9635831db486f8d0499a3bd7bf3d","typeString":"literal_string \"Tier doesn't exist\""}],"id":11473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4433:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4433:79:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11482,"nodeType":"ExpressionStatement","src":"4433:79:42"},{"expression":{"id":11488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":11483,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"4531:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11485,"indexExpression":{"id":11484,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11458,"src":"4544:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4531:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4558:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"4531:43:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11487,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11460,"src":"4577:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4531:62:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11489,"nodeType":"ExpressionStatement","src":"4531:62:42"},{"eventCall":{"arguments":[{"id":11491,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11458,"src":"4636:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11492,"name":"rewardMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11460,"src":"4650:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11490,"name":"StakingTierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11344,"src":"4617:18:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:50:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11494,"nodeType":"EmitStatement","src":"4612:55:42"}]},"documentation":{"id":11456,"nodeType":"StructuredDocumentation","src":"4072:151:42","text":" @notice Updates an existing staking tier\n @param lockDuration Duration to update\n @param rewardMultiplier New multiplier"},"functionSelector":"68a34f98","id":11496,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11463,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4321:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11464,"kind":"modifierInvocation","modifierName":{"id":11462,"name":"onlyRole","nameLocations":["4312:8:42"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4312:8:42"},"nodeType":"ModifierInvocation","src":"4312:28:42"}],"name":"updateStakingTier","nameLocation":"4237:17:42","nodeType":"FunctionDefinition","parameters":{"id":11461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11458,"mutability":"mutable","name":"lockDuration","nameLocation":"4263:12:42","nodeType":"VariableDeclaration","scope":11496,"src":"4255:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11460,"mutability":"mutable","name":"rewardMultiplier","nameLocation":"4285:16:42","nodeType":"VariableDeclaration","scope":11496,"src":"4277:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4254:48:42"},"returnParameters":{"id":11465,"nodeType":"ParameterList","parameters":[],"src":"4341:0:42"},"scope":12386,"src":"4228:446:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11520,"nodeType":"Block","src":"4895:165:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11506,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11499,"src":"4913:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"33303030","id":11507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:4:42","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},"src":"4913:15:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50656e616c74792063616e6e6f742065786365656420333025","id":11509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4930:27:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e7a27f7acd8f5c1e4e963e443d19932771da084fb5d63f14ecd97596f09c2bb","typeString":"literal_string \"Penalty cannot exceed 30%\""},"value":"Penalty cannot exceed 30%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e7a27f7acd8f5c1e4e963e443d19932771da084fb5d63f14ecd97596f09c2bb","typeString":"literal_string \"Penalty cannot exceed 30%\""}],"id":11505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4905:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:53:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11511,"nodeType":"ExpressionStatement","src":"4905:53:42"},{"expression":{"id":11514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11512,"name":"earlyWithdrawalPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11304,"src":"4968:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11513,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11499,"src":"4993:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4968:32:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11515,"nodeType":"ExpressionStatement","src":"4968:32:42"},{"eventCall":{"arguments":[{"id":11517,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11499,"src":"5045:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11516,"name":"EarlyWithdrawalPenaltyUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11348,"src":"5015:29:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5015:38:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11519,"nodeType":"EmitStatement","src":"5010:43:42"}]},"documentation":{"id":11497,"nodeType":"StructuredDocumentation","src":"4684:113:42","text":" @notice Updates the early withdrawal penalty\n @param penalty New penalty in basis points"},"functionSelector":"d1e85a74","id":11521,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11502,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4875:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11503,"kind":"modifierInvocation","modifierName":{"id":11501,"name":"onlyRole","nameLocations":["4866:8:42"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4866:8:42"},"nodeType":"ModifierInvocation","src":"4866:28:42"}],"name":"updateEarlyWithdrawalPenalty","nameLocation":"4811:28:42","nodeType":"FunctionDefinition","parameters":{"id":11500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11499,"mutability":"mutable","name":"penalty","nameLocation":"4848:7:42","nodeType":"VariableDeclaration","scope":11521,"src":"4840:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4840:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4839:17:42"},"returnParameters":{"id":11504,"nodeType":"ParameterList","parameters":[],"src":"4895:0:42"},"scope":12386,"src":"4802:258:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11627,"nodeType":"Block","src":"5323:1209:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"5341:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5350:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5341:10:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207374616b652030","id":11535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5353:16:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""},"value":"Cannot stake 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""}],"id":11531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5333:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:37:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11537,"nodeType":"ExpressionStatement","src":"5333:37:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11539,"name":"lockDurationIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11526,"src":"5388:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":11540,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11281,"src":"5408:13:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":11541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5422:6:42","memberName":"length","nodeType":"MemberAccess","src":"5408:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5388:40:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b206475726174696f6e20696e646578","id":11543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5430:29:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_892947cd1e6af073f7383f242848229f4b6d85ad9a72c2df1d86f29615b53bf2","typeString":"literal_string \"Invalid lock duration index\""},"value":"Invalid lock duration index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_892947cd1e6af073f7383f242848229f4b6d85ad9a72c2df1d86f29615b53bf2","typeString":"literal_string \"Invalid lock duration index\""}],"id":11538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5380:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:80:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11545,"nodeType":"ExpressionStatement","src":"5380:80:42"},{"assignments":[11547],"declarations":[{"constant":false,"id":11547,"mutability":"mutable","name":"lockDuration","nameLocation":"5487:12:42","nodeType":"VariableDeclaration","scope":11627,"src":"5479:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5479:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11551,"initialValue":{"baseExpression":{"id":11548,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11281,"src":"5502:13:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":11550,"indexExpression":{"id":11549,"name":"lockDurationIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11526,"src":"5516:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:32:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5479:55:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":11553,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"5595:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11555,"indexExpression":{"id":11554,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11547,"src":"5608:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5595:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5622:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"5595:43:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5641:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5595:47:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b206475726174696f6e","id":11559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5644:23:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_34cde2575d21b3342232171c2bf5d4b01c8c3cf541540008fcb550fe5a739957","typeString":"literal_string \"Invalid lock duration\""},"value":"Invalid lock duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34cde2575d21b3342232171c2bf5d4b01c8c3cf541540008fcb550fe5a739957","typeString":"literal_string \"Invalid lock duration\""}],"id":11552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5587:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:81:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11561,"nodeType":"ExpressionStatement","src":"5587:81:42"},{"expression":{"arguments":[{"expression":{"id":11563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5753:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5757:6:42","memberName":"sender","nodeType":"MemberAccess","src":"5753:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11562,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11854,"src":"5730:22:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:34:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11566,"nodeType":"ExpressionStatement","src":"5730:34:42"},{"expression":{"arguments":[{"expression":{"id":11570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5847:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5851:6:42","memberName":"sender","nodeType":"MemberAccess","src":"5847:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5867:4:42","typeDescriptions":{"typeIdentifier":"t_contract$_OMNIStaking_$12386","typeString":"contract OMNIStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OMNIStaking_$12386","typeString":"contract OMNIStaking"}],"id":11573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5859:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11572,"name":"address","nodeType":"ElementaryTypeName","src":"5859:7:42","typeDescriptions":{}}},"id":11575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:13:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"5874:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11567,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11273,"src":"5820:9:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":11569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5830:16:42","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2531,"src":"5820:26:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2063_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":11577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5820:61:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11578,"nodeType":"ExpressionStatement","src":"5820:61:42"},{"assignments":[11580],"declarations":[{"constant":false,"id":11580,"mutability":"mutable","name":"endTime","nameLocation":"5936:7:42","nodeType":"VariableDeclaration","scope":11627,"src":"5928:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11585,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11581,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5946:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5952:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"5946:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11583,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11547,"src":"5964:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5946:30:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5928:48:42"},{"expression":{"arguments":[{"arguments":[{"id":11592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"6046:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11593,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11547,"src":"6080:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6117:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6123:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"6117:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11596,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11580,"src":"6155:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11597,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6197:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6203:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"6197:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":11599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6236:5:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11591,"name":"UserStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11270,"src":"6014:9:42","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserStake_$11270_storage_ptr_$","typeString":"type(struct OMNIStaking.UserStake storage pointer)"}},"id":11600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6038:6:42","6066:12:42","6106:9:42","6146:7:42","6176:19:42","6226:8:42"],"names":["amount","lockDuration","startTime","endTime","lastRewardClaimTime","unlocked"],"nodeType":"FunctionCall","src":"6014:238:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}],"expression":{"baseExpression":{"id":11586,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"5986:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11589,"indexExpression":{"expression":{"id":11587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5997:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:6:42","memberName":"sender","nodeType":"MemberAccess","src":"5997:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5986:22:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6009:4:42","memberName":"push","nodeType":"MemberAccess","src":"5986:27:42","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_ptr_$_t_struct$_UserStake_$11270_storage_$returns$__$attached_to$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_ptr_$","typeString":"function (struct OMNIStaking.UserStake storage ref[] storage pointer,struct OMNIStaking.UserStake storage ref)"}},"id":11601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5986:267:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11602,"nodeType":"ExpressionStatement","src":"5986:267:42"},{"expression":{"id":11605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11603,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11289,"src":"6303:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"6318:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6303:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11606,"nodeType":"ExpressionStatement","src":"6303:21:42"},{"expression":{"id":11617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11607,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11297,"src":"6378:15:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11610,"indexExpression":{"expression":{"id":11608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6394:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6398:6:42","memberName":"sender","nodeType":"MemberAccess","src":"6394:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6378:27:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"6409:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11612,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"6418:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6409:35:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6408:37:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":11615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6448:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6408:44:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6378:74:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11618,"nodeType":"ExpressionStatement","src":"6378:74:42"},{"eventCall":{"arguments":[{"expression":{"id":11620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6483:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6487:6:42","memberName":"sender","nodeType":"MemberAccess","src":"6483:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11524,"src":"6495:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11623,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11547,"src":"6503:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11624,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11580,"src":"6517:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11619,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11314,"src":"6476:6:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":11625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:49:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11626,"nodeType":"EmitStatement","src":"6471:54:42"}]},"documentation":{"id":11522,"nodeType":"StructuredDocumentation","src":"5070:168:42","text":" @notice Stakes OMNI tokens\n @param amount Amount to stake\n @param lockDurationIndex Index of the lock duration in the lockDurations array"},"functionSelector":"7b0472f0","id":11628,"implemented":true,"kind":"function","modifiers":[{"id":11529,"kind":"modifierInvocation","modifierName":{"id":11528,"name":"nonReentrant","nameLocations":["5310:12:42"],"nodeType":"IdentifierPath","referencedDeclaration":3332,"src":"5310:12:42"},"nodeType":"ModifierInvocation","src":"5310:12:42"}],"name":"stake","nameLocation":"5252:5:42","nodeType":"FunctionDefinition","parameters":{"id":11527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11524,"mutability":"mutable","name":"amount","nameLocation":"5266:6:42","nodeType":"VariableDeclaration","scope":11628,"src":"5258:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5258:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11526,"mutability":"mutable","name":"lockDurationIndex","nameLocation":"5282:17:42","nodeType":"VariableDeclaration","scope":11628,"src":"5274:25:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11525,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5257:43:42"},"returnParameters":{"id":11530,"nodeType":"ParameterList","parameters":[],"src":"5323:0:42"},"scope":12386,"src":"5243:1289:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11757,"nodeType":"Block","src":"6724:1396:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11637,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11631,"src":"6742:10:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":11638,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"6755:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11641,"indexExpression":{"expression":{"id":11639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6766:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6770:6:42","memberName":"sender","nodeType":"MemberAccess","src":"6766:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:22:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6778:6:42","memberName":"length","nodeType":"MemberAccess","src":"6755:29:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6742:42:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207374616b6520696e646578","id":11644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6786:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070","typeString":"literal_string \"Invalid stake index\""},"value":"Invalid stake index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070","typeString":"literal_string \"Invalid stake index\""}],"id":11636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6734:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6734:74:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11646,"nodeType":"ExpressionStatement","src":"6734:74:42"},{"assignments":[11649],"declarations":[{"constant":false,"id":11649,"mutability":"mutable","name":"userStake","nameLocation":"6845:9:42","nodeType":"VariableDeclaration","scope":11757,"src":"6827:27:42","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake"},"typeName":{"id":11648,"nodeType":"UserDefinedTypeName","pathNode":{"id":11647,"name":"UserStake","nameLocations":["6827:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":11270,"src":"6827:9:42"},"referencedDeclaration":11270,"src":"6827:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake"}},"visibility":"internal"}],"id":11656,"initialValue":{"baseExpression":{"baseExpression":{"id":11650,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"6857:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11653,"indexExpression":{"expression":{"id":11651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6868:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6872:6:42","memberName":"sender","nodeType":"MemberAccess","src":"6868:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6857:22:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11655,"indexExpression":{"id":11654,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11631,"src":"6880:10:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6857:34:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6827:64:42"},{"expression":{"arguments":[{"id":11660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6909:19:42","subExpression":{"expression":{"id":11658,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"6910:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6920:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"6910:18:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616c726561647920756e6c6f636b6564","id":11661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6930:24:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_1355e5fe243f4160d8ea945c472a19abb77d0ec6cf1ab09cd26d4c5a6c664660","typeString":"literal_string \"Stake already unlocked\""},"value":"Stake already unlocked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1355e5fe243f4160d8ea945c472a19abb77d0ec6cf1ab09cd26d4c5a6c664660","typeString":"literal_string \"Stake already unlocked\""}],"id":11657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6901:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6901:54:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11663,"nodeType":"ExpressionStatement","src":"6901:54:42"},{"assignments":[11665],"declarations":[{"constant":false,"id":11665,"mutability":"mutable","name":"amount","nameLocation":"6982:6:42","nodeType":"VariableDeclaration","scope":11757,"src":"6974:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11664,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11668,"initialValue":{"expression":{"id":11666,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"6991:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7001:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"6991:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6974:33:42"},{"assignments":[11670],"declarations":[{"constant":false,"id":11670,"mutability":"mutable","name":"penalized","nameLocation":"7022:9:42","nodeType":"VariableDeclaration","scope":11757,"src":"7017:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11669,"name":"bool","nodeType":"ElementaryTypeName","src":"7017:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":11672,"initialValue":{"hexValue":"66616c7365","id":11671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7034:5:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"7017:22:42"},{"expression":{"arguments":[{"expression":{"id":11674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7124:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7128:6:42","memberName":"sender","nodeType":"MemberAccess","src":"7124:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11673,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11854,"src":"7101:22:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7101:34:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11677,"nodeType":"ExpressionStatement","src":"7101:34:42"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11678,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"7200:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7206:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"7200:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":11680,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"7218:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7228:7:42","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":11265,"src":"7218:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7200:35:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11711,"nodeType":"IfStatement","src":"7196:420:42","trueBody":{"id":11710,"nodeType":"Block","src":"7237:379:42","statements":[{"assignments":[11684],"declarations":[{"constant":false,"id":11684,"mutability":"mutable","name":"penalty","nameLocation":"7305:7:42","nodeType":"VariableDeclaration","scope":11710,"src":"7297:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11683,"name":"uint256","nodeType":"ElementaryTypeName","src":"7297:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11665,"src":"7316:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11686,"name":"earlyWithdrawalPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11304,"src":"7325:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7316:31:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7315:33:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":11689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:5:42","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7315:41:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7297:59:42"},{"expression":{"id":11696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11692,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11665,"src":"7370:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11665,"src":"7379:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":11694,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"7388:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7379:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7370:25:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11697,"nodeType":"ExpressionStatement","src":"7370:25:42"},{"expression":{"id":11700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11698,"name":"penalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11670,"src":"7409:9:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7421:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7409:16:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11701,"nodeType":"ExpressionStatement","src":"7409:16:42"},{"expression":{"id":11704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11702,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11289,"src":"7542:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":11703,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"7557:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11705,"nodeType":"ExpressionStatement","src":"7542:22:42"},{"expression":{"arguments":[{"id":11707,"name":"penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"7597:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11706,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12091,"src":"7578:18:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:27:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11709,"nodeType":"ExpressionStatement","src":"7578:27:42"}]}},{"expression":{"id":11716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":11712,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"7668:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7678:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"7668:18:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7689:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7668:25:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11717,"nodeType":"ExpressionStatement","src":"7668:25:42"},{"expression":{"id":11721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11718,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11289,"src":"7743:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":11719,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"7758:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7768:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"7758:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7743:31:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11722,"nodeType":"ExpressionStatement","src":"7743:31:42"},{"expression":{"id":11740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11723,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11297,"src":"7828:15:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11726,"indexExpression":{"expression":{"id":11724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7844:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7848:6:42","memberName":"sender","nodeType":"MemberAccess","src":"7844:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7828:27:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":11728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7881:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7885:6:42","memberName":"sender","nodeType":"MemberAccess","src":"7881:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11727,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"7860:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:32:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":11731,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11649,"src":"7895:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake storage pointer"}},"id":11732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7905:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"7895:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:51:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7859:53:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11735,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"7915:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7859:82:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7858:84:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":11738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7945:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7858:91:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7828:121:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11741,"nodeType":"ExpressionStatement","src":"7828:121:42"},{"expression":{"arguments":[{"expression":{"id":11745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8031:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8035:6:42","memberName":"sender","nodeType":"MemberAccess","src":"8031:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11747,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11665,"src":"8043:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11742,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11273,"src":"8008:9:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}},"id":11744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8018:12:42","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2504,"src":"8008:22:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2063_$","typeString":"function (contract IERC20,address,uint256)"}},"id":11748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:42:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11749,"nodeType":"ExpressionStatement","src":"8008:42:42"},{"eventCall":{"arguments":[{"expression":{"id":11751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8083:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8087:6:42","memberName":"sender","nodeType":"MemberAccess","src":"8083:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11665,"src":"8095:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11754,"name":"penalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11670,"src":"8103:9:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11750,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11322,"src":"8074:8:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":11755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11756,"nodeType":"EmitStatement","src":"8069:44:42"}]},"documentation":{"id":11629,"nodeType":"StructuredDocumentation","src":"6542:118:42","text":" @notice Unstakes tokens for a specific stake\n @param stakeIndex Index of the stake to unstake"},"functionSelector":"2e17de78","id":11758,"implemented":true,"kind":"function","modifiers":[{"id":11634,"kind":"modifierInvocation","modifierName":{"id":11633,"name":"nonReentrant","nameLocations":["6711:12:42"],"nodeType":"IdentifierPath","referencedDeclaration":3332,"src":"6711:12:42"},"nodeType":"ModifierInvocation","src":"6711:12:42"}],"name":"unstake","nameLocation":"6674:7:42","nodeType":"FunctionDefinition","parameters":{"id":11632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11631,"mutability":"mutable","name":"stakeIndex","nameLocation":"6690:10:42","nodeType":"VariableDeclaration","scope":11758,"src":"6682:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6682:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6681:20:42"},"returnParameters":{"id":11635,"nodeType":"ParameterList","parameters":[],"src":"6724:0:42"},"scope":12386,"src":"6665:1455:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11769,"nodeType":"Block","src":"8230:51:42","statements":[{"expression":{"arguments":[{"expression":{"id":11765,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8263:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8267:6:42","memberName":"sender","nodeType":"MemberAccess","src":"8263:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11764,"name":"_updateAndClaimRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11854,"src":"8240:22:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8240:34:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11768,"nodeType":"ExpressionStatement","src":"8240:34:42"}]},"documentation":{"id":11759,"nodeType":"StructuredDocumentation","src":"8130:49:42","text":" @notice Claims pending rewards"},"functionSelector":"372500ab","id":11770,"implemented":true,"kind":"function","modifiers":[{"id":11762,"kind":"modifierInvocation","modifierName":{"id":11761,"name":"nonReentrant","nameLocations":["8217:12:42"],"nodeType":"IdentifierPath","referencedDeclaration":3332,"src":"8217:12:42"},"nodeType":"ModifierInvocation","src":"8217:12:42"}],"name":"claimRewards","nameLocation":"8193:12:42","nodeType":"FunctionDefinition","parameters":{"id":11760,"nodeType":"ParameterList","parameters":[],"src":"8205:2:42"},"returnParameters":{"id":11763,"nodeType":"ParameterList","parameters":[],"src":"8230:0:42"},"scope":12386,"src":"8184:97:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11853,"nodeType":"Block","src":"8455:806:42","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":11777,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"8490:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11776,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"8469:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8469:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8499:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8469:31:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11782,"nodeType":"IfStatement","src":"8465:44:42","trueBody":{"functionReturnParameters":11775,"id":11781,"nodeType":"Return","src":"8502:7:42"}},{"assignments":[11784],"declarations":[{"constant":false,"id":11784,"mutability":"mutable","name":"pending","nameLocation":"8572:7:42","nodeType":"VariableDeclaration","scope":11853,"src":"8564:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11783,"name":"uint256","nodeType":"ElementaryTypeName","src":"8564:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11788,"initialValue":{"arguments":[{"id":11786,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"8606:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11785,"name":"calculatePendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11972,"src":"8582:23:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8582:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8564:47:42"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11789,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11784,"src":"8634:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8644:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8634:11:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11852,"nodeType":"IfStatement","src":"8630:625:42","trueBody":{"id":11851,"nodeType":"Block","src":"8647:608:42","statements":[{"body":{"id":11824,"nodeType":"Block","src":"8767:165:42","statements":[{"condition":{"id":11811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8789:29:42","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":11805,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"8790:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11807,"indexExpression":{"id":11806,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"8801:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8790:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11809,"indexExpression":{"id":11808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11793,"src":"8807:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8790:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":11810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8810:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"8790:28:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11823,"nodeType":"IfStatement","src":"8785:133:42","trueBody":{"id":11822,"nodeType":"Block","src":"8820:98:42","statements":[{"expression":{"id":11820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":11812,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"8842:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11815,"indexExpression":{"id":11813,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"8853:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8842:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11816,"indexExpression":{"id":11814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11793,"src":"8859:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8842:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":11817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8862:19:42","memberName":"lastRewardClaimTime","nodeType":"MemberAccess","referencedDeclaration":11267,"src":"8842:39:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":11818,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"8884:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8890:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"8884:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8842:57:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11821,"nodeType":"ExpressionStatement","src":"8842:57:42"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11793,"src":"8733:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":11797,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"8737:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11799,"indexExpression":{"id":11798,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"8748:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8737:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8754:6:42","memberName":"length","nodeType":"MemberAccess","src":"8737:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8733:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11825,"initializationExpression":{"assignments":[11793],"declarations":[{"constant":false,"id":11793,"mutability":"mutable","name":"i","nameLocation":"8726:1:42","nodeType":"VariableDeclaration","scope":11825,"src":"8721:6:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11792,"name":"uint","nodeType":"ElementaryTypeName","src":"8721:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11795,"initialValue":{"hexValue":"30","id":11794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8730:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8721:10:42"},"loopExpression":{"expression":{"id":11803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8762:3:42","subExpression":{"id":11802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11793,"src":"8762:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11804,"nodeType":"ExpressionStatement","src":"8762:3:42"},"nodeType":"ForStatement","src":"8716:216:42"},{"expression":{"id":11830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11826,"name":"pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11301,"src":"8995:14:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11828,"indexExpression":{"id":11827,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"9010:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8995:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":11829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8995:24:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11831,"nodeType":"ExpressionStatement","src":"8995:24:42"},{"assignments":[11833,null],"declarations":[{"constant":false,"id":11833,"mutability":"mutable","name":"success","nameLocation":"9088:7:42","nodeType":"VariableDeclaration","scope":11851,"src":"9083:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11832,"name":"bool","nodeType":"ElementaryTypeName","src":"9083:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11840,"initialValue":{"arguments":[{"hexValue":"","id":11838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9127:2:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":11834,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"9101:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9106:4:42","memberName":"call","nodeType":"MemberAccess","src":"9101:9:42","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11836,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11784,"src":"9118:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9101:25:42","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9101:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9082:48:42"},{"expression":{"arguments":[{"id":11842,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11833,"src":"9152:7:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":11843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9161:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":11841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9144:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9144:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11845,"nodeType":"ExpressionStatement","src":"9144:39:42"},{"eventCall":{"arguments":[{"id":11847,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"9230:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11848,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11784,"src":"9236:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11846,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11328,"src":"9215:14:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9215:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11850,"nodeType":"EmitStatement","src":"9210:34:42"}]}}]},"documentation":{"id":11771,"nodeType":"StructuredDocumentation","src":"8291:104:42","text":" @notice Internal function to update and claim rewards\n @param user User address"},"id":11854,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAndClaimRewards","nameLocation":"8409:22:42","nodeType":"FunctionDefinition","parameters":{"id":11774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11773,"mutability":"mutable","name":"user","nameLocation":"8440:4:42","nodeType":"VariableDeclaration","scope":11854,"src":"8432:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11772,"name":"address","nodeType":"ElementaryTypeName","src":"8432:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8431:14:42"},"returnParameters":{"id":11775,"nodeType":"ParameterList","parameters":[],"src":"8455:0:42"},"scope":12386,"src":"8400:861:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":11971,"nodeType":"Block","src":"9486:1005:42","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":11863,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"9521:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11862,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"9500:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9500:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9500:31:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11869,"nodeType":"IfStatement","src":"9496:45:42","trueBody":{"expression":{"hexValue":"30","id":11867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9540:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":11861,"id":11868,"nodeType":"Return","src":"9533:8:42"}},{"assignments":[11871],"declarations":[{"constant":false,"id":11871,"mutability":"mutable","name":"newRewards","nameLocation":"9568:10:42","nodeType":"VariableDeclaration","scope":11971,"src":"9560:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11870,"name":"uint256","nodeType":"ElementaryTypeName","src":"9560:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":11873,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"9603:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11872,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"9582:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9582:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11875,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"9611:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9582:55:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9581:57:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":11878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9641:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"9581:64:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":11880,"name":"userRewardDebts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11297,"src":"9648:15:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11882,"indexExpression":{"id":11881,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"9664:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9648:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9581:88:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9560:109:42"},{"assignments":[11886],"declarations":[{"constant":false,"id":11886,"mutability":"mutable","name":"adjustedRewards","nameLocation":"9754:15:42","nodeType":"VariableDeclaration","scope":11971,"src":"9746:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11885,"name":"uint256","nodeType":"ElementaryTypeName","src":"9746:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11888,"initialValue":{"hexValue":"30","id":11887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9772:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9746:27:42"},{"assignments":[11890],"declarations":[{"constant":false,"id":11890,"mutability":"mutable","name":"totalUserStaked","nameLocation":"9791:15:42","nodeType":"VariableDeclaration","scope":11971,"src":"9783:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11889,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11894,"initialValue":{"arguments":[{"id":11892,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"9830:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11891,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"9809:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9809:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9783:52:42"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11895,"name":"totalUserStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11890,"src":"9858:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9876:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9858:19:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11964,"nodeType":"IfStatement","src":"9854:567:42","trueBody":{"id":11963,"nodeType":"Block","src":"9879:542:42","statements":[{"body":{"id":11961,"nodeType":"Block","src":"9944:467:42","statements":[{"assignments":[11913],"declarations":[{"constant":false,"id":11913,"mutability":"mutable","name":"myStake","nameLocation":"9979:7:42","nodeType":"VariableDeclaration","scope":11961,"src":"9962:24:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake"},"typeName":{"id":11912,"nodeType":"UserDefinedTypeName","pathNode":{"id":11911,"name":"UserStake","nameLocations":["9962:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":11270,"src":"9962:9:42"},"referencedDeclaration":11270,"src":"9962:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake"}},"visibility":"internal"}],"id":11919,"initialValue":{"baseExpression":{"baseExpression":{"id":11914,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"9989:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11916,"indexExpression":{"id":11915,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"10000:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9989:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11918,"indexExpression":{"id":11917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11899,"src":"10006:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9989:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9962:46:42"},{"condition":{"id":11922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10030:17:42","subExpression":{"expression":{"id":11920,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11913,"src":"10031:7:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":11921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10039:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"10031:16:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11960,"nodeType":"IfStatement","src":"10026:371:42","trueBody":{"id":11959,"nodeType":"Block","src":"10049:348:42","statements":[{"assignments":[11924],"declarations":[{"constant":false,"id":11924,"mutability":"mutable","name":"stakeShare","nameLocation":"10079:10:42","nodeType":"VariableDeclaration","scope":11959,"src":"10071:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11923,"name":"uint256","nodeType":"ElementaryTypeName","src":"10071:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11925,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11913,"src":"10093:7:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":11926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10101:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"10093:14:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":11927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10093:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10092:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11930,"name":"totalUserStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11890,"src":"10118:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10092:41:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10071:62:42"},{"assignments":[11934],"declarations":[{"constant":false,"id":11934,"mutability":"mutable","name":"stakeRewards","nameLocation":"10163:12:42","nodeType":"VariableDeclaration","scope":11959,"src":"10155:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10155:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11935,"name":"newRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11871,"src":"10179:10:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11936,"name":"stakeShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11924,"src":"10192:10:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10179:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10178:25:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":11939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10206:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10178:32:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10155:55:42"},{"assignments":[11943],"declarations":[{"constant":false,"id":11943,"mutability":"mutable","name":"multiplier","nameLocation":"10240:10:42","nodeType":"VariableDeclaration","scope":11959,"src":"10232:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10232:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11949,"initialValue":{"expression":{"baseExpression":{"id":11944,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"10253:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":11947,"indexExpression":{"expression":{"id":11945,"name":"myStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11913,"src":"10266:7:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":11946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10274:12:42","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":11261,"src":"10266:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10253:34:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":11948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10288:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"10253:51:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10232:72:42"},{"expression":{"id":11957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11950,"name":"adjustedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11886,"src":"10326:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11951,"name":"stakeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11934,"src":"10346:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11952,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11943,"src":"10361:10:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10346:25:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10345:27:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":11955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10375:3:42","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10345:33:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10326:52:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11958,"nodeType":"ExpressionStatement","src":"10326:52:42"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11899,"src":"9910:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":11903,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"9914:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":11905,"indexExpression":{"id":11904,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"9925:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9914:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":11906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9931:6:42","memberName":"length","nodeType":"MemberAccess","src":"9914:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11962,"initializationExpression":{"assignments":[11899],"declarations":[{"constant":false,"id":11899,"mutability":"mutable","name":"i","nameLocation":"9903:1:42","nodeType":"VariableDeclaration","scope":11962,"src":"9898:6:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11898,"name":"uint","nodeType":"ElementaryTypeName","src":"9898:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11901,"initialValue":{"hexValue":"30","id":11900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9907:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9898:10:42"},"loopExpression":{"expression":{"id":11909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9939:3:42","subExpression":{"id":11908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11899,"src":"9939:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11910,"nodeType":"ExpressionStatement","src":"9939:3:42"},"nodeType":"ForStatement","src":"9893:518:42"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":11965,"name":"pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11301,"src":"10446:14:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11967,"indexExpression":{"id":11966,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11857,"src":"10461:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10446:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11968,"name":"adjustedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11886,"src":"10469:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10446:38:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11861,"id":11970,"nodeType":"Return","src":"10439:45:42"}]},"documentation":{"id":11855,"nodeType":"StructuredDocumentation","src":"9271:133:42","text":" @notice Calculate pending rewards for a user\n @param user User address\n @return Pending rewards in wei"},"functionSelector":"097aad10","id":11972,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePendingRewards","nameLocation":"9418:23:42","nodeType":"FunctionDefinition","parameters":{"id":11858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11857,"mutability":"mutable","name":"user","nameLocation":"9450:4:42","nodeType":"VariableDeclaration","scope":11972,"src":"9442:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11856,"name":"address","nodeType":"ElementaryTypeName","src":"9442:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9441:14:42"},"returnParameters":{"id":11861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11972,"src":"9477:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11859,"name":"uint256","nodeType":"ElementaryTypeName","src":"9477:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9476:9:42"},"scope":12386,"src":"9409:1082:42","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11992,"nodeType":"Block","src":"10644:101:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10662:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10666:5:42","memberName":"value","nodeType":"MemberAccess","src":"10662:9:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10674:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10662:13:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420646973747269627574652030","id":11984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10677:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f2f7f75019e44b511c6617e876390a5de68db517927f4e45158e54b93c2c02b","typeString":"literal_string \"Cannot distribute 0\""},"value":"Cannot distribute 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f2f7f75019e44b511c6617e876390a5de68db517927f4e45158e54b93c2c02b","typeString":"literal_string \"Cannot distribute 0\""}],"id":11979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10654:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10654:45:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11986,"nodeType":"ExpressionStatement","src":"10654:45:42"},{"expression":{"arguments":[{"expression":{"id":11988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10728:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10732:5:42","memberName":"value","nodeType":"MemberAccess","src":"10728:9:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11987,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12091,"src":"10709:18:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11991,"nodeType":"ExpressionStatement","src":"10709:29:42"}]},"documentation":{"id":11973,"nodeType":"StructuredDocumentation","src":"10501:61:42","text":" @notice Distributes ETH rewards to stakers"},"functionSelector":"6f4a2cd0","id":11993,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11976,"name":"FEE_DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11252,"src":"10622:20:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11977,"kind":"modifierInvocation","modifierName":{"id":11975,"name":"onlyRole","nameLocations":["10613:8:42"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10613:8:42"},"nodeType":"ModifierInvocation","src":"10613:30:42"}],"name":"distributeRewards","nameLocation":"10576:17:42","nodeType":"FunctionDefinition","parameters":{"id":11974,"nodeType":"ParameterList","parameters":[],"src":"10593:2:42"},"returnParameters":{"id":11978,"nodeType":"ParameterList","parameters":[],"src":"10644:0:42"},"scope":12386,"src":"10567:178:42","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":12090,"nodeType":"Block","src":"10921:948:42","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11999,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11289,"src":"10935:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10935:16:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12072,"nodeType":"IfStatement","src":"10931:711:42","trueBody":{"id":12071,"nodeType":"Block","src":"10953:689:42","statements":[{"assignments":[12003],"declarations":[{"constant":false,"id":12003,"mutability":"mutable","name":"adminExists","nameLocation":"11016:11:42","nodeType":"VariableDeclaration","scope":12071,"src":"11011:16:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12002,"name":"bool","nodeType":"ElementaryTypeName","src":"11011:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":12005,"initialValue":{"hexValue":"66616c7365","id":12004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11030:5:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"11011:24:42"},{"body":{"id":12043,"nodeType":"Block","src":"11083:318:42","statements":[{"clauses":[{"block":{"id":12037,"nodeType":"Block","src":"11171:163:42","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12024,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12022,"src":"11197:5:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11214:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11206:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12025,"name":"address","nodeType":"ElementaryTypeName","src":"11206:7:42","typeDescriptions":{}}},"id":12028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11206:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11197:19:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12036,"nodeType":"IfStatement","src":"11193:123:42","trueBody":{"id":12035,"nodeType":"Block","src":"11218:98:42","statements":[{"expression":{"id":12032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12030,"name":"adminExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12003,"src":"11244:11:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":12031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11258:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11244:18:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12033,"nodeType":"ExpressionStatement","src":"11244:18:42"},{"id":12034,"nodeType":"Break","src":"11288:5:42"}]}}]},"errorName":"","id":12038,"nodeType":"TryCatchClause","parameters":{"id":12023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12022,"mutability":"mutable","name":"admin","nameLocation":"11164:5:42","nodeType":"VariableDeclaration","scope":12038,"src":"11156:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12021,"name":"address","nodeType":"ElementaryTypeName","src":"11156:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11155:15:42"},"src":"11147:187:42"},{"block":{"id":12040,"nodeType":"Block","src":"11341:46:42","statements":[{"id":12039,"nodeType":"Break","src":"11363:5:42"}]},"errorName":"","id":12041,"nodeType":"TryCatchClause","src":"11335:52:42"}],"externalCall":{"arguments":[{"id":12018,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"11124:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12007,"src":"11144:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12016,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11105:4:42","typeDescriptions":{"typeIdentifier":"t_contract$_OMNIStaking_$12386","typeString":"contract OMNIStaking"}},"id":12017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11110:13:42","memberName":"getRoleMember","nodeType":"MemberAccess","referencedDeclaration":440,"src":"11105:18:42","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view external returns (address)"}},"id":12020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11105:41:42","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12042,"nodeType":"TryStatement","src":"11101:286:42"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12007,"src":"11069:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":12011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11073:3:42","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"11069:7:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12044,"initializationExpression":{"assignments":[12007],"declarations":[{"constant":false,"id":12007,"mutability":"mutable","name":"i","nameLocation":"11062:1:42","nodeType":"VariableDeclaration","scope":12044,"src":"11054:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11054:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12009,"initialValue":{"hexValue":"30","id":12008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11066:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11054:13:42"},"loopExpression":{"expression":{"id":12014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11078:3:42","subExpression":{"id":12013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12007,"src":"11078:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12015,"nodeType":"ExpressionStatement","src":"11078:3:42"},"nodeType":"ForStatement","src":"11049:352:42"},{"expression":{"arguments":[{"id":12046,"name":"adminExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12003,"src":"11422:11:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2061646d696e20617661696c61626c65","id":12047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11435:20:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cbc6d5546a45b34abb7e26b9262965cf807d6736f7440da609c8a86b8936c2e","typeString":"literal_string \"No admin available\""},"value":"No admin available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cbc6d5546a45b34abb7e26b9262965cf807d6736f7440da609c8a86b8936c2e","typeString":"literal_string \"No admin available\""}],"id":12045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11414:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11414:42:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12049,"nodeType":"ExpressionStatement","src":"11414:42:42"},{"assignments":[12051,null],"declarations":[{"constant":false,"id":12051,"mutability":"mutable","name":"success","nameLocation":"11476:7:42","nodeType":"VariableDeclaration","scope":12071,"src":"11471:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12050,"name":"bool","nodeType":"ElementaryTypeName","src":"11471:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":12064,"initialValue":{"arguments":[{"hexValue":"","id":12062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11555:2:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[{"id":12055,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"11511:18:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":12056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11531:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12054,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"11497:13:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":12057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11497:36:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:8:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":12052,"name":"address","nodeType":"ElementaryTypeName","src":"11489:8:42","stateMutability":"payable","typeDescriptions":{}}},"id":12058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:45:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":12059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11535:4:42","memberName":"call","nodeType":"MemberAccess","src":"11489:50:42","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":12061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":12060,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11996,"src":"11547:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11489:65:42","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":12063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:69:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11470:88:42"},{"expression":{"arguments":[{"id":12066,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12051,"src":"11580:7:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":12067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11589:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":12065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11572:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11572:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12069,"nodeType":"ExpressionStatement","src":"11572:39:42"},{"functionReturnParameters":11998,"id":12070,"nodeType":"Return","src":"11625:7:42"}]}},{"expression":{"id":12080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12073,"name":"accumulatedRewardsPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"11710:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12074,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11996,"src":"11741:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":12075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11750:4:42","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"11741:13:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11740:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12078,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11289,"src":"11758:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11740:29:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11710:59:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12081,"nodeType":"ExpressionStatement","src":"11710:59:42"},{"expression":{"id":12084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12082,"name":"totalRewardsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11291,"src":"11779:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":12083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11996,"src":"11806:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11779:33:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12085,"nodeType":"ExpressionStatement","src":"11779:33:42"},{"eventCall":{"arguments":[{"id":12087,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11996,"src":"11855:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12086,"name":"RewardsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"11836:18:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":12088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11836:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12089,"nodeType":"EmitStatement","src":"11831:31:42"}]},"documentation":{"id":11994,"nodeType":"StructuredDocumentation","src":"10755:108:42","text":" @notice Internal function to distribute rewards\n @param amount Amount to distribute"},"id":12091,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeRewards","nameLocation":"10877:18:42","nodeType":"FunctionDefinition","parameters":{"id":11997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11996,"mutability":"mutable","name":"amount","nameLocation":"10904:6:42","nodeType":"VariableDeclaration","scope":12091,"src":"10896:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11995,"name":"uint256","nodeType":"ElementaryTypeName","src":"10896:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10895:16:42"},"returnParameters":{"id":11998,"nodeType":"ParameterList","parameters":[],"src":"10921:0:42"},"scope":12386,"src":"10868:1001:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":12138,"nodeType":"Block","src":"12090:243:42","statements":[{"assignments":[12100],"declarations":[{"constant":false,"id":12100,"mutability":"mutable","name":"total","nameLocation":"12108:5:42","nodeType":"VariableDeclaration","scope":12138,"src":"12100:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12100:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12102,"initialValue":{"hexValue":"30","id":12101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12116:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12100:17:42"},{"body":{"id":12134,"nodeType":"Block","src":"12178:127:42","statements":[{"condition":{"id":12122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12196:29:42","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":12116,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"12197:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12118,"indexExpression":{"id":12117,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12094,"src":"12208:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12197:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12120,"indexExpression":{"id":12119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12104,"src":"12214:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12197:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":12121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12217:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"12197:28:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12133,"nodeType":"IfStatement","src":"12192:103:42","trueBody":{"id":12132,"nodeType":"Block","src":"12227:68:42","statements":[{"expression":{"id":12130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12123,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12100,"src":"12245:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":12124,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"12254:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12126,"indexExpression":{"id":12125,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12094,"src":"12265:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12254:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12128,"indexExpression":{"id":12127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12104,"src":"12271:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12254:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":12129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12274:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"12254:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12245:35:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12131,"nodeType":"ExpressionStatement","src":"12245:35:42"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12104,"src":"12144:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":12108,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"12148:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12110,"indexExpression":{"id":12109,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12094,"src":"12159:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12148:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:6:42","memberName":"length","nodeType":"MemberAccess","src":"12148:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12144:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12135,"initializationExpression":{"assignments":[12104],"declarations":[{"constant":false,"id":12104,"mutability":"mutable","name":"i","nameLocation":"12137:1:42","nodeType":"VariableDeclaration","scope":12135,"src":"12132:6:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12103,"name":"uint","nodeType":"ElementaryTypeName","src":"12132:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12106,"initialValue":{"hexValue":"30","id":12105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12141:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12132:10:42"},"loopExpression":{"expression":{"id":12114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:42","subExpression":{"id":12113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12104,"src":"12173:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12115,"nodeType":"ExpressionStatement","src":"12173:3:42"},"nodeType":"ForStatement","src":"12127:178:42"},{"expression":{"id":12136,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12100,"src":"12321:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12098,"id":12137,"nodeType":"Return","src":"12314:12:42"}]},"documentation":{"id":12092,"nodeType":"StructuredDocumentation","src":"11879:132:42","text":" @notice Gets the total amount staked by a user\n @param user User address\n @return Total staked amount"},"functionSelector":"0951984d","id":12139,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalStakedByUser","nameLocation":"12025:20:42","nodeType":"FunctionDefinition","parameters":{"id":12095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12094,"mutability":"mutable","name":"user","nameLocation":"12054:4:42","nodeType":"VariableDeclaration","scope":12139,"src":"12046:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12093,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12045:14:42"},"returnParameters":{"id":12098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12139,"src":"12081:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12081:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12080:9:42"},"scope":12386,"src":"12016:317:42","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":12316,"nodeType":"Block","src":"12944:1220:42","statements":[{"assignments":[12161],"declarations":[{"constant":false,"id":12161,"mutability":"mutable","name":"activeCount","nameLocation":"12962:11:42","nodeType":"VariableDeclaration","scope":12316,"src":"12954:19:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12160,"name":"uint256","nodeType":"ElementaryTypeName","src":"12954:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12163,"initialValue":{"hexValue":"30","id":12162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12976:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12954:23:42"},{"body":{"id":12189,"nodeType":"Block","src":"13078:105:42","statements":[{"condition":{"id":12183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13096:29:42","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":12177,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"13097:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12179,"indexExpression":{"id":12178,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12142,"src":"13108:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13097:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12181,"indexExpression":{"id":12180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12165,"src":"13114:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13097:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":12182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13117:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"13097:28:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12188,"nodeType":"IfStatement","src":"13092:81:42","trueBody":{"id":12187,"nodeType":"Block","src":"13127:46:42","statements":[{"expression":{"id":12185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13145:13:42","subExpression":{"id":12184,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13145:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12186,"nodeType":"ExpressionStatement","src":"13145:13:42"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12165,"src":"13044:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":12169,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"13048:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12171,"indexExpression":{"id":12170,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12142,"src":"13059:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13048:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13065:6:42","memberName":"length","nodeType":"MemberAccess","src":"13048:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13044:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12190,"initializationExpression":{"assignments":[12165],"declarations":[{"constant":false,"id":12165,"mutability":"mutable","name":"i","nameLocation":"13037:1:42","nodeType":"VariableDeclaration","scope":12190,"src":"13032:6:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12164,"name":"uint","nodeType":"ElementaryTypeName","src":"13032:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12167,"initialValue":{"hexValue":"30","id":12166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13041:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13032:10:42"},"loopExpression":{"expression":{"id":12175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13073:3:42","subExpression":{"id":12174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12165,"src":"13073:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12176,"nodeType":"ExpressionStatement","src":"13073:3:42"},"nodeType":"ForStatement","src":"13027:156:42"},{"expression":{"id":12197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12191,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12146,"src":"13230:7:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12195,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13254:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13240:13:42","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12192,"name":"uint256","nodeType":"ElementaryTypeName","src":"13244:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12193,"nodeType":"ArrayTypeName","src":"13244:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13230:36:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12198,"nodeType":"ExpressionStatement","src":"13230:36:42"},{"expression":{"id":12205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12199,"name":"userLockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12149,"src":"13276:17:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12203,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13310:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13296:13:42","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13300:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12201,"nodeType":"ArrayTypeName","src":"13300:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13276:46:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12206,"nodeType":"ExpressionStatement","src":"13276:46:42"},{"expression":{"id":12213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12207,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12152,"src":"13332:10:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12211,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13359:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13345:13:42","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13349:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12209,"nodeType":"ArrayTypeName","src":"13349:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13345:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13332:39:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12214,"nodeType":"ExpressionStatement","src":"13332:39:42"},{"expression":{"id":12221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12215,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12155,"src":"13381:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12219,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13406:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13392:13:42","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12216,"name":"uint256","nodeType":"ElementaryTypeName","src":"13396:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12217,"nodeType":"ArrayTypeName","src":"13396:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13392:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13381:37:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12222,"nodeType":"ExpressionStatement","src":"13381:37:42"},{"expression":{"id":12229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12223,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12158,"src":"13428:11:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12227,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12161,"src":"13456:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13442:13:42","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12224,"name":"uint256","nodeType":"ElementaryTypeName","src":"13446:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12225,"nodeType":"ArrayTypeName","src":"13446:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13442:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13428:40:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12230,"nodeType":"ExpressionStatement","src":"13428:40:42"},{"assignments":[12232],"declarations":[{"constant":false,"id":12232,"mutability":"mutable","name":"index","nameLocation":"13518:5:42","nodeType":"VariableDeclaration","scope":12316,"src":"13510:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12231,"name":"uint256","nodeType":"ElementaryTypeName","src":"13510:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12234,"initialValue":{"hexValue":"30","id":12233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13526:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13510:17:42"},{"body":{"id":12307,"nodeType":"Block","src":"13588:485:42","statements":[{"condition":{"id":12254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13606:29:42","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":12248,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"13607:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12250,"indexExpression":{"id":12249,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12142,"src":"13618:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13607:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12252,"indexExpression":{"id":12251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12236,"src":"13624:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13607:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"id":12253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13627:8:42","memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":11269,"src":"13607:28:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12306,"nodeType":"IfStatement","src":"13602:461:42","trueBody":{"id":12305,"nodeType":"Block","src":"13637:426:42","statements":[{"assignments":[12257],"declarations":[{"constant":false,"id":12257,"mutability":"mutable","name":"userStake","nameLocation":"13672:9:42","nodeType":"VariableDeclaration","scope":12305,"src":"13655:26:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake"},"typeName":{"id":12256,"nodeType":"UserDefinedTypeName","pathNode":{"id":12255,"name":"UserStake","nameLocations":["13655:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":11270,"src":"13655:9:42"},"referencedDeclaration":11270,"src":"13655:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage_ptr","typeString":"struct OMNIStaking.UserStake"}},"visibility":"internal"}],"id":12263,"initialValue":{"baseExpression":{"baseExpression":{"id":12258,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"13684:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12260,"indexExpression":{"id":12259,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12142,"src":"13695:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13684:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12262,"indexExpression":{"id":12261,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12236,"src":"13701:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13684:19:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_storage","typeString":"struct OMNIStaking.UserStake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13655:48:42"},{"expression":{"id":12269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12264,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12146,"src":"13721:7:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12266,"indexExpression":{"id":12265,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"13729:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13721:14:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12267,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12257,"src":"13738:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":12268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13748:6:42","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":11259,"src":"13738:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13721:33:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12270,"nodeType":"ExpressionStatement","src":"13721:33:42"},{"expression":{"id":12276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12271,"name":"userLockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12149,"src":"13772:17:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12273,"indexExpression":{"id":12272,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"13790:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13772:24:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12274,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12257,"src":"13799:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":12275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13809:12:42","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":11261,"src":"13799:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13772:49:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12277,"nodeType":"ExpressionStatement","src":"13772:49:42"},{"expression":{"id":12283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12278,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12152,"src":"13839:10:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12280,"indexExpression":{"id":12279,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"13850:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13839:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12281,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12257,"src":"13859:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":12282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13869:9:42","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":11263,"src":"13859:19:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13839:39:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12284,"nodeType":"ExpressionStatement","src":"13839:39:42"},{"expression":{"id":12290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12285,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12155,"src":"13896:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12287,"indexExpression":{"id":12286,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"13905:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13896:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12288,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12257,"src":"13914:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":12289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13924:7:42","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":11265,"src":"13914:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13896:35:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12291,"nodeType":"ExpressionStatement","src":"13896:35:42"},{"expression":{"id":12300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12292,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12158,"src":"13949:11:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12294,"indexExpression":{"id":12293,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"13961:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13949:18:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":12295,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"13970:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":12298,"indexExpression":{"expression":{"id":12296,"name":"userStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12257,"src":"13983:9:42","typeDescriptions":{"typeIdentifier":"t_struct$_UserStake_$11270_memory_ptr","typeString":"struct OMNIStaking.UserStake memory"}},"id":12297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13993:12:42","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":11261,"src":"13983:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13970:36:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"id":12299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14007:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"13970:53:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13949:74:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12301,"nodeType":"ExpressionStatement","src":"13949:74:42"},{"expression":{"id":12303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14041:7:42","subExpression":{"id":12302,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12232,"src":"14041:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12304,"nodeType":"ExpressionStatement","src":"14041:7:42"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12236,"src":"13554:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":12240,"name":"userStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11287,"src":"13558:10:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage_$","typeString":"mapping(address => struct OMNIStaking.UserStake storage ref[] storage ref)"}},"id":12242,"indexExpression":{"id":12241,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12142,"src":"13569:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13558:16:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStake_$11270_storage_$dyn_storage","typeString":"struct OMNIStaking.UserStake storage ref[] storage ref"}},"id":12243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13575:6:42","memberName":"length","nodeType":"MemberAccess","src":"13558:23:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13554:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12308,"initializationExpression":{"assignments":[12236],"declarations":[{"constant":false,"id":12236,"mutability":"mutable","name":"i","nameLocation":"13547:1:42","nodeType":"VariableDeclaration","scope":12308,"src":"13542:6:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12235,"name":"uint","nodeType":"ElementaryTypeName","src":"13542:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12238,"initialValue":{"hexValue":"30","id":12237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13551:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13542:10:42"},"loopExpression":{"expression":{"id":12246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13583:3:42","subExpression":{"id":12245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12236,"src":"13583:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12247,"nodeType":"ExpressionStatement","src":"13583:3:42"},"nodeType":"ForStatement","src":"13537:536:42"},{"expression":{"components":[{"id":12309,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12146,"src":"14099:7:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":12310,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11281,"src":"14108:13:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"id":12311,"name":"startTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12152,"src":"14123:10:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":12312,"name":"endTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12155,"src":"14135:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":12313,"name":"multipliers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12158,"src":"14145:11:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":12314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14098:59:42","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] storage ref,uint256[] memory,uint256[] memory,uint256[] memory)"}},"functionReturnParameters":12159,"id":12315,"nodeType":"Return","src":"14091:66:42"}]},"documentation":{"id":12140,"nodeType":"StructuredDocumentation","src":"12343:340:42","text":" @notice Gets all active stakes for a user\n @param user User address\n @return amounts Array of stake amounts\n @return userLockDurations Array of lock durations\n @return startTimes Array of start times\n @return endTimes Array of end times\n @return multipliers Array of reward multipliers"},"functionSelector":"c0d8fd3f","id":12317,"implemented":true,"kind":"function","modifiers":[],"name":"getStakesByUser","nameLocation":"12697:15:42","nodeType":"FunctionDefinition","parameters":{"id":12143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12142,"mutability":"mutable","name":"user","nameLocation":"12721:4:42","nodeType":"VariableDeclaration","scope":12317,"src":"12713:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12141,"name":"address","nodeType":"ElementaryTypeName","src":"12713:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12712:14:42"},"returnParameters":{"id":12159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12146,"mutability":"mutable","name":"amounts","nameLocation":"12776:7:42","nodeType":"VariableDeclaration","scope":12317,"src":"12759:24:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12144,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12145,"nodeType":"ArrayTypeName","src":"12759:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12149,"mutability":"mutable","name":"userLockDurations","nameLocation":"12810:17:42","nodeType":"VariableDeclaration","scope":12317,"src":"12793:34:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12793:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12148,"nodeType":"ArrayTypeName","src":"12793:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12152,"mutability":"mutable","name":"startTimes","nameLocation":"12854:10:42","nodeType":"VariableDeclaration","scope":12317,"src":"12837:27:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12837:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12151,"nodeType":"ArrayTypeName","src":"12837:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12155,"mutability":"mutable","name":"endTimes","nameLocation":"12891:8:42","nodeType":"VariableDeclaration","scope":12317,"src":"12874:25:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12153,"name":"uint256","nodeType":"ElementaryTypeName","src":"12874:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12154,"nodeType":"ArrayTypeName","src":"12874:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12158,"mutability":"mutable","name":"multipliers","nameLocation":"12926:11:42","nodeType":"VariableDeclaration","scope":12317,"src":"12909:28:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12156,"name":"uint256","nodeType":"ElementaryTypeName","src":"12909:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12157,"nodeType":"ArrayTypeName","src":"12909:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12749:194:42"},"scope":12386,"src":"12688:1476:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12341,"nodeType":"Block","src":"14409:164:42","statements":[{"assignments":[12326],"declarations":[{"constant":false,"id":12326,"mutability":"mutable","name":"totalAmountStaked","nameLocation":"14427:17:42","nodeType":"VariableDeclaration","scope":12341,"src":"14419:25:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12325,"name":"uint256","nodeType":"ElementaryTypeName","src":"14419:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12330,"initialValue":{"arguments":[{"id":12328,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12320,"src":"14468:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12327,"name":"getTotalStakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12139,"src":"14447:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":12329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14447:26:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14419:54:42"},{"expression":{"arguments":[{"id":12338,"name":"totalAmountStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12326,"src":"14548:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":12334,"name":"omniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11273,"src":"14509:9:42","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2063","typeString":"contract IERC20"}],"id":12333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14501:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12332,"name":"address","nodeType":"ElementaryTypeName","src":"14501:7:42","typeDescriptions":{}}},"id":12335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14501:18:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12331,"name":"IOMNIToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11234,"src":"14490:10:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOMNIToken_$11234_$","typeString":"type(contract IOMNIToken)"}},"id":12336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14490:30:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOMNIToken_$11234","typeString":"contract IOMNIToken"}},"id":12337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14521:26:42","memberName":"getDiscountForStakedAmount","nodeType":"MemberAccess","referencedDeclaration":11233,"src":"14490:57:42","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":12339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14490:76:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12324,"id":12340,"nodeType":"Return","src":"14483:83:42"}]},"documentation":{"id":12318,"nodeType":"StructuredDocumentation","src":"14174:160:42","text":" @notice Gets the fee discount for a user based on their staked amount\n @param user User address\n @return Discount in basis points"},"functionSelector":"b7fa7cfc","id":12342,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeDiscount","nameLocation":"14348:14:42","nodeType":"FunctionDefinition","parameters":{"id":12321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12320,"mutability":"mutable","name":"user","nameLocation":"14371:4:42","nodeType":"VariableDeclaration","scope":12342,"src":"14363:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12319,"name":"address","nodeType":"ElementaryTypeName","src":"14363:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14362:14:42"},"returnParameters":{"id":12324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12342,"src":"14400:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12322,"name":"uint256","nodeType":"ElementaryTypeName","src":"14400:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14399:9:42"},"scope":12386,"src":"14339:234:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12351,"nodeType":"Block","src":"14767:37:42","statements":[{"expression":{"id":12349,"name":"lockDurations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11281,"src":"14784:13:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":12348,"id":12350,"nodeType":"Return","src":"14777:20:42"}]},"documentation":{"id":12343,"nodeType":"StructuredDocumentation","src":"14583:110:42","text":" @notice Gets all available lock durations\n @return Array of lock durations in seconds"},"functionSelector":"76520c6d","id":12352,"implemented":true,"kind":"function","modifiers":[],"name":"getLockDurations","nameLocation":"14707:16:42","nodeType":"FunctionDefinition","parameters":{"id":12344,"nodeType":"ParameterList","parameters":[],"src":"14723:2:42"},"returnParameters":{"id":12348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12352,"src":"14749:16:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12345,"name":"uint256","nodeType":"ElementaryTypeName","src":"14749:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12346,"nodeType":"ArrayTypeName","src":"14749:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14748:18:42"},"scope":12386,"src":"14698:106:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12375,"nodeType":"Block","src":"15182:128:42","statements":[{"assignments":[12364],"declarations":[{"constant":false,"id":12364,"mutability":"mutable","name":"tier","nameLocation":"15211:4:42","nodeType":"VariableDeclaration","scope":12375,"src":"15192:23:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_memory_ptr","typeString":"struct OMNIStaking.StakingTier"},"typeName":{"id":12363,"nodeType":"UserDefinedTypeName","pathNode":{"id":12362,"name":"StakingTier","nameLocations":["15192:11:42"],"nodeType":"IdentifierPath","referencedDeclaration":11257,"src":"15192:11:42"},"referencedDeclaration":11257,"src":"15192:11:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage_ptr","typeString":"struct OMNIStaking.StakingTier"}},"visibility":"internal"}],"id":12368,"initialValue":{"baseExpression":{"id":12365,"name":"stakingTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11278,"src":"15218:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakingTier_$11257_storage_$","typeString":"mapping(uint256 => struct OMNIStaking.StakingTier storage ref)"}},"id":12367,"indexExpression":{"id":12366,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12355,"src":"15231:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15218:26:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_storage","typeString":"struct OMNIStaking.StakingTier storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15192:52:42"},{"expression":{"components":[{"expression":{"id":12369,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"15262:4:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_memory_ptr","typeString":"struct OMNIStaking.StakingTier memory"}},"id":12370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:42","memberName":"lockDuration","nodeType":"MemberAccess","referencedDeclaration":11254,"src":"15262:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":12371,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"15281:4:42","typeDescriptions":{"typeIdentifier":"t_struct$_StakingTier_$11257_memory_ptr","typeString":"struct OMNIStaking.StakingTier memory"}},"id":12372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15286:16:42","memberName":"rewardMultiplier","nodeType":"MemberAccess","referencedDeclaration":11256,"src":"15281:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15261:42:42","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":12361,"id":12374,"nodeType":"Return","src":"15254:49:42"}]},"documentation":{"id":12353,"nodeType":"StructuredDocumentation","src":"14814:234:42","text":" @notice Gets staking tier info for a specific lock duration\n @param lockDuration Duration in seconds\n @return duration Lock duration in seconds\n @return multiplier Reward multiplier in basis points"},"functionSelector":"b3c6cd76","id":12376,"implemented":true,"kind":"function","modifiers":[],"name":"getStakingTier","nameLocation":"15062:14:42","nodeType":"FunctionDefinition","parameters":{"id":12356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12355,"mutability":"mutable","name":"lockDuration","nameLocation":"15085:12:42","nodeType":"VariableDeclaration","scope":12376,"src":"15077:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12354,"name":"uint256","nodeType":"ElementaryTypeName","src":"15077:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15076:22:42"},"returnParameters":{"id":12361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12358,"mutability":"mutable","name":"duration","nameLocation":"15139:8:42","nodeType":"VariableDeclaration","scope":12376,"src":"15131:16:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12357,"name":"uint256","nodeType":"ElementaryTypeName","src":"15131:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12360,"mutability":"mutable","name":"multiplier","nameLocation":"15165:10:42","nodeType":"VariableDeclaration","scope":12376,"src":"15157:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12359,"name":"uint256","nodeType":"ElementaryTypeName","src":"15157:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15121:60:42"},"scope":12386,"src":"15053:257:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12384,"nodeType":"Block","src":"15384:46:42","statements":[{"expression":{"arguments":[{"expression":{"id":12380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15413:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15417:5:42","memberName":"value","nodeType":"MemberAccess","src":"15413:9:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12379,"name":"_distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12091,"src":"15394:18:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":12382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12383,"nodeType":"ExpressionStatement","src":"15394:29:42"}]},"id":12385,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":12377,"nodeType":"ParameterList","parameters":[],"src":"15364:2:42"},"returnParameters":{"id":12378,"nodeType":"ParameterList","parameters":[],"src":"15384:0:42"},"scope":12386,"src":"15357:73:42","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":12387,"src":"676:14756:42","usedErrors":[305,308,2471,3313],"usedEvents":[317,326,335,11314,11322,11328,11332,11338,11344,11348]}],"src":"50:15383:42"},"id":42},"contracts/OMNIToken.sol":{"ast":{"absolutePath":"contracts/OMNIToken.sol","exportedSymbols":{"AccessControl":[295],"Checkpoints":[9810],"Context":[3157],"ECDSA":[4377],"EIP712":[4604],"ERC165":[4702],"ERC20":[1985],"ERC20Burnable":[2109],"ERC20Permit":[2263],"ERC20Votes":[2395],"IAccessControl":[378],"IERC20":[2063],"IERC20Errors":[1375],"IERC20Metadata":[2421],"IERC20Permit":[2457],"Nonces":[3247],"OMNIToken":[12847],"Votes":[1192]},"id":12848,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":12388,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:43"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":12389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":1986,"src":"58:55:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":12390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":2110,"src":"114:74:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":12391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":2264,"src":"189:72:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":12392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":2396,"src":"262:71:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"@openzeppelin/contracts/utils/Nonces.sol","id":12393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":3248,"src":"334:50:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":12394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12848,"sourceUnit":296,"src":"385:58:43","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12396,"name":"ERC20","nameLocations":["564:5:43"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"564:5:43"},"id":12397,"nodeType":"InheritanceSpecifier","src":"564:5:43"},{"baseName":{"id":12398,"name":"ERC20Burnable","nameLocations":["571:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":2109,"src":"571:13:43"},"id":12399,"nodeType":"InheritanceSpecifier","src":"571:13:43"},{"baseName":{"id":12400,"name":"ERC20Permit","nameLocations":["586:11:43"],"nodeType":"IdentifierPath","referencedDeclaration":2263,"src":"586:11:43"},"id":12401,"nodeType":"InheritanceSpecifier","src":"586:11:43"},{"baseName":{"id":12402,"name":"ERC20Votes","nameLocations":["599:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"599:10:43"},"id":12403,"nodeType":"InheritanceSpecifier","src":"599:10:43"},{"baseName":{"id":12404,"name":"AccessControl","nameLocations":["611:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"611:13:43"},"id":12405,"nodeType":"InheritanceSpecifier","src":"611:13:43"}],"canonicalName":"OMNIToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":12395,"nodeType":"StructuredDocumentation","src":"445:96:43","text":" @title OMNI Token\n @notice Governance and utility token for the Omniliquid protocol"},"fullyImplemented":true,"id":12847,"internalFunctionIDs":{"1169":1,"1183":2},"linearizedBaseContracts":[12847,295,4702,4714,378,2395,1192,1318,645,1333,2263,3247,4604,1307,2457,2109,1985,1375,2421,2063,3157],"name":"OMNIToken","nameLocation":"551:9:43","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":12410,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"655:11:43","nodeType":"VariableDeclaration","scope":12847,"src":"631:66:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"631:7:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":12408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"683:13:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":12407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"673:9:43","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"673:24:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f36c8f5c","id":12415,"mutability":"constant","name":"GOVERNANCE_ROLE","nameLocation":"727:15:43","nodeType":"VariableDeclaration","scope":12847,"src":"703:70:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"703:7:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"474f5645524e414e43455f524f4c45","id":12413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"755:17:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb1","typeString":"literal_string \"GOVERNANCE_ROLE\""},"value":"GOVERNANCE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb1","typeString":"literal_string \"GOVERNANCE_ROLE\""}],"id":12412,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"745:9:43","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:28:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":12420,"mutability":"mutable","name":"maxSupply","nameLocation":"795:9:43","nodeType":"VariableDeclaration","scope":12847,"src":"780:54:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12416,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"id":12419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f3030305f303030","id":12417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:11:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"100_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":12418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"830:4:43","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"816:18:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"dc8faff4","id":12425,"mutability":"mutable","name":"yearlyInflationCap","nameLocation":"855:18:43","nodeType":"VariableDeclaration","scope":12847,"src":"840:54:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12421,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5000000000000000000000000_by_1","typeString":"int_const 5000000000000000000000000"},"id":12424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"355f3030305f303030","id":12422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"878:9:43","typeDescriptions":{"typeIdentifier":"t_rational_5000000_by_1","typeString":"int_const 5000000"},"value":"5_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":12423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"890:4:43","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"878:16:43","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000000000_by_1","typeString":"int_const 5000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"6b4e8bb0","id":12427,"mutability":"mutable","name":"lastInflationUpdate","nameLocation":"916:19:43","nodeType":"VariableDeclaration","scope":12847,"src":"901:34:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12426,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6ebefe7e","id":12429,"mutability":"mutable","name":"yearlyMinted","nameLocation":"956:12:43","nodeType":"VariableDeclaration","scope":12847,"src":"941:27:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12428,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"66c8e57c","id":12433,"mutability":"mutable","name":"stakingDiscountTiers","nameLocation":"1010:20:43","nodeType":"VariableDeclaration","scope":12847,"src":"975:55:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":12432,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":12430,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"975:27:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":12431,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7a1370b5","id":12436,"mutability":"mutable","name":"tradingFeeBase","nameLocation":"1052:14:43","nodeType":"VariableDeclaration","scope":12847,"src":"1037:43:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1037:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":12435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:2:43","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":false,"functionSelector":"ae3302c2","id":12439,"mutability":"mutable","name":"maxLeverage","nameLocation":"1113:11:43","nodeType":"VariableDeclaration","scope":12847,"src":"1098:43:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":12438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1139:2:43","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":false,"functionSelector":"c1542352","id":12442,"mutability":"mutable","name":"stakingRewardPercentage","nameLocation":"1172:23:43","nodeType":"VariableDeclaration","scope":12847,"src":"1157:45:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":12441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:4:43","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"public"},{"constant":false,"functionSelector":"7ab56083","id":12445,"mutability":"mutable","name":"treasuryPercentage","nameLocation":"1231:18:43","nodeType":"VariableDeclaration","scope":12847,"src":"1216:45:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":12444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:4:43","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"public"},{"constant":false,"functionSelector":"69ee19af","id":12448,"mutability":"mutable","name":"buybackBurnPercentage","nameLocation":"1290:21:43","nodeType":"VariableDeclaration","scope":12847,"src":"1275:45:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":12447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1316:4:43","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":false,"functionSelector":"0967a771","id":12451,"mutability":"mutable","name":"insuranceFundPercentage","nameLocation":"1349:23:43","nodeType":"VariableDeclaration","scope":12847,"src":"1334:45:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":12450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:4:43","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":12453,"mutability":"mutable","name":"treasury","nameLocation":"1409:8:43","nodeType":"VariableDeclaration","scope":12847,"src":"1394:23:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12452,"name":"address","nodeType":"ElementaryTypeName","src":"1394:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b7902303","id":12455,"mutability":"mutable","name":"insuranceFund","nameLocation":"1438:13:43","nodeType":"VariableDeclaration","scope":12847,"src":"1423:28:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12454,"name":"address","nodeType":"ElementaryTypeName","src":"1423:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe","id":12461,"name":"Minted","nameLocation":"1464:6:43","nodeType":"EventDefinition","parameters":{"id":12460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12457,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1487:2:43","nodeType":"VariableDeclaration","scope":12461,"src":"1471:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12456,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12459,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1499:6:43","nodeType":"VariableDeclaration","scope":12461,"src":"1491:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1470:36:43"},"src":"1458:49:43"},{"anonymous":false,"eventSelector":"7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1","id":12465,"name":"TreasuryUpdated","nameLocation":"1518:15:43","nodeType":"EventDefinition","parameters":{"id":12464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12463,"indexed":true,"mutability":"mutable","name":"treasury","nameLocation":"1550:8:43","nodeType":"VariableDeclaration","scope":12465,"src":"1534:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12462,"name":"address","nodeType":"ElementaryTypeName","src":"1534:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1533:26:43"},"src":"1512:48:43"},{"anonymous":false,"eventSelector":"7aa78e1baf57af40dede9e6b906523dcd0de972d7ed5e1961f0fcc2b9cf19f00","id":12469,"name":"InsuranceFundUpdated","nameLocation":"1571:20:43","nodeType":"EventDefinition","parameters":{"id":12468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12467,"indexed":true,"mutability":"mutable","name":"insuranceFund","nameLocation":"1608:13:43","nodeType":"VariableDeclaration","scope":12469,"src":"1592:29:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12466,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1591:31:43"},"src":"1565:58:43"},{"anonymous":false,"eventSelector":"17e876f6956b36dde6c5dd9df30e484bfefa90239ff982e267abf6c45d018402","id":12473,"name":"TradingFeeBaseUpdated","nameLocation":"1634:21:43","nodeType":"EventDefinition","parameters":{"id":12472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12471,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1664:6:43","nodeType":"VariableDeclaration","scope":12473,"src":"1656:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1656:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1655:16:43"},"src":"1628:44:43"},{"anonymous":false,"eventSelector":"b0f01601e93ad2a8fc4106e97567bc037aa114741705be9d80570fd2afa7bf1b","id":12477,"name":"MaxLeverageUpdated","nameLocation":"1683:18:43","nodeType":"EventDefinition","parameters":{"id":12476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12475,"indexed":false,"mutability":"mutable","name":"newLeverage","nameLocation":"1710:11:43","nodeType":"VariableDeclaration","scope":12477,"src":"1702:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:21:43"},"src":"1677:46:43"},{"anonymous":false,"eventSelector":"31372a128fc1946aa198a9d7c72e23d7106618d46c478a053897fc73f3be48bc","id":12487,"name":"RewardDistributionUpdated","nameLocation":"1734:25:43","nodeType":"EventDefinition","parameters":{"id":12486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12479,"indexed":false,"mutability":"mutable","name":"staking","nameLocation":"1768:7:43","nodeType":"VariableDeclaration","scope":12487,"src":"1760:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12481,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"1785:8:43","nodeType":"VariableDeclaration","scope":12487,"src":"1777:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1777:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12483,"indexed":false,"mutability":"mutable","name":"buybackBurn","nameLocation":"1803:11:43","nodeType":"VariableDeclaration","scope":12487,"src":"1795:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12485,"indexed":false,"mutability":"mutable","name":"insurance","nameLocation":"1824:9:43","nodeType":"VariableDeclaration","scope":12487,"src":"1816:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:75:43"},"src":"1728:107:43"},{"anonymous":false,"eventSelector":"3badd8c132bb1c7264c8a842670580d2bdad682383a87a17638ae047444e6d20","id":12493,"name":"DiscountTierSet","nameLocation":"1846:15:43","nodeType":"EventDefinition","parameters":{"id":12492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12489,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"1870:4:43","nodeType":"VariableDeclaration","scope":12493,"src":"1862:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12491,"indexed":false,"mutability":"mutable","name":"discount","nameLocation":"1884:8:43","nodeType":"VariableDeclaration","scope":12493,"src":"1876:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1861:32:43"},"src":"1840:54:43"},{"body":{"id":12520,"nodeType":"Block","src":"2013:169:43","statements":[{"expression":{"arguments":[{"id":12506,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2034:18:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12507,"name":"initialGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12495,"src":"2054:17:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":12505,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2023:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":12508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2023:49:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12509,"nodeType":"ExpressionStatement","src":"2023:49:43"},{"expression":{"arguments":[{"id":12511,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"2093:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12512,"name":"initialGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12495,"src":"2110:17:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":12510,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2082:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":12513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2082:46:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12514,"nodeType":"ExpressionStatement","src":"2082:46:43"},{"expression":{"id":12518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12515,"name":"lastInflationUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12427,"src":"2138:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12516,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2160:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2166:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"2160:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2138:37:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12519,"nodeType":"ExpressionStatement","src":"2138:37:43"}]},"id":12521,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f6d6e696c6971756964","id":12498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1953:12:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_0db7abc16fe1b08fa3c390b0f158fd3b38673e8c653239b9b769fe81eaa65fa4","typeString":"literal_string \"Omniliquid\""},"value":"Omniliquid"},{"hexValue":"4f4d4e49","id":12499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1967:6:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_db7f81b45d08cbef76eb02711b5a82b963140f3d607dd601ff552fd5a9fc4006","typeString":"literal_string \"OMNI\""},"value":"OMNI"}],"id":12500,"kind":"baseConstructorSpecifier","modifierName":{"id":12497,"name":"ERC20","nameLocations":["1947:5:43"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"1947:5:43"},"nodeType":"ModifierInvocation","src":"1947:27:43"},{"arguments":[{"hexValue":"4f6d6e696c6971756964","id":12502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1995:12:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_0db7abc16fe1b08fa3c390b0f158fd3b38673e8c653239b9b769fe81eaa65fa4","typeString":"literal_string \"Omniliquid\""},"value":"Omniliquid"}],"id":12503,"kind":"baseConstructorSpecifier","modifierName":{"id":12501,"name":"ERC20Permit","nameLocations":["1983:11:43"],"nodeType":"IdentifierPath","referencedDeclaration":2263,"src":"1983:11:43"},"nodeType":"ModifierInvocation","src":"1983:25:43"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":12496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12495,"mutability":"mutable","name":"initialGovernance","nameLocation":"1920:17:43","nodeType":"VariableDeclaration","scope":12521,"src":"1912:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12494,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1911:27:43"},"returnParameters":{"id":12504,"nodeType":"ParameterList","parameters":[],"src":"2013:0:43"},"scope":12847,"src":"1900:282:43","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12581,"nodeType":"Block","src":"2261:419:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":12532,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2279:11:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":12533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12534,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12525,"src":"2295:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2279:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":12536,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12420,"src":"2305:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2279:35:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206578636565646564","id":12538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2316:21:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""},"value":"Max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""}],"id":12531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2271:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:67:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12540,"nodeType":"ExpressionStatement","src":"2271:67:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12541,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2352:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"2352:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12543,"name":"lastInflationUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12427,"src":"2370:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333635","id":12544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2392:8:43","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"2370:30:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2352:48:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12557,"nodeType":"IfStatement","src":"2348:146:43","trueBody":{"id":12556,"nodeType":"Block","src":"2402:92:43","statements":[{"expression":{"id":12549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12547,"name":"yearlyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12429,"src":"2416:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":12548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2431:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2416:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12550,"nodeType":"ExpressionStatement","src":"2416:16:43"},{"expression":{"id":12554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12551,"name":"lastInflationUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12427,"src":"2446:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12552,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2468:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2474:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"2468:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2446:37:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12555,"nodeType":"ExpressionStatement","src":"2446:37:43"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12559,"name":"yearlyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12429,"src":"2511:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12525,"src":"2526:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2511:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":12562,"name":"yearlyInflationCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12425,"src":"2536:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2511:43:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e666c6174696f6e20636170206578636565646564","id":12564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2556:24:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_16d504aec1614c5196fe61ed9011545fb503c92bade133fdfd4b30382632973c","typeString":"literal_string \"Inflation cap exceeded\""},"value":"Inflation cap exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16d504aec1614c5196fe61ed9011545fb503c92bade133fdfd4b30382632973c","typeString":"literal_string \"Inflation cap exceeded\""}],"id":12558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2503:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2503:78:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12566,"nodeType":"ExpressionStatement","src":"2503:78:43"},{"expression":{"id":12569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12567,"name":"yearlyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12429,"src":"2591:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":12568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12525,"src":"2607:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2591:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12570,"nodeType":"ExpressionStatement","src":"2591:22:43"},{"expression":{"arguments":[{"id":12572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12523,"src":"2629:2:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12525,"src":"2633:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12571,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"2623:5:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2623:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12575,"nodeType":"ExpressionStatement","src":"2623:17:43"},{"eventCall":{"arguments":[{"id":12577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12523,"src":"2662:2:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12578,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12525,"src":"2666:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12576,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12461,"src":"2655:6:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:18:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12580,"nodeType":"EmitStatement","src":"2650:23:43"}]},"functionSelector":"40c10f19","id":12582,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12528,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12410,"src":"2248:11:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12529,"kind":"modifierInvocation","modifierName":{"id":12527,"name":"onlyRole","nameLocations":["2239:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2239:8:43"},"nodeType":"ModifierInvocation","src":"2239:21:43"}],"name":"mint","nameLocation":"2197:4:43","nodeType":"FunctionDefinition","parameters":{"id":12526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12523,"mutability":"mutable","name":"to","nameLocation":"2210:2:43","nodeType":"VariableDeclaration","scope":12582,"src":"2202:10:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12522,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12525,"mutability":"mutable","name":"amount","nameLocation":"2222:6:43","nodeType":"VariableDeclaration","scope":12582,"src":"2214:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:28:43"},"returnParameters":{"id":12530,"nodeType":"ParameterList","parameters":[],"src":"2261:0:43"},"scope":12847,"src":"2188:492:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12598,"nodeType":"Block","src":"2788:78:43","statements":[{"expression":{"id":12592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12590,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12453,"src":"2798:8:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12591,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12584,"src":"2809:9:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2798:20:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12593,"nodeType":"ExpressionStatement","src":"2798:20:43"},{"eventCall":{"arguments":[{"id":12595,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12584,"src":"2849:9:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12594,"name":"TreasuryUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12465,"src":"2833:15:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":12596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2833:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12597,"nodeType":"EmitStatement","src":"2828:31:43"}]},"functionSelector":"f0f44260","id":12599,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12587,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"2771:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12588,"kind":"modifierInvocation","modifierName":{"id":12586,"name":"onlyRole","nameLocations":["2762:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2762:8:43"},"nodeType":"ModifierInvocation","src":"2762:25:43"}],"name":"setTreasury","nameLocation":"2722:11:43","nodeType":"FunctionDefinition","parameters":{"id":12585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12584,"mutability":"mutable","name":"_treasury","nameLocation":"2742:9:43","nodeType":"VariableDeclaration","scope":12599,"src":"2734:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12583,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2733:19:43"},"returnParameters":{"id":12589,"nodeType":"ParameterList","parameters":[],"src":"2788:0:43"},"scope":12847,"src":"2713:153:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12615,"nodeType":"Block","src":"2957:98:43","statements":[{"expression":{"id":12609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12607,"name":"insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12455,"src":"2967:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12608,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12601,"src":"2983:14:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2967:30:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12610,"nodeType":"ExpressionStatement","src":"2967:30:43"},{"eventCall":{"arguments":[{"id":12612,"name":"_insuranceFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12601,"src":"3033:14:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12611,"name":"InsuranceFundUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12469,"src":"3012:20:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":12613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:36:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12614,"nodeType":"EmitStatement","src":"3007:41:43"}]},"functionSelector":"c3c05293","id":12616,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12604,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"2940:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12605,"kind":"modifierInvocation","modifierName":{"id":12603,"name":"onlyRole","nameLocations":["2931:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2931:8:43"},"nodeType":"ModifierInvocation","src":"2931:25:43"}],"name":"setInsuranceFund","nameLocation":"2881:16:43","nodeType":"FunctionDefinition","parameters":{"id":12602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12601,"mutability":"mutable","name":"_insuranceFund","nameLocation":"2906:14:43","nodeType":"VariableDeclaration","scope":12616,"src":"2898:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12600,"name":"address","nodeType":"ElementaryTypeName","src":"2898:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2897:24:43"},"returnParameters":{"id":12606,"nodeType":"ParameterList","parameters":[],"src":"2957:0:43"},"scope":12847,"src":"2872:183:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12632,"nodeType":"Block","src":"3137:80:43","statements":[{"expression":{"id":12626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12624,"name":"tradingFeeBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12436,"src":"3147:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12625,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12618,"src":"3164:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3147:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12627,"nodeType":"ExpressionStatement","src":"3147:21:43"},{"eventCall":{"arguments":[{"id":12629,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12618,"src":"3205:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12628,"name":"TradingFeeBaseUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"3183:21:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":12630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:27:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12631,"nodeType":"EmitStatement","src":"3178:32:43"}]},"functionSelector":"882693b1","id":12633,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12621,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"3120:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12622,"kind":"modifierInvocation","modifierName":{"id":12620,"name":"onlyRole","nameLocations":["3111:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3111:8:43"},"nodeType":"ModifierInvocation","src":"3111:25:43"}],"name":"setTradingFeeBase","nameLocation":"3070:17:43","nodeType":"FunctionDefinition","parameters":{"id":12619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12618,"mutability":"mutable","name":"_fee","nameLocation":"3096:4:43","nodeType":"VariableDeclaration","scope":12633,"src":"3088:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3088:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3087:14:43"},"returnParameters":{"id":12623,"nodeType":"ParameterList","parameters":[],"src":"3137:0:43"},"scope":12847,"src":"3061:156:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12649,"nodeType":"Block","src":"3301:84:43","statements":[{"expression":{"id":12643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12641,"name":"maxLeverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12439,"src":"3311:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12642,"name":"_leverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12635,"src":"3325:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3311:23:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12644,"nodeType":"ExpressionStatement","src":"3311:23:43"},{"eventCall":{"arguments":[{"id":12646,"name":"_leverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12635,"src":"3368:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12645,"name":"MaxLeverageUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12477,"src":"3349:18:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":12647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:29:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12648,"nodeType":"EmitStatement","src":"3344:34:43"}]},"functionSelector":"d3127e63","id":12650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12638,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"3284:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12639,"kind":"modifierInvocation","modifierName":{"id":12637,"name":"onlyRole","nameLocations":["3275:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3275:8:43"},"nodeType":"ModifierInvocation","src":"3275:25:43"}],"name":"setMaxLeverage","nameLocation":"3232:14:43","nodeType":"FunctionDefinition","parameters":{"id":12636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12635,"mutability":"mutable","name":"_leverage","nameLocation":"3255:9:43","nodeType":"VariableDeclaration","scope":12650,"src":"3247:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:19:43"},"returnParameters":{"id":12640,"nodeType":"ParameterList","parameters":[],"src":"3301:0:43"},"scope":12847,"src":"3223:162:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12700,"nodeType":"Block","src":"3574:365:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12665,"name":"_staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12652,"src":"3592:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12666,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12654,"src":"3603:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3592:20:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12668,"name":"_buybackBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12656,"src":"3615:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3592:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12670,"name":"_insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12658,"src":"3630:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3592:48:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":12672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3644:5:43","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3592:57:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420657175616c2031303025","id":12674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3651:17:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_abed01942496c8ca745c6843d8e7ae20a6f807646db467124073ef3bf861cf5d","typeString":"literal_string \"Must equal 100%\""},"value":"Must equal 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_abed01942496c8ca745c6843d8e7ae20a6f807646db467124073ef3bf861cf5d","typeString":"literal_string \"Must equal 100%\""}],"id":12664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3584:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3584:85:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12676,"nodeType":"ExpressionStatement","src":"3584:85:43"},{"expression":{"id":12679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12677,"name":"stakingRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12442,"src":"3679:23:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12678,"name":"_staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12652,"src":"3705:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3679:34:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12680,"nodeType":"ExpressionStatement","src":"3679:34:43"},{"expression":{"id":12683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12681,"name":"treasuryPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12445,"src":"3723:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12682,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12654,"src":"3744:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3723:30:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12684,"nodeType":"ExpressionStatement","src":"3723:30:43"},{"expression":{"id":12687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12685,"name":"buybackBurnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12448,"src":"3763:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12686,"name":"_buybackBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12656,"src":"3787:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3763:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12688,"nodeType":"ExpressionStatement","src":"3763:36:43"},{"expression":{"id":12691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12689,"name":"insuranceFundPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12451,"src":"3809:23:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12690,"name":"_insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12658,"src":"3835:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3809:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12692,"nodeType":"ExpressionStatement","src":"3809:36:43"},{"eventCall":{"arguments":[{"id":12694,"name":"_staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12652,"src":"3886:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12695,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12654,"src":"3896:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12696,"name":"_buybackBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12656,"src":"3907:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12697,"name":"_insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12658,"src":"3921:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12693,"name":"RewardDistributionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12487,"src":"3860:25:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":12698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:72:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12699,"nodeType":"EmitStatement","src":"3855:77:43"}]},"functionSelector":"abec147a","id":12701,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12661,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"3557:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12662,"kind":"modifierInvocation","modifierName":{"id":12660,"name":"onlyRole","nameLocations":["3548:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3548:8:43"},"nodeType":"ModifierInvocation","src":"3548:25:43"}],"name":"setRewardDistribution","nameLocation":"3400:21:43","nodeType":"FunctionDefinition","parameters":{"id":12659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12652,"mutability":"mutable","name":"_staking","nameLocation":"3439:8:43","nodeType":"VariableDeclaration","scope":12701,"src":"3431:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3431:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12654,"mutability":"mutable","name":"_treasury","nameLocation":"3465:9:43","nodeType":"VariableDeclaration","scope":12701,"src":"3457:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12656,"mutability":"mutable","name":"_buybackBurn","nameLocation":"3492:12:43","nodeType":"VariableDeclaration","scope":12701,"src":"3484:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3484:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12658,"mutability":"mutable","name":"_insurance","nameLocation":"3522:10:43","nodeType":"VariableDeclaration","scope":12701,"src":"3514:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3514:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3421:117:43"},"returnParameters":{"id":12663,"nodeType":"ParameterList","parameters":[],"src":"3574:0:43"},"scope":12847,"src":"3391:548:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12729,"nodeType":"Block","src":"4040:157:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12712,"name":"discountBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12705,"src":"4058:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":12713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:5:43","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4058:20:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61782031303025","id":12715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4080:10:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a4d5c97aad6aa2922b81f284bf4387637192527502b76791458e4020dc1ed69","typeString":"literal_string \"Max 100%\""},"value":"Max 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a4d5c97aad6aa2922b81f284bf4387637192527502b76791458e4020dc1ed69","typeString":"literal_string \"Max 100%\""}],"id":12711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4050:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:41:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12717,"nodeType":"ExpressionStatement","src":"4050:41:43"},{"expression":{"id":12722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12718,"name":"stakingDiscountTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12433,"src":"4101:20:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12720,"indexExpression":{"id":12719,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12703,"src":"4122:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4101:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12721,"name":"discountBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12705,"src":"4130:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4101:40:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12723,"nodeType":"ExpressionStatement","src":"4101:40:43"},{"eventCall":{"arguments":[{"id":12725,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12703,"src":"4172:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12726,"name":"discountBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12705,"src":"4178:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12724,"name":"DiscountTierSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12493,"src":"4156:15:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":12727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:34:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12728,"nodeType":"EmitStatement","src":"4151:39:43"}]},"functionSelector":"d80a619f","id":12730,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12708,"name":"GOVERNANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12415,"src":"4023:15:43","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12709,"kind":"modifierInvocation","modifierName":{"id":12707,"name":"onlyRole","nameLocations":["4014:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4014:8:43"},"nodeType":"ModifierInvocation","src":"4014:25:43"}],"name":"setDiscountTier","nameLocation":"3954:15:43","nodeType":"FunctionDefinition","parameters":{"id":12706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12703,"mutability":"mutable","name":"tier","nameLocation":"3978:4:43","nodeType":"VariableDeclaration","scope":12730,"src":"3970:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3970:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12705,"mutability":"mutable","name":"discountBps","nameLocation":"3992:11:43","nodeType":"VariableDeclaration","scope":12730,"src":"3984:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3984:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3969:35:43"},"returnParameters":{"id":12710,"nodeType":"ParameterList","parameters":[],"src":"4040:0:43"},"scope":12847,"src":"3945:252:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12768,"nodeType":"Block","src":"4291:276:43","statements":[{"assignments":[12738],"declarations":[{"constant":false,"id":12738,"mutability":"mutable","name":"applicableDiscount","nameLocation":"4309:18:43","nodeType":"VariableDeclaration","scope":12768,"src":"4301:26:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4301:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12740,"initialValue":{"hexValue":"30","id":12739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4330:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4301:30:43"},{"body":{"id":12764,"nodeType":"Block","src":"4383:143:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12751,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12732,"src":"4401:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12752,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12742,"src":"4417:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":12753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:10:43","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"value":"1000"},"src":"4417:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4401:33:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12763,"nodeType":"IfStatement","src":"4397:119:43","trueBody":{"id":12762,"nodeType":"Block","src":"4436:80:43","statements":[{"expression":{"id":12760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12756,"name":"applicableDiscount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12738,"src":"4454:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":12757,"name":"stakingDiscountTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12433,"src":"4475:20:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12759,"indexExpression":{"id":12758,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12742,"src":"4496:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4475:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4454:47:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12761,"nodeType":"ExpressionStatement","src":"4454:47:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12745,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12742,"src":"4364:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3130","id":12746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4371:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4364:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12765,"initializationExpression":{"assignments":[12742],"declarations":[{"constant":false,"id":12742,"mutability":"mutable","name":"tier","nameLocation":"4354:4:43","nodeType":"VariableDeclaration","scope":12765,"src":"4346:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12744,"initialValue":{"hexValue":"30","id":12743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4361:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4346:16:43"},"loopExpression":{"expression":{"id":12749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4375:6:43","subExpression":{"id":12748,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12742,"src":"4377:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12750,"nodeType":"ExpressionStatement","src":"4375:6:43"},"nodeType":"ForStatement","src":"4341:185:43"},{"expression":{"id":12766,"name":"applicableDiscount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12738,"src":"4542:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12736,"id":12767,"nodeType":"Return","src":"4535:25:43"}]},"functionSelector":"503c2a80","id":12769,"implemented":true,"kind":"function","modifiers":[],"name":"getDiscountForStakedAmount","nameLocation":"4212:26:43","nodeType":"FunctionDefinition","parameters":{"id":12733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12732,"mutability":"mutable","name":"stakedAmount","nameLocation":"4247:12:43","nodeType":"VariableDeclaration","scope":12769,"src":"4239:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4239:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4238:22:43"},"returnParameters":{"id":12736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12769,"src":"4282:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12734,"name":"uint256","nodeType":"ElementaryTypeName","src":"4282:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4281:9:43"},"scope":12847,"src":"4203:364:43","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":12808,"nodeType":"Block","src":"4642:194:43","statements":[{"assignments":[12779],"declarations":[{"constant":false,"id":12779,"mutability":"mutable","name":"discounts","nameLocation":"4669:9:43","nodeType":"VariableDeclaration","scope":12808,"src":"4652:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12777,"name":"uint256","nodeType":"ElementaryTypeName","src":"4652:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12778,"nodeType":"ArrayTypeName","src":"4652:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":12785,"initialValue":{"arguments":[{"hexValue":"3130","id":12783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4695:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":12782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4681:13:43","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":12780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12781,"nodeType":"ArrayTypeName","src":"4685:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":12784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4681:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4652:46:43"},{"body":{"id":12804,"nodeType":"Block","src":"4741:63:43","statements":[{"expression":{"id":12802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12796,"name":"discounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12779,"src":"4755:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":12798,"indexExpression":{"id":12797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12787,"src":"4765:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4755:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":12799,"name":"stakingDiscountTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12433,"src":"4770:20:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12801,"indexExpression":{"id":12800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12787,"src":"4791:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4770:23:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:38:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12803,"nodeType":"ExpressionStatement","src":"4755:38:43"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12787,"src":"4728:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3130","id":12791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4732:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4728:6:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12805,"initializationExpression":{"assignments":[12787],"declarations":[{"constant":false,"id":12787,"mutability":"mutable","name":"i","nameLocation":"4721:1:43","nodeType":"VariableDeclaration","scope":12805,"src":"4713:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4713:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12789,"initialValue":{"hexValue":"30","id":12788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4725:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4713:13:43"},"loopExpression":{"expression":{"id":12794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4736:3:43","subExpression":{"id":12793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12787,"src":"4736:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12795,"nodeType":"ExpressionStatement","src":"4736:3:43"},"nodeType":"ForStatement","src":"4708:96:43"},{"expression":{"id":12806,"name":"discounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12779,"src":"4820:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":12774,"id":12807,"nodeType":"Return","src":"4813:16:43"}]},"functionSelector":"5158cd09","id":12809,"implemented":true,"kind":"function","modifiers":[],"name":"getDiscountTiers","nameLocation":"4582:16:43","nodeType":"FunctionDefinition","parameters":{"id":12770,"nodeType":"ParameterList","parameters":[],"src":"4598:2:43"},"returnParameters":{"id":12774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12809,"src":"4624:16:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12771,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12772,"nodeType":"ArrayTypeName","src":"4624:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4623:18:43"},"scope":12847,"src":"4573:263:43","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1792,2350],"body":{"id":12829,"nodeType":"Block","src":"4991:48:43","statements":[{"expression":{"arguments":[{"id":12824,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12811,"src":"5015:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12813,"src":"5021:2:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12826,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12815,"src":"5025:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12821,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"5001:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_OMNIToken_$12847_$","typeString":"type(contract super OMNIToken)"}},"id":12823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5007:7:43","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2350,"src":"5001:13:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":12827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5001:31:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12828,"nodeType":"ExpressionStatement","src":"5001:31:43"}]},"id":12830,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4884:7:43","nodeType":"FunctionDefinition","overrides":{"id":12819,"nodeType":"OverrideSpecifier","overrides":[{"id":12817,"name":"ERC20","nameLocations":["4968:5:43"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"4968:5:43"},{"id":12818,"name":"ERC20Votes","nameLocations":["4975:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"4975:10:43"}],"src":"4959:27:43"},"parameters":{"id":12816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12811,"mutability":"mutable","name":"from","nameLocation":"4900:4:43","nodeType":"VariableDeclaration","scope":12830,"src":"4892:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12810,"name":"address","nodeType":"ElementaryTypeName","src":"4892:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12813,"mutability":"mutable","name":"to","nameLocation":"4914:2:43","nodeType":"VariableDeclaration","scope":12830,"src":"4906:10:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12812,"name":"address","nodeType":"ElementaryTypeName","src":"4906:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12815,"mutability":"mutable","name":"amount","nameLocation":"4926:6:43","nodeType":"VariableDeclaration","scope":12830,"src":"4918:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12814,"name":"uint256","nodeType":"ElementaryTypeName","src":"4918:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4891:42:43"},"returnParameters":{"id":12820,"nodeType":"ParameterList","parameters":[],"src":"4991:0:43"},"scope":12847,"src":"4875:164:43","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2252,3206],"body":{"id":12845,"nodeType":"Block","src":"5172:43:43","statements":[{"expression":{"arguments":[{"id":12842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12832,"src":"5202:5:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":12840,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"5189:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_OMNIToken_$12847_$","typeString":"type(contract super OMNIToken)"}},"id":12841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5195:6:43","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"5189:12:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":12843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5189:19:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12839,"id":12844,"nodeType":"Return","src":"5182:26:43"}]},"functionSelector":"7ecebe00","id":12846,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"5054:6:43","nodeType":"FunctionDefinition","overrides":{"id":12836,"nodeType":"OverrideSpecifier","overrides":[{"id":12834,"name":"ERC20Permit","nameLocations":["5121:11:43"],"nodeType":"IdentifierPath","referencedDeclaration":2263,"src":"5121:11:43"},{"id":12835,"name":"Nonces","nameLocations":["5134:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":3247,"src":"5134:6:43"}],"src":"5112:29:43"},"parameters":{"id":12833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12832,"mutability":"mutable","name":"owner","nameLocation":"5069:5:43","nodeType":"VariableDeclaration","scope":12846,"src":"5061:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12831,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5060:15:43"},"returnParameters":{"id":12839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12846,"src":"5159:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5159:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5158:9:43"},"scope":12847,"src":"5045:170:43","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":12848,"src":"542:4675:43","usedErrors":[305,308,570,696,703,1345,1350,1355,1364,1369,1374,2140,2147,2283,3189,3382,3384,4040,4045,4050,6330,8237],"usedEvents":[317,326,335,579,588,1287,1997,2006,12461,12465,12469,12473,12477,12487,12493]}],"src":"32:5186:43"},"id":43}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203910222b2424311f5663a76aa7535fa334025befbbcf48c3b03b5c52304f728e64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LT 0x22 0x2B 0x24 0x24 BALANCE 0x1F JUMP PUSH4 0xA76AA753 PUSH0 LOG3 CALLVALUE MUL JUMPDEST 0xEF 0xBB 0xCF BASEFEE 0xC3 0xB0 EXTCODESIZE 0x5C MSTORE ADDRESS 0x4F PUSH19 0x8E64736F6C6343000814003300000000000000 ","sourceMap":"1255:3026:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203910222b2424311f5663a76aa7535fa334025befbbcf48c3b03b5c52304f728e64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LT 0x22 0x2B 0x24 0x24 BALANCE 0x1F JUMP PUSH4 0xA76AA753 PUSH0 LOG3 CALLVALUE MUL JUMPDEST 0xEF 0xBB 0xCF BASEFEE 0xC3 0xB0 EXTCODESIZE 0x5C MSTORE ADDRESS 0x4F PUSH19 0x8E64736F6C6343000814003300000000000000 ","sourceMap":"1255:3026:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201d3a81d6a05a36793d4f99e2d6533010f3cdc70a4104a8d9fe143c0fab3824de64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GASPRICE DUP2 0xD6 LOG0 GAS CALLDATASIZE PUSH26 0x3D4F99E2D6533010F3CDC70A4104A8D9FE143C0FAB3824DE6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"521:3181:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201d3a81d6a05a36793d4f99e2d6533010f3cdc70a4104a8d9fe143c0fab3824de64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GASPRICE DUP2 0xD6 LOG0 GAS CALLDATASIZE PUSH26 0x3D4F99E2D6533010F3CDC70A4104A8D9FE143C0FAB3824DE6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"521:3181:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:35:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:35:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:36:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:36:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:37:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:37:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208f08ac1c5a58ef0dcc61ff5a981ce5ccccf4ca439f5a1432a4cbc4dee782bd3664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 ADDMOD 0xAC SHR GAS PC 0xEF 0xD 0xCC PUSH2 0xFF5A SWAP9 SHR 0xE5 0xCC 0xCC DELEGATECALL 0xCA NUMBER SWAP16 GAS EQ ORIGIN LOG4 0xCB 0xC4 0xDE 0xE7 DUP3 0xBD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"668:20756:38:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208f08ac1c5a58ef0dcc61ff5a981ce5ccccf4ca439f5a1432a4cbc4dee782bd3664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 ADDMOD 0xAC SHR GAS PC 0xEF 0xD 0xCC PUSH2 0xFF5A SWAP9 SHR 0xE5 0xCC 0xCC DELEGATECALL 0xCA NUMBER SWAP16 GAS EQ ORIGIN LOG4 0xCB 0xC4 0xDE 0xE7 DUP3 0xBD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"668:20756:38:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dbfddd3caccd2a53122871aff7ff563c92e0fbd49e8bc0eb5db736d6b920dfa364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB REVERT 0xDD EXTCODECOPY 0xAC 0xCD 0x2A MSTORE8 SLT 0x28 PUSH18 0xAFF7FF563C92E0FBD49E8BC0EB5DB736D6B9 KECCAK256 0xDF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1330:11559:39:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dbfddd3caccd2a53122871aff7ff563c92e0fbd49e8bc0eb5db736d6b920dfa364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB REVERT 0xDD EXTCODECOPY 0xAC 0xCD 0x2A MSTORE8 SLT 0x28 PUSH18 0xAFF7FF563C92E0FBD49E8BC0EB5DB736D6B9 KECCAK256 0xDF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1330:11559:39:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220819f3e32bac9d9829f557c4b362d7307e5c1a3acfb410eb1315c67e706dd8d8e64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 SWAP16 RETURNDATACOPY ORIGIN 0xBA 0xC9 0xD9 DUP3 SWAP16 SSTORE PUSH29 0x4B362D7307E5C1A3ACFB410EB1315C67E706DD8D8E64736F6C63430008 EQ STOP CALLER ","sourceMap":"640:4515:40:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220819f3e32bac9d9829f557c4b362d7307e5c1a3acfb410eb1315c67e706dd8d8e64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 SWAP16 RETURNDATACOPY ORIGIN 0xBA 0xC9 0xD9 DUP3 SWAP16 SSTORE PUSH29 0x4B362D7307E5C1A3ACFB410EB1315C67E706DD8D8E64736F6C63430008 EQ STOP CALLER ","sourceMap":"640:4515:40:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"contracts/FeeDistributor.sol":{"FeeDistributor":{"abi":[{"inputs":[{"internalType":"address","name":"_omniToken","type":"address"},{"internalType":"address","name":"_stakingContract","type":"address"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_insuranceFund","type":"address"},{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"stakingContract","type":"address"},{"indexed":false,"internalType":"address","name":"treasury","type":"address"},{"indexed":false,"internalType":"address","name":"insuranceFund","type":"address"}],"name":"AddressesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"stakingPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"treasuryPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"buybackBurnPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"insuranceFundPercentage","type":"uint256"}],"name":"DistributionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FeesCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"stakingAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"treasuryAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"buybackAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"insuranceFundAmount","type":"uint256"}],"name":"FeesDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_COLLECTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buybackBurnPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collectFees","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"distributeFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"insuranceFund","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"insuranceFundPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"omniToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBuybackBurned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeesCollected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalInsuranceFundDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakingDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTreasuryDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasuryPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_stakingContract","type":"address"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_insuranceFund","type":"address"}],"name":"updateAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakingPercentage","type":"uint256"},{"internalType":"uint256","name":"_treasuryPercentage","type":"uint256"},{"internalType":"uint256","name":"_buybackBurnPercentage","type":"uint256"},{"internalType":"uint256","name":"_insuranceFundPercentage","type":"uint256"}],"name":"updateDistribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":686,"id":null,"parameterSlots":1,"returnSlots":1},"fun__grantRole":{"entryPoint":707,"id":256,"parameterSlots":1,"returnSlots":1},"fun_add":{"entryPoint":980,"id":9863,"parameterSlots":2,"returnSlots":1},"fun_grantRole":{"entryPoint":835,"id":256,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200029357601f6200173d38819003918201601f191683019291906001600160401b0384118385101762000298578160a0928492604096875283398101031262000293576200005181620002ae565b9060209162000062838301620002ae565b6200006f858401620002ae565b906200008c60806200008460608701620002ae565b9501620002ae565b6113886006556107d060078190556103e8600855600955936001600160a01b039384169182156200024f5784169283156200020d578416908115620001c9578416928315620001855760018060a01b03199283600254161760025582600354161760035581600454161760045560055416176005556200010c82620002c3565b62000164575b6200011d8262000343565b62000132575b835161129b9081620004628239f35b60016200015a936000805160206200171d8339815191526000525283600020911690620003d4565b5038808062000123565b60008052600183526200017e8460002082841690620003d4565b5062000112565b875162461bcd60e51b815260048101889052601e60248201527f496e76616c696420696e737572616e63652066756e64206164647265737300006044820152606490fd5b875162461bcd60e51b815260048101889052601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b60648789519062461bcd60e51b825280600483015260248201527f496e76616c6964207374616b696e6720636f6e747261637420616464726573736044820152fd5b875162461bcd60e51b815260048101889052601960248201527f496e76616c6964204f4d4e20746f6b656e2061646472657373000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200029357565b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166200033f57818052816020526040822081835260205260408220600160ff198254161790553391600080516020620016fd8339815191528180a4600190565b5090565b6001600160a01b031660008181527f92227d48d66cabccdfe59bda1e8cb95f286820615128bd3f8666d1f5ec8b70aa60205260408120549091906000805160206200171d8339815191529060ff16620003cf57808352826020526040832082845260205260408320600160ff19825416179055600080516020620016fd833981519152339380a4600190565b505090565b919060018301600090828252806020526040822054156000146200045b57845494680100000000000000008610156200044757600186018082558610156200043357836040949596828552602085200155549382526020522055600190565b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b83526041600452602483fd5b5092505056fe60806040908082526004908136101561005a575b5050361561002057600080fd5b60207f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f9161005034600a54611193565b600a5551348152a1005b600091823560e01c9182630186f8a414610dc75750816301ffc9a714610d535781630967a77114610d34578163248a9ca314610d095781632f2ff15d14610c9d578163334c143914610b0857816336568abe14610ac257816355857c2714610aa357816360c6d8ae14610a8457816361d027b314610a5b57816362a2a47c14610a2057816369ee19af14610a015781637ab56083146109e257816381e1ccba146109c35781639010d07c1461098157816391d148541461093a578163938a8bca1461091b57816394684e7e146108fc578163a154668714610818578163a217fddf146107fd578163a3246ad314610759578163b790230314610730578163bb57ad2014610335578163c879657214610255578163c93d0ece14610236578163ca15c8731461020d578163d547741f146101ca575063ee99205c1461019e5780610013565b90346101c657816003193601126101c65760035490516001600160a01b039091168152602090f35b5080fd5b90508234610209578060031936011261020957610205913561020060016101ef610dec565b938387528660205286200154610e5f565b610f03565b5080f35b8280fd5b839150346102095760203660031901126102095760209282913581526001845220549051908152f35b8284346101c657816003193601126101c657602090600d549051908152f35b83915082600319360112610209577f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b670388218084528360205282842033855260205260ff83852054161561031a575034156102e3575060207f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f916102d834600a54611193565b600a5551348152a180f35b6020606492519162461bcd60e51b83528201526012602482015271139bc81999595cc81d1bc818dbdb1b1958dd60721b6044820152fd5b604492519163e2517d3f60e01b835233908301526024820152fd5b8284346101c657816003193601126101c6574780156106f557612710918261035f600654846111b6565b04918361036e600754836111b6565b049361038b81610380600854856111b6565b0492600954906111b6565b04918361067f575b8461060a575b82610589575b811580156103f3575b50519283526020830193909352604082019290925260608101919091527f78490b24a020086d2701460dc169a540280c517bef9cdcd742f751a9099922a39080608081015b0390a180f35b8680526020906001825282882080541561057657885260018060a01b039182818a20541692600a860292868404600a141715610563579285949392828b9c858d7f78490b24a020086d2701460dc169a540280c517bef9cdcd742f751a9099922a39e966103ed9c9b986002541660648b51809481936323b872dd60e01b83528b898401523060248401528a60448401525af19081610546575b506104b8575050505081806104ad9481935af16104a76111c9565b50611221565b9091928796506103a8565b60448392878093600254168b51978895869463a9059cbb60e01b865285015260248401525af19182610518575b50506105025781806104fd9481935af16104a76111c9565b6104ad565b505061051090600d54611193565b600d556104ad565b8161053792903d1061053f575b61052f818361115b565b810190611209565b508c806104e5565b503d610525565b61055c90853d871161053f5761052f818361115b565b503861048c565b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b895260328a52602489fd5b858080808660018060a01b03600554165af16105a36111c9565b50156105bd576105b583600e54611193565b600e5561039f565b5162461bcd60e51b8152602081880152602260248201527f496e737572616e63652066756e6420646973747269627574696f6e206661696c604482015261195960f21b6064820152608490fd5b858080808860018060a01b038c54165af16106236111c9565b501561063d5761063585600c54611193565b600c55610399565b5162461bcd60e51b8152602081880152601c60248201527f547265617375727920646973747269627574696f6e206661696c6564000000006044820152606490fd5b858080808760018060a01b03600354165af16106996111c9565b50156106b3576106ab84600b54611193565b600b55610393565b5162461bcd60e51b8152602081880152601b60248201527f5374616b696e6720646973747269627574696f6e206661696c656400000000006044820152606490fd5b815162461bcd60e51b815260208186015260156024820152744e6f206665657320746f206469737472696275746560581b6044820152606490fd5b8284346101c657816003193601126101c65760055490516001600160a01b039091168152602090f35b8391503461020957602090816003193601126107f9573583526001808252828420835181548082529186528386208185019693949192879190855b8181106107e657505050826107aa91038361115b565b8451948186019282875251809352850195925b8281106107ca5785870386f35b83516001600160a01b03168752958101959281019284016107bd565b8254845292840192918701918701610794565b8380fd5b8284346101c657816003193601126101c65751908152602090f35b9050346101c65760803660031901126101c65780356024359160443560643591610840610e07565b61271061085a84610855856108558a8a611193565b611193565b036108b95750906103ed917f8adead107ba13fae1b5f36d9fa779c58b2bf71aab754388ad1feb3f6427fbd6795968460065585600755816008558260095551948594859094939260609260808301968352602083015260408201520152565b606490602088519162461bcd60e51b8352820152601f60248201527f50657263656e7461676573206d7573742061646420757020746f2031303025006044820152fd5b8284346101c657816003193601126101c657602090600b549051908152f35b8284346101c657816003193601126101c657602090600c549051908152f35b839150346102095781600319360112610209578160209360ff9261095c610dec565b903582528186528282206001600160a01b039091168252855220549151911615158152f35b839150346102095781600319360112610209576020926109ad9135815260018452826024359120610fb3565b905491519160018060a01b039160031b1c168152f35b8284346101c657816003193601126101c6576020906006549051908152f35b8284346101c657816003193601126101c6576020906007549051908152f35b8284346101c657816003193601126101c6576020906008549051908152f35b8284346101c657816003193601126101c657602090517f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b670388218152f35b839150346102095782600319360112610209575490516001600160a01b03909116815260209150f35b8284346101c657816003193601126101c657602090600a549051908152f35b8284346101c657816003193601126101c657602090600e549051908152f35b8284346101c657806003193601126101c657610adc610dec565b90336001600160a01b03831603610af95750610205919235610f03565b5163334bd91960e11b81528390fd5b83915034610209576060366003190112610209576001600160a01b03813581811693919290849003610c9957610b3c610dec565b9260443593818516809503610c9557610b53610e07565b8515610c525716908115610c0f578315610bcc579183916060947f97a48c4be738bdf3e84e8f3927df6d4e52ccc94c58e96a666faca603e456d49096946bffffffffffffffffffffffff60a01b90868260035416176003558382825416179055600554161760055581519384526020840152820152a180f35b606490602084519162461bcd60e51b8352820152601e60248201527f496e76616c696420696e737572616e63652066756e64206164647265737300006044820152fd5b606490602084519162461bcd60e51b8352820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152fd5b835162461bcd60e51b8152602081850181905260248201527f496e76616c6964207374616b696e6720636f6e747261637420616464726573736044820152606490fd5b8680fd5b8480fd5b839150346102095781600319360112610209573590610cba610dec565b9082845283602052610cd160018286200154610e5f565b610cdb8284610e85565b610ce3578380f35b9183526001602052908220610d01916001600160a01b031690610fe1565b508180808380f35b8391503461020957602036600319011261020957816020936001923581528085522001549051908152f35b8284346101c657816003193601126101c6576020906009549051908152f35b8391503461020957602036600319011261020957359063ffffffff60e01b82168092036102095760209250635a05180f60e01b8214918215610d99575b50519015158152f35b909150637965db0b60e01b8114908115610db6575b509083610d90565b6301ffc9a760e01b14905083610dae565b8390346101c657816003193601126101c6576002546001600160a01b03168152602090f35b602435906001600160a01b0382168203610e0257565b600080fd5b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615610e415750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff6040600020541615610e415750565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014610efe57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b610f0d8282610f3e565b9182610f1857505090565b600091825260016020526040909120610f3a916001600160a01b03169061106b565b5090565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014610efe5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b8054821015610fcb5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b919060018301600090828252806020526040822054156000146110655784549468010000000000000000861015611051578361104161102a886001604098999a01855584610fb3565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9060018201906000928184528260205260408420549081151560001461115457600019918083018181116111405782549084820191821161112c578181036110f7575b505050805480156110e3578201916110c68383610fb3565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61111761110761102a9386610fb3565b90549060031b1c92839286610fb3565b905586528460205260408620553880806110ae565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b90601f8019910116810190811067ffffffffffffffff82111761117d57604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116111a057565b634e487b7160e01b600052601160045260246000fd5b818102929181159184041417156111a057565b3d15611204573d9067ffffffffffffffff821161117d57604051916111f8601f8201601f19166020018461115b565b82523d6000602084013e565b606090565b90816020910312610e0257518015158103610e025790565b1561122857565b60405162461bcd60e51b815260206004820152601560248201527410591b5a5b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fdfea2646970667358221220d9eceb746282fe34ac7de3076981b35247a2d0c1bcdccd7299c28402a5b9521364736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b67038821","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x293 JUMPI PUSH1 0x1F PUSH3 0x173D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH3 0x298 JUMPI DUP2 PUSH1 0xA0 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x293 JUMPI PUSH3 0x51 DUP2 PUSH3 0x2AE JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0x62 DUP4 DUP4 ADD PUSH3 0x2AE JUMP JUMPDEST PUSH3 0x6F DUP6 DUP5 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP1 PUSH3 0x8C PUSH1 0x80 PUSH3 0x84 PUSH1 0x60 DUP8 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP6 ADD PUSH3 0x2AE JUMP JUMPDEST PUSH2 0x1388 PUSH1 0x6 SSTORE PUSH2 0x7D0 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x3E8 PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP2 DUP3 ISZERO PUSH3 0x24F JUMPI DUP5 AND SWAP3 DUP4 ISZERO PUSH3 0x20D JUMPI DUP5 AND SWAP1 DUP2 ISZERO PUSH3 0x1C9 JUMPI DUP5 AND SWAP3 DUP4 ISZERO PUSH3 0x185 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP2 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH3 0x10C DUP3 PUSH3 0x2C3 JUMP JUMPDEST PUSH3 0x164 JUMPI JUMPDEST PUSH3 0x11D DUP3 PUSH3 0x343 JUMP JUMPDEST PUSH3 0x132 JUMPI JUMPDEST DUP4 MLOAD PUSH2 0x129B SWAP1 DUP2 PUSH3 0x462 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH3 0x15A SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x171D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP2 AND SWAP1 PUSH3 0x3D4 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 PUSH3 0x123 JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH3 0x17E DUP5 PUSH1 0x0 KECCAK256 DUP3 DUP5 AND SWAP1 PUSH3 0x3D4 JUMP JUMPDEST POP PUSH3 0x112 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E737572616E63652066756E6420616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP8 DUP10 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E6720636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204F4D4E20746F6B656E206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x293 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x33F JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x16FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x92227D48D66CABCCDFE59BDA1E8CB95F286820615128BD3F8666D1F5EC8B70AA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x171D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH3 0x3CF JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x16FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH3 0x45B JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH3 0x447 JUMPI PUSH1 0x1 DUP7 ADD DUP1 DUP3 SSTORE DUP7 LT ISZERO PUSH3 0x433 JUMPI DUP4 PUSH1 0x40 SWAP5 SWAP6 SWAP7 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x5A JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP2 PUSH2 0x50 CALLVALUE PUSH1 0xA SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xA SSTORE MLOAD CALLVALUE DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x186F8A4 EQ PUSH2 0xDC7 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xD53 JUMPI DUP2 PUSH4 0x967A771 EQ PUSH2 0xD34 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xD09 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xC9D JUMPI DUP2 PUSH4 0x334C1439 EQ PUSH2 0xB08 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xAC2 JUMPI DUP2 PUSH4 0x55857C27 EQ PUSH2 0xAA3 JUMPI DUP2 PUSH4 0x60C6D8AE EQ PUSH2 0xA84 JUMPI DUP2 PUSH4 0x61D027B3 EQ PUSH2 0xA5B JUMPI DUP2 PUSH4 0x62A2A47C EQ PUSH2 0xA20 JUMPI DUP2 PUSH4 0x69EE19AF EQ PUSH2 0xA01 JUMPI DUP2 PUSH4 0x7AB56083 EQ PUSH2 0x9E2 JUMPI DUP2 PUSH4 0x81E1CCBA EQ PUSH2 0x9C3 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x981 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x93A JUMPI DUP2 PUSH4 0x938A8BCA EQ PUSH2 0x91B JUMPI DUP2 PUSH4 0x94684E7E EQ PUSH2 0x8FC JUMPI DUP2 PUSH4 0xA1546687 EQ PUSH2 0x818 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x759 JUMPI DUP2 PUSH4 0xB7902303 EQ PUSH2 0x730 JUMPI DUP2 PUSH4 0xBB57AD20 EQ PUSH2 0x335 JUMPI DUP2 PUSH4 0xC8796572 EQ PUSH2 0x255 JUMPI DUP2 PUSH4 0xC93D0ECE EQ PUSH2 0x236 JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x20D JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1CA JUMPI POP PUSH4 0xEE99205C EQ PUSH2 0x19E JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x209 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH2 0x205 SWAP2 CALLDATALOAD PUSH2 0x200 PUSH1 0x1 PUSH2 0x1EF PUSH2 0xDEC JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH32 0x2DCA0F5CE7E75A4B43FE2B0D6F5D0B7A2BF92ECF89F8F0AA17B8308B67038821 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x31A JUMPI POP CALLVALUE ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x20 PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP2 PUSH2 0x2D8 CALLVALUE PUSH1 0xA SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xA SSTORE MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81999595CC81D1BC818DBDB1B1958DD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI SELFBALANCE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x35F PUSH1 0x6 SLOAD DUP5 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP2 DUP4 PUSH2 0x36E PUSH1 0x7 SLOAD DUP4 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP4 PUSH2 0x38B DUP2 PUSH2 0x380 PUSH1 0x8 SLOAD DUP6 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP2 DUP4 PUSH2 0x67F JUMPI JUMPDEST DUP5 PUSH2 0x60A JUMPI JUMPDEST DUP3 PUSH2 0x589 JUMPI JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x78490B24A020086D2701460DC169A540280C517BEF9CDCD742F751A9099922A3 SWAP1 DUP1 PUSH1 0x80 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 DUP1 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP3 DUP9 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x576 JUMPI DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 DUP11 KECCAK256 SLOAD AND SWAP3 PUSH1 0xA DUP7 MUL SWAP3 DUP7 DUP5 DIV PUSH1 0xA EQ OR ISZERO PUSH2 0x563 JUMPI SWAP3 DUP6 SWAP5 SWAP4 SWAP3 DUP3 DUP12 SWAP13 DUP6 DUP14 PUSH32 0x78490B24A020086D2701460DC169A540280C517BEF9CDCD742F751A9099922A3 SWAP15 SWAP7 PUSH2 0x3ED SWAP13 SWAP12 SWAP9 PUSH1 0x2 SLOAD AND PUSH1 0x64 DUP12 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE DUP12 DUP10 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP11 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 PUSH2 0x546 JUMPI JUMPDEST POP PUSH2 0x4B8 JUMPI POP POP POP POP DUP2 DUP1 PUSH2 0x4AD SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x4A7 PUSH2 0x11C9 JUMP JUMPDEST POP PUSH2 0x1221 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP8 SWAP7 POP PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x44 DUP4 SWAP3 DUP8 DUP1 SWAP4 PUSH1 0x2 SLOAD AND DUP12 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 PUSH2 0x518 JUMPI JUMPDEST POP POP PUSH2 0x502 JUMPI DUP2 DUP1 PUSH2 0x4FD SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x4A7 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST POP POP PUSH2 0x510 SWAP1 PUSH1 0xD SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH2 0x4AD JUMP JUMPDEST DUP2 PUSH2 0x537 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x53F JUMPI JUMPDEST PUSH2 0x52F DUP2 DUP4 PUSH2 0x115B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1209 JUMP JUMPDEST POP DUP13 DUP1 PUSH2 0x4E5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x525 JUMP JUMPDEST PUSH2 0x55C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x53F JUMPI PUSH2 0x52F DUP2 DUP4 PUSH2 0x115B JUMP JUMPDEST POP CODESIZE PUSH2 0x48C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x32 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 SLOAD AND GAS CALL PUSH2 0x5A3 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5B5 DUP4 PUSH1 0xE SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH2 0x39F JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E63652066756E6420646973747269627574696F6E206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 SLOAD AND GAS CALL PUSH2 0x623 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x63D JUMPI PUSH2 0x635 DUP6 PUSH1 0xC SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x399 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547265617375727920646973747269627574696F6E206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND GAS CALL PUSH2 0x699 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6AB DUP5 PUSH1 0xB SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x393 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720646973747269627574696F6E206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206665657320746F2064697374726962757465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F9 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE DUP3 DUP5 KECCAK256 DUP4 MLOAD DUP2 SLOAD DUP1 DUP3 MSTORE SWAP2 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP2 DUP6 ADD SWAP7 SWAP4 SWAP5 SWAP2 SWAP3 DUP8 SWAP2 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x7E6 JUMPI POP POP POP DUP3 PUSH2 0x7AA SWAP2 SUB DUP4 PUSH2 0x115B JUMP JUMPDEST DUP5 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x7CA JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x7BD JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x794 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1C6 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C6 JUMPI DUP1 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x840 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x85A DUP5 PUSH2 0x855 DUP6 PUSH2 0x855 DUP11 DUP11 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST SUB PUSH2 0x8B9 JUMPI POP SWAP1 PUSH2 0x3ED SWAP2 PUSH32 0x8ADEAD107BA13FAE1B5F36D9FA779C58B2BF71AAB754388AD1FEB3F6427FBD67 SWAP6 SWAP7 DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0x7 SSTORE DUP2 PUSH1 0x8 SSTORE DUP3 PUSH1 0x9 SSTORE MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676573206D7573742061646420757020746F203130302500 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x95C PUSH2 0xDEC JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE DUP2 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x9AD SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x2DCA0F5CE7E75A4B43FE2B0D6F5D0B7A2BF92ECF89F8F0AA17B8308B67038821 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xE SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0xADC PUSH2 0xDEC JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xAF9 JUMPI POP PUSH2 0x205 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF03 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xC99 JUMPI PUSH2 0xB3C PUSH2 0xDEC JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP4 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0xC95 JUMPI PUSH2 0xB53 PUSH2 0xE07 JUMP JUMPDEST DUP6 ISZERO PUSH2 0xC52 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xC0F JUMPI DUP4 ISZERO PUSH2 0xBCC JUMPI SWAP2 DUP4 SWAP2 PUSH1 0x60 SWAP5 PUSH32 0x97A48C4BE738BDF3E84E8F3927DF6D4E52CCC94C58E96A666FACA603E456D490 SWAP7 SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP7 DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP4 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E737572616E63652066756E6420616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E6720636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI CALLDATALOAD SWAP1 PUSH2 0xCBA PUSH2 0xDEC JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0xCD1 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xCDB DUP3 DUP5 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0xCE3 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xD01 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xFE1 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xD99 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xDB6 JUMPI JUMPDEST POP SWAP1 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xDAE JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE02 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE41 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE41 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xEFE JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF0D DUP3 DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xF18 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xF3A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x106B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xEFE JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1065 JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x1051 JUMPI DUP4 PUSH2 0x1041 PUSH2 0x102A DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0xFB3 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1154 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x1140 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x112C JUMPI DUP2 DUP2 SUB PUSH2 0x10F7 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x10E3 JUMPI DUP3 ADD SWAP2 PUSH2 0x10C6 DUP4 DUP4 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1117 PUSH2 0x1107 PUSH2 0x102A SWAP4 DUP7 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x117D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x11A0 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1204 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x11F8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x115B JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE02 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE02 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1228 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10591B5A5B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xEC 0xEB PUSH21 0x6282FE34AC7DE3076981B35247A2D0C1BCDCCD7299 0xC2 DUP5 MUL 0xA5 0xB9 MSTORE SGT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D2DCA0F5C 0xE7 0xE7 GAS 0x4B NUMBER INVALID 0x2B 0xD PUSH16 0x5D0B7A2BF92ECF89F8F0AA17B8308B67 SUB DUP9 0x21 ","sourceMap":"356:7671:41:-:0;;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;790:4;;356:7671;843:4;;356:7671;;;899:4;;356:7671;957:4;356:7671;;-1:-1:-1;;;;;356:7671:41;;;;1950:24;;356:7671;;;;2022:30;;;356:7671;;;;2107:23;;;356:7671;;;;2177:28;;;356:7671;;;;;;;;;;2259:22;356:7671;;;2259:22;356:7671;;2291:34;356:7671;;;2291:34;356:7671;;2335:20;356:7671;;;2335:20;356:7671;2365:30;356:7671;;;2365:30;356:7671;2865:31:2;;;:::i;:::-;2906:69;;-1:-1:-1;2865:31:2;;;:::i;:::-;2906:69;;-1:-1:-1;356:7671:41;;;;;;;;;2906:69:2;356:7671:41;8382:50:39;356:7671:41;-1:-1:-1;;;;;;;;;;;;356:7671:41;;;-1:-1:-1;356:7671:41;;;8382:50:39;;:::i;:::-;;2906:69:2;;;;;;-1:-1:-1;356:7671:41;;;;;8382:50:39;356:7671:41;-1:-1:-1;356:7671:41;;;;8382:50:39;;:::i;:::-;;2906:69:2;;356:7671:41;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;356:7671:41;;;;;;-1:-1:-1;356:7671:41;;;;;-1:-1:-1;356:7671:41;;;;-1:-1:-1;;;;;356:7671:41;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;356:7671:41;1972:1;356:7671;;;;;;;;;;1972:1;;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:22;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;356:7671:41;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;356:7671:41;2954:6:0;356:7671:41;;;;;;;;;;2954:6:0;;356:7671:41;-1:-1:-1;;;;;;;;;;;471:31:41;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:22;6370:40:0;;;356:7671:41;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;2241:406:39:-;;;4360:14;;;-1:-1:-1;356:7671:41;;;;;;;;;;;4360:26:39;2320:321;356:7671:41;;;;;;;;;;;;4360:14:39;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:14:39;2576:11;:::o;356:7671:41:-;-1:-1:-1;;;356:7671:41;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;2320:321:39;-1:-1:-1;2618:12:39;-1:-1:-1;;2618:12:39:o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3564,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":4617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_uint256":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4534,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":4553,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":4443,"id":null,"parameterSlots":2,"returnSlots":0},"fun__revokeRole":{"entryPoint":3843,"id":535,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":4065,"id":9863,"parameterSlots":2,"returnSlots":1},"fun_checkRole":{"entryPoint":3679,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_12563":{"entryPoint":3591,"id":93,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":3717,"id":256,"parameterSlots":2,"returnSlots":1},"fun_remove":{"entryPoint":4203,"id":9947,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":3902,"id":294,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_dd68":{"entryPoint":4641,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":4019,"id":null,"parameterSlots":2,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040908082526004908136101561005a575b5050361561002057600080fd5b60207f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f9161005034600a54611193565b600a5551348152a1005b600091823560e01c9182630186f8a414610dc75750816301ffc9a714610d535781630967a77114610d34578163248a9ca314610d095781632f2ff15d14610c9d578163334c143914610b0857816336568abe14610ac257816355857c2714610aa357816360c6d8ae14610a8457816361d027b314610a5b57816362a2a47c14610a2057816369ee19af14610a015781637ab56083146109e257816381e1ccba146109c35781639010d07c1461098157816391d148541461093a578163938a8bca1461091b57816394684e7e146108fc578163a154668714610818578163a217fddf146107fd578163a3246ad314610759578163b790230314610730578163bb57ad2014610335578163c879657214610255578163c93d0ece14610236578163ca15c8731461020d578163d547741f146101ca575063ee99205c1461019e5780610013565b90346101c657816003193601126101c65760035490516001600160a01b039091168152602090f35b5080fd5b90508234610209578060031936011261020957610205913561020060016101ef610dec565b938387528660205286200154610e5f565b610f03565b5080f35b8280fd5b839150346102095760203660031901126102095760209282913581526001845220549051908152f35b8284346101c657816003193601126101c657602090600d549051908152f35b83915082600319360112610209577f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b670388218084528360205282842033855260205260ff83852054161561031a575034156102e3575060207f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f916102d834600a54611193565b600a5551348152a180f35b6020606492519162461bcd60e51b83528201526012602482015271139bc81999595cc81d1bc818dbdb1b1958dd60721b6044820152fd5b604492519163e2517d3f60e01b835233908301526024820152fd5b8284346101c657816003193601126101c6574780156106f557612710918261035f600654846111b6565b04918361036e600754836111b6565b049361038b81610380600854856111b6565b0492600954906111b6565b04918361067f575b8461060a575b82610589575b811580156103f3575b50519283526020830193909352604082019290925260608101919091527f78490b24a020086d2701460dc169a540280c517bef9cdcd742f751a9099922a39080608081015b0390a180f35b8680526020906001825282882080541561057657885260018060a01b039182818a20541692600a860292868404600a141715610563579285949392828b9c858d7f78490b24a020086d2701460dc169a540280c517bef9cdcd742f751a9099922a39e966103ed9c9b986002541660648b51809481936323b872dd60e01b83528b898401523060248401528a60448401525af19081610546575b506104b8575050505081806104ad9481935af16104a76111c9565b50611221565b9091928796506103a8565b60448392878093600254168b51978895869463a9059cbb60e01b865285015260248401525af19182610518575b50506105025781806104fd9481935af16104a76111c9565b6104ad565b505061051090600d54611193565b600d556104ad565b8161053792903d1061053f575b61052f818361115b565b810190611209565b508c806104e5565b503d610525565b61055c90853d871161053f5761052f818361115b565b503861048c565b634e487b7160e01b8a5260118b5260248afd5b634e487b7160e01b895260328a52602489fd5b858080808660018060a01b03600554165af16105a36111c9565b50156105bd576105b583600e54611193565b600e5561039f565b5162461bcd60e51b8152602081880152602260248201527f496e737572616e63652066756e6420646973747269627574696f6e206661696c604482015261195960f21b6064820152608490fd5b858080808860018060a01b038c54165af16106236111c9565b501561063d5761063585600c54611193565b600c55610399565b5162461bcd60e51b8152602081880152601c60248201527f547265617375727920646973747269627574696f6e206661696c6564000000006044820152606490fd5b858080808760018060a01b03600354165af16106996111c9565b50156106b3576106ab84600b54611193565b600b55610393565b5162461bcd60e51b8152602081880152601b60248201527f5374616b696e6720646973747269627574696f6e206661696c656400000000006044820152606490fd5b815162461bcd60e51b815260208186015260156024820152744e6f206665657320746f206469737472696275746560581b6044820152606490fd5b8284346101c657816003193601126101c65760055490516001600160a01b039091168152602090f35b8391503461020957602090816003193601126107f9573583526001808252828420835181548082529186528386208185019693949192879190855b8181106107e657505050826107aa91038361115b565b8451948186019282875251809352850195925b8281106107ca5785870386f35b83516001600160a01b03168752958101959281019284016107bd565b8254845292840192918701918701610794565b8380fd5b8284346101c657816003193601126101c65751908152602090f35b9050346101c65760803660031901126101c65780356024359160443560643591610840610e07565b61271061085a84610855856108558a8a611193565b611193565b036108b95750906103ed917f8adead107ba13fae1b5f36d9fa779c58b2bf71aab754388ad1feb3f6427fbd6795968460065585600755816008558260095551948594859094939260609260808301968352602083015260408201520152565b606490602088519162461bcd60e51b8352820152601f60248201527f50657263656e7461676573206d7573742061646420757020746f2031303025006044820152fd5b8284346101c657816003193601126101c657602090600b549051908152f35b8284346101c657816003193601126101c657602090600c549051908152f35b839150346102095781600319360112610209578160209360ff9261095c610dec565b903582528186528282206001600160a01b039091168252855220549151911615158152f35b839150346102095781600319360112610209576020926109ad9135815260018452826024359120610fb3565b905491519160018060a01b039160031b1c168152f35b8284346101c657816003193601126101c6576020906006549051908152f35b8284346101c657816003193601126101c6576020906007549051908152f35b8284346101c657816003193601126101c6576020906008549051908152f35b8284346101c657816003193601126101c657602090517f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b670388218152f35b839150346102095782600319360112610209575490516001600160a01b03909116815260209150f35b8284346101c657816003193601126101c657602090600a549051908152f35b8284346101c657816003193601126101c657602090600e549051908152f35b8284346101c657806003193601126101c657610adc610dec565b90336001600160a01b03831603610af95750610205919235610f03565b5163334bd91960e11b81528390fd5b83915034610209576060366003190112610209576001600160a01b03813581811693919290849003610c9957610b3c610dec565b9260443593818516809503610c9557610b53610e07565b8515610c525716908115610c0f578315610bcc579183916060947f97a48c4be738bdf3e84e8f3927df6d4e52ccc94c58e96a666faca603e456d49096946bffffffffffffffffffffffff60a01b90868260035416176003558382825416179055600554161760055581519384526020840152820152a180f35b606490602084519162461bcd60e51b8352820152601e60248201527f496e76616c696420696e737572616e63652066756e64206164647265737300006044820152fd5b606490602084519162461bcd60e51b8352820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152fd5b835162461bcd60e51b8152602081850181905260248201527f496e76616c6964207374616b696e6720636f6e747261637420616464726573736044820152606490fd5b8680fd5b8480fd5b839150346102095781600319360112610209573590610cba610dec565b9082845283602052610cd160018286200154610e5f565b610cdb8284610e85565b610ce3578380f35b9183526001602052908220610d01916001600160a01b031690610fe1565b508180808380f35b8391503461020957602036600319011261020957816020936001923581528085522001549051908152f35b8284346101c657816003193601126101c6576020906009549051908152f35b8391503461020957602036600319011261020957359063ffffffff60e01b82168092036102095760209250635a05180f60e01b8214918215610d99575b50519015158152f35b909150637965db0b60e01b8114908115610db6575b509083610d90565b6301ffc9a760e01b14905083610dae565b8390346101c657816003193601126101c6576002546001600160a01b03168152602090f35b602435906001600160a01b0382168203610e0257565b600080fd5b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615610e415750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff6040600020541615610e415750565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014610efe57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b610f0d8282610f3e565b9182610f1857505090565b600091825260016020526040909120610f3a916001600160a01b03169061106b565b5090565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014610efe5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b8054821015610fcb5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b919060018301600090828252806020526040822054156000146110655784549468010000000000000000861015611051578361104161102a886001604098999a01855584610fb3565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9060018201906000928184528260205260408420549081151560001461115457600019918083018181116111405782549084820191821161112c578181036110f7575b505050805480156110e3578201916110c68383610fb3565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61111761110761102a9386610fb3565b90549060031b1c92839286610fb3565b905586528460205260408620553880806110ae565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b90601f8019910116810190811067ffffffffffffffff82111761117d57604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116111a057565b634e487b7160e01b600052601160045260246000fd5b818102929181159184041417156111a057565b3d15611204573d9067ffffffffffffffff821161117d57604051916111f8601f8201601f19166020018461115b565b82523d6000602084013e565b606090565b90816020910312610e0257518015158103610e025790565b1561122857565b60405162461bcd60e51b815260206004820152601560248201527410591b5a5b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fdfea2646970667358221220d9eceb746282fe34ac7de3076981b35247a2d0c1bcdccd7299c28402a5b9521364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x5A JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP2 PUSH2 0x50 CALLVALUE PUSH1 0xA SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xA SSTORE MLOAD CALLVALUE DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x186F8A4 EQ PUSH2 0xDC7 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xD53 JUMPI DUP2 PUSH4 0x967A771 EQ PUSH2 0xD34 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xD09 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xC9D JUMPI DUP2 PUSH4 0x334C1439 EQ PUSH2 0xB08 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xAC2 JUMPI DUP2 PUSH4 0x55857C27 EQ PUSH2 0xAA3 JUMPI DUP2 PUSH4 0x60C6D8AE EQ PUSH2 0xA84 JUMPI DUP2 PUSH4 0x61D027B3 EQ PUSH2 0xA5B JUMPI DUP2 PUSH4 0x62A2A47C EQ PUSH2 0xA20 JUMPI DUP2 PUSH4 0x69EE19AF EQ PUSH2 0xA01 JUMPI DUP2 PUSH4 0x7AB56083 EQ PUSH2 0x9E2 JUMPI DUP2 PUSH4 0x81E1CCBA EQ PUSH2 0x9C3 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x981 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x93A JUMPI DUP2 PUSH4 0x938A8BCA EQ PUSH2 0x91B JUMPI DUP2 PUSH4 0x94684E7E EQ PUSH2 0x8FC JUMPI DUP2 PUSH4 0xA1546687 EQ PUSH2 0x818 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x759 JUMPI DUP2 PUSH4 0xB7902303 EQ PUSH2 0x730 JUMPI DUP2 PUSH4 0xBB57AD20 EQ PUSH2 0x335 JUMPI DUP2 PUSH4 0xC8796572 EQ PUSH2 0x255 JUMPI DUP2 PUSH4 0xC93D0ECE EQ PUSH2 0x236 JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x20D JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1CA JUMPI POP PUSH4 0xEE99205C EQ PUSH2 0x19E JUMPI DUP1 PUSH2 0x13 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x209 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH2 0x205 SWAP2 CALLDATALOAD PUSH2 0x200 PUSH1 0x1 PUSH2 0x1EF PUSH2 0xDEC JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH32 0x2DCA0F5CE7E75A4B43FE2B0D6F5D0B7A2BF92ECF89F8F0AA17B8308B67038821 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x31A JUMPI POP CALLVALUE ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x20 PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP2 PUSH2 0x2D8 CALLVALUE PUSH1 0xA SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xA SSTORE MLOAD CALLVALUE DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81999595CC81D1BC818DBDB1B1958DD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI SELFBALANCE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x35F PUSH1 0x6 SLOAD DUP5 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP2 DUP4 PUSH2 0x36E PUSH1 0x7 SLOAD DUP4 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP4 PUSH2 0x38B DUP2 PUSH2 0x380 PUSH1 0x8 SLOAD DUP6 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x11B6 JUMP JUMPDEST DIV SWAP2 DUP4 PUSH2 0x67F JUMPI JUMPDEST DUP5 PUSH2 0x60A JUMPI JUMPDEST DUP3 PUSH2 0x589 JUMPI JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x78490B24A020086D2701460DC169A540280C517BEF9CDCD742F751A9099922A3 SWAP1 DUP1 PUSH1 0x80 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 DUP1 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP3 DUP9 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x576 JUMPI DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 DUP11 KECCAK256 SLOAD AND SWAP3 PUSH1 0xA DUP7 MUL SWAP3 DUP7 DUP5 DIV PUSH1 0xA EQ OR ISZERO PUSH2 0x563 JUMPI SWAP3 DUP6 SWAP5 SWAP4 SWAP3 DUP3 DUP12 SWAP13 DUP6 DUP14 PUSH32 0x78490B24A020086D2701460DC169A540280C517BEF9CDCD742F751A9099922A3 SWAP15 SWAP7 PUSH2 0x3ED SWAP13 SWAP12 SWAP9 PUSH1 0x2 SLOAD AND PUSH1 0x64 DUP12 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE DUP12 DUP10 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP11 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 PUSH2 0x546 JUMPI JUMPDEST POP PUSH2 0x4B8 JUMPI POP POP POP POP DUP2 DUP1 PUSH2 0x4AD SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x4A7 PUSH2 0x11C9 JUMP JUMPDEST POP PUSH2 0x1221 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP8 SWAP7 POP PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x44 DUP4 SWAP3 DUP8 DUP1 SWAP4 PUSH1 0x2 SLOAD AND DUP12 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 PUSH2 0x518 JUMPI JUMPDEST POP POP PUSH2 0x502 JUMPI DUP2 DUP1 PUSH2 0x4FD SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x4A7 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST POP POP PUSH2 0x510 SWAP1 PUSH1 0xD SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH2 0x4AD JUMP JUMPDEST DUP2 PUSH2 0x537 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x53F JUMPI JUMPDEST PUSH2 0x52F DUP2 DUP4 PUSH2 0x115B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1209 JUMP JUMPDEST POP DUP13 DUP1 PUSH2 0x4E5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x525 JUMP JUMPDEST PUSH2 0x55C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x53F JUMPI PUSH2 0x52F DUP2 DUP4 PUSH2 0x115B JUMP JUMPDEST POP CODESIZE PUSH2 0x48C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x32 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 SLOAD AND GAS CALL PUSH2 0x5A3 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5B5 DUP4 PUSH1 0xE SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH2 0x39F JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E63652066756E6420646973747269627574696F6E206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 SLOAD AND GAS CALL PUSH2 0x623 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x63D JUMPI PUSH2 0x635 DUP6 PUSH1 0xC SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x399 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547265617375727920646973747269627574696F6E206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND GAS CALL PUSH2 0x699 PUSH2 0x11C9 JUMP JUMPDEST POP ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6AB DUP5 PUSH1 0xB SLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x393 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720646973747269627574696F6E206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206665657320746F2064697374726962757465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F9 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE DUP3 DUP5 KECCAK256 DUP4 MLOAD DUP2 SLOAD DUP1 DUP3 MSTORE SWAP2 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP2 DUP6 ADD SWAP7 SWAP4 SWAP5 SWAP2 SWAP3 DUP8 SWAP2 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x7E6 JUMPI POP POP POP DUP3 PUSH2 0x7AA SWAP2 SUB DUP4 PUSH2 0x115B JUMP JUMPDEST DUP5 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x7CA JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x7BD JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x794 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1C6 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C6 JUMPI DUP1 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x840 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x85A DUP5 PUSH2 0x855 DUP6 PUSH2 0x855 DUP11 DUP11 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST SUB PUSH2 0x8B9 JUMPI POP SWAP1 PUSH2 0x3ED SWAP2 PUSH32 0x8ADEAD107BA13FAE1B5F36D9FA779C58B2BF71AAB754388AD1FEB3F6427FBD67 SWAP6 SWAP7 DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0x7 SSTORE DUP2 PUSH1 0x8 SSTORE DUP3 PUSH1 0x9 SSTORE MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676573206D7573742061646420757020746F203130302500 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x95C PUSH2 0xDEC JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE DUP2 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x9AD SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x2DCA0F5CE7E75A4B43FE2B0D6F5D0B7A2BF92ECF89F8F0AA17B8308B67038821 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xE SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0xADC PUSH2 0xDEC JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xAF9 JUMPI POP PUSH2 0x205 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF03 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xC99 JUMPI PUSH2 0xB3C PUSH2 0xDEC JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP4 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0xC95 JUMPI PUSH2 0xB53 PUSH2 0xE07 JUMP JUMPDEST DUP6 ISZERO PUSH2 0xC52 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xC0F JUMPI DUP4 ISZERO PUSH2 0xBCC JUMPI SWAP2 DUP4 SWAP2 PUSH1 0x60 SWAP5 PUSH32 0x97A48C4BE738BDF3E84E8F3927DF6D4E52CCC94C58E96A666FACA603E456D490 SWAP7 SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP7 DUP3 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP4 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E737572616E63652066756E6420616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E6720636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI CALLDATALOAD SWAP1 PUSH2 0xCBA PUSH2 0xDEC JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0xCD1 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xCDB DUP3 DUP5 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0xCE3 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xD01 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xFE1 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x209 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x209 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x209 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xD99 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xDB6 JUMPI JUMPDEST POP SWAP1 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xDAE JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE02 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE41 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE41 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xEFE JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF0D DUP3 DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xF18 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xF3A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x106B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xEFE JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1065 JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x1051 JUMPI DUP4 PUSH2 0x1041 PUSH2 0x102A DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0xFB3 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1154 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x1140 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x112C JUMPI DUP2 DUP2 SUB PUSH2 0x10F7 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x10E3 JUMPI DUP3 ADD SWAP2 PUSH2 0x10C6 DUP4 DUP4 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1117 PUSH2 0x1107 PUSH2 0x102A SWAP4 DUP7 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x117D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x11A0 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1204 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x11F8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x115B JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE02 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE02 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1228 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10591B5A5B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xEC 0xEB PUSH21 0x6282FE34AC7DE3076981B35247A2D0C1BCDCCD7299 0xC2 DUP5 MUL 0xA5 0xB9 MSTORE SGT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"356:7671:41:-:0;;;;;;;;;;;;;;-1:-1:-1;356:7671:41;;;;;;;;;;;7994:24;7970:9;7948:31;7970:9;7948:31;356:7671;7948:31;:::i;:::-;;356:7671;;7970:9;356:7671;;7994:24;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;356:7671:41;;2475:4:0;356:7671:41;;;:::i;:::-;;;;;;;;;;3901:22:0;356:7671:41;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;356:7671:41;;;;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:33;356:7671;;;;;;;;;;;;;;;;;;;471:31;356:7671;;;;;;;;;735:10:22;356:7671:41;;;;;;;;;;3519:23:0;3515:108;;2672:9:41;;:13;356:7671;;2672:9;356:7671;2782:24;2672:9;2727:31;2672:9;2727:31;356:7671;2727:31;:::i;:::-;;356:7671;;2672:9;356:7671;;2782:24;356:7671;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;3515:108:0;356:7671:41;;;3565:47:0;;;;;;735:10:22;3565:47:0;;;356:7671:41;;;;;3565:47:0;356:7671:41;;;;;;;;;;;;;;2982:21;3021:11;;356:7671;;3162:5;356:7671;;3131:27;3141:17;356:7671;3131:27;;:::i;:::-;356:7671;;;3203:28;3213:18;356:7671;3203:28;;:::i;:::-;356:7671;;3356:33;356:7671;3275:31;3285:21;356:7671;3275:31;;:::i;:::-;356:7671;;3366:23;356:7671;3356:33;;:::i;:::-;356:7671;3463:17;;3459:242;;356:7671;3757:18;3753:242;;356:7671;4057:23;4053:275;;356:7671;4408:17;;;;4404:1197;;356:7671;-1:-1:-1;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;5624:82;;356:7671;;;;5624:82;;;;356:7671;;4404:1197;356:7671;;;;;1633:12:2;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;4734:2;356:7671;;;;;;4734:2;356:7671;;;;;;;;;;;;;;;5624:82;356:7671;;5624:82;356:7671;;;4815:9;356:7671;;;;;;;;;;;;4808:64;;;;;;356:7671;2990:4;356:7671;;;;;;;;;4808:64;;;;;;4404:1197;-1:-1:-1;4804:787:41;;5476:36;;;;;;5530:46;5476:36;;;;;;;:::i;:::-;;5530:46;:::i;:::-;4404:1197;;;;;;;;4804:787;356:7671;;;;;;4815:9;356:7671;;;;;;;;;;;;4972:50;;;;356:7671;;;;;4972:50;;;;;;4804:787;-1:-1:-1;;4968:397:41;;5242:36;;5300:46;5242:36;;;;;;;:::i;5300:46::-;4804:787;;4968:397;356:7671;;5045:35;356:7671;5045:35;356:7671;5045:35;:::i;:::-;;356:7671;4804:787;;4972:50;;;;;;-1:-1:-1;4972:50:41;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;4808:64;;;;;;;;;;;;;:::i;:::-;;;;;356:7671;-1:-1:-1;;;356:7671:41;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;4053:275;356:7671;;;;;;;;;;4124:13;356:7671;;4124:50;;;;:::i;:::-;;356:7671;;;4265:52;356:7671;4265:52;356:7671;4265:52;:::i;:::-;;356:7671;4053:275;;356:7671;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;3753:242;356:7671;;;;;;;;;;;;;3818:40;;;;:::i;:::-;;356:7671;;;3942:42;356:7671;3942:42;356:7671;3942:42;:::i;:::-;;356:7671;3753:242;;356:7671;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;3459:242;356:7671;;;;;;;;;;;;;3522:46;;;;:::i;:::-;;356:7671;;;3650:40;356:7671;3650:40;356:7671;3650:40;:::i;:::-;;356:7671;3459:242;;356:7671;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;669:28;356:7671;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;;;2475:4:0;;;:::i;:::-;6459:5:41;6363:92;:40;:65;:40;;;;;:::i;:::-;:65;:::i;:92::-;:101;356:7671;;;;6768:168;356:7671;6768:168;356:7671;;;6540:38;356:7671;;6588:40;356:7671;;6638:46;356:7671;;6694:50;356:7671;;6768:168;;;;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:38;356:7671;;;;;;;;;;;;;;;;;;;;;;;1095:39;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:18:39;356:7671:41;;;;;;;;;;;;5016:18:39;:::i;:::-;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:39;356:7671;;;;;;;;;;;;;;;;;;;;;;;807:40;356:7671;;;;;;;;;;;;;;;;;;;;;;;860:43;356:7671;;;;;;;;;;;;;;;;;;;;;;;;471:31;356:7671;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;-1:-1:-1;356:7671:41;;;;;;;;;;;;;;;;;1012:33;356:7671;;;;;;;;;;;;;;;;;;;;;;;1179:44;356:7671;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:22;;-1:-1:-1;;;;;356:7671:41;;5421:34:0;5417:102;;356:7671:41;5529:37:0;356:7671:41;;;5529:37:0;:::i;5417:102::-;356:7671:41;-1:-1:-1;;;5478:30:0;;356:7671:41;;5478:30:0;356:7671:41;;;;;;;;;-1:-1:-1;;356:7671:41;;;;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2475:4:0;;:::i;:::-;7356:30:41;;356:7671;;;7441:23;;;356:7671;;7511:28;;356:7671;;;;;;;7721:107;356:7671;;;;;;;;;;;;;;;;;;;;;;7667:30;356:7671;;;7667:30;356:7671;;;;;;;;;;;;;7721:107;356:7671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2475:4:0;356:7671:41;;;;3901:22:0;356:7671:41;2475:4:0;:::i;:::-;2865:31:2;;;;:::i;:::-;2906:69;;356:7671:41;;;2906:69:2;356:7671:41;;;;;;;;;8382:50:39;;-1:-1:-1;;;;;356:7671:41;;8382:50:39;:::i;:::-;;2906:69:2;;;356:7671:41;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;;;;;;3901:22:0;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;916:45;356:7671;;;;;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;837:57:2;;;:97;;;;356:7671:41;;;;;;;;;837:97:2;2688:32:0;;-1:-1:-1;;;;2673:47:0;;;:87;;;;837:97:2;;;;;;2673:87:0;-1:-1:-1;;;862:40:33;;-1:-1:-1;2673:87:0;;;356:7671:41;;;;;;;;;;;;;;539:24;356:7671;-1:-1:-1;;;;;356:7671:41;;;;;;;;;;-1:-1:-1;;;;;356:7671:41;;;;;;:::o;:::-;;;;3199:103:0;735:10:22;356:7671:41;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;356:7671:41;;;;3565:47:0;;;;;;735:10:22;3565:47:0;;;356:7671:41;;;;;3565:47:0;3199:103;356:7671:41;2954:6:0;356:7671:41;2954:6:0;356:7671:41;;;2954:6:0;356:7671:41;735:10:22;2954:6:0;356:7671:41;;;;;2954:6:0;356:7671:41;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;2954:6;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:22;6370:40:0;;;356:7671:41;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;3108:262:2:-;3226:32;;;;:::i;:::-;3268:72;;;;3349:14;;3108:262;:::o;3268:72::-;-1:-1:-1;356:7671:41;;;3295:12:2;356:7671:41;;;;;;8703:53:39;;-1:-1:-1;;;;;356:7671:41;;8703:53:39;:::i;:::-;;3108:262:2;:::o;6730:317:0:-;;2954:6;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:217:0;356:7671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:22;6922:40:0;;;356:7671:41;6976:11:0;:::o;356:7671:41:-;;;;;;;;-1:-1:-1;356:7671:41;;-1:-1:-1;356:7671:41;;;-1:-1:-1;356:7671:41;:::o;:::-;;;;;;;;;;;;2241:406:39;;;4360:14;;;-1:-1:-1;356:7671:41;;;;;;;;;;;4360:26:39;2320:321;356:7671:41;;;;;;;;;;;;;;;;4360:14:39;356:7671:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:14:39;2576:11;:::o;356:7671:41:-;-1:-1:-1;;;356:7671:41;;;;;;;;2320:321:39;-1:-1:-1;2618:12:39;-1:-1:-1;;2618:12:39:o;2815:1368::-;;3010:14;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;3046:13:39;;;;3042:1135;3046:13;;;-1:-1:-1;;356:7671:41;;;;;;;;;;;;;;;;;;;;3521:23:39;;;3517:378;;3042:1135;356:7671:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3010:14:39;4112:11;:::o;356:7671:41:-;-1:-1:-1;;;356:7671:41;;;;;;;;3517:378:39;356:7671:41;3584:22:39;3705:23;3584:22;;;:::i;:::-;356:7671:41;;;;;;3705:23:39;;;;;:::i;356:7671:41:-;;;;;;;;;;;;3517:378:39;;;;;356:7671:41;-1:-1:-1;;;356:7671:41;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;;;3042:1135:39;4154:12;;;;;:::o;356:7671:41:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;356:7671:41;;;;;:::i;:::-;;;;-1:-1:-1;356:7671:41;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;356:7671:41;;;;;;;;;;;;-1:-1:-1;;;356:7671:41;;;;;;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","FEE_COLLECTOR_ROLE()":"62a2a47c","buybackBurnPercentage()":"69ee19af","collectFees()":"c8796572","distributeFees()":"bb57ad20","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","insuranceFund()":"b7902303","insuranceFundPercentage()":"0967a771","omniToken()":"0186f8a4","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","stakingContract()":"ee99205c","stakingPercentage()":"81e1ccba","supportsInterface(bytes4)":"01ffc9a7","totalBuybackBurned()":"c93d0ece","totalFeesCollected()":"60c6d8ae","totalInsuranceFundDistributed()":"55857c27","totalStakingDistributed()":"94684e7e","totalTreasuryDistributed()":"938a8bca","treasury()":"61d027b3","treasuryPercentage()":"7ab56083","updateAddresses(address,address,address)":"334c1439","updateDistribution(uint256,uint256,uint256,uint256)":"a1546687"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_omniToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_insuranceFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"insuranceFund\",\"type\":\"address\"}],\"name\":\"AddressesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackBurnPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuranceFundPercentage\",\"type\":\"uint256\"}],\"name\":\"DistributionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuranceFundAmount\",\"type\":\"uint256\"}],\"name\":\"FeesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_COLLECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackBurnPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFundPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omniToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuybackBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInsuranceFundDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTreasuryDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_insuranceFund\",\"type\":\"address\"}],\"name\":\"updateAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buybackBurnPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_insuranceFundPercentage\",\"type\":\"uint256\"}],\"name\":\"updateDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateAddresses(address,address,address)\":{\"params\":{\"_insuranceFund\":\"New insurance fund address\",\"_stakingContract\":\"New staking contract address\",\"_treasury\":\"New treasury address\"}},\"updateDistribution(uint256,uint256,uint256,uint256)\":{\"params\":{\"_buybackBurnPercentage\":\"Percentage for buyback & burn (basis points)\",\"_insuranceFundPercentage\":\"Percentage for insurance fund (basis points)\",\"_stakingPercentage\":\"Percentage for staking (basis points)\",\"_treasuryPercentage\":\"Percentage for treasury (basis points)\"}}},\"title\":\"Fee Distributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectFees()\":{\"notice\":\"Collects fees from protocol operations\"},\"distributeFees()\":{\"notice\":\"Distributes collected fees according to distribution percentages\"},\"updateAddresses(address,address,address)\":{\"notice\":\"Updates distribution addresses\"},\"updateDistribution(uint256,uint256,uint256,uint256)\":{\"notice\":\"Updates the fee distribution percentages\"}},\"notice\":\"Collects protocol fees and distributes them to staking, treasury, insurance fund, and buyback\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FeeDistributor.sol\":\"FeeDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/FeeDistributor.sol\":{\"keccak256\":\"0x9db85f40a61afbe66489a312b5ad2179bf247272d9977410845c6c7fe010cdf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41c48d44ff63006b0ed83d5a1a4ea9f0cc4944d2080d69017af7126041028323\",\"dweb:/ipfs/QmQDso9cGULX1WHUJningPJ13A5hJf5UGj2yEPgPsNocmd\"]}},\"version\":1}"}},"contracts/OMNIStaking.sol":{"IFeeDistributor":{"abi":[{"inputs":[],"name":"distributeToStakers","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"distributeToStakers()":"42f34f5d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"distributeToStakers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNIStaking.sol\":\"IFeeDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNIStaking.sol\":{\"keccak256\":\"0x8a79b80c6be12440673cebc5b19d8b18d4b3bbd6845ca9626cc2621b5cc30fec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfe7794517e086e4d1988ba87ea44593deeb74bf55bc202bfa5ed5b4aa6e224\",\"dweb:/ipfs/QmczEEy7rqyXv34WbbXKoSqYuM4aoXXsKAiaPpuFkUWmET\"]}},\"version\":1}"},"IOMNIToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"name":"getDiscountForStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDiscountForStakedAmount(uint256)":"503c2a80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"getDiscountForStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNIStaking.sol\":\"IOMNIToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNIStaking.sol\":{\"keccak256\":\"0x8a79b80c6be12440673cebc5b19d8b18d4b3bbd6845ca9626cc2621b5cc30fec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfe7794517e086e4d1988ba87ea44593deeb74bf55bc202bfa5ed5b4aa6e224\",\"dweb:/ipfs/QmczEEy7rqyXv34WbbXKoSqYuM4aoXXsKAiaPpuFkUWmET\"]}},\"version\":1}"},"OMNIStaking":{"abi":[{"inputs":[{"internalType":"address","name":"_omniToken","type":"address"},{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"EarlyWithdrawalPenaltyUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"StakingTierAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"lockDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"StakingTierUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_DISTRIBUTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accumulatedRewardsPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"addStakingTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"calculatePendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributeRewards","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"earlyWithdrawalPenalty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFeeDiscount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLockDurations","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakesByUser","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"userLockDurations","type":"uint256[]"},{"internalType":"uint256[]","name":"startTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"endTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"multipliers","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"}],"name":"getStakingTier","outputs":[{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getTotalStakedByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lockDurations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"omniToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"lockDurationIndex","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakingTiers","outputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRewardsDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"updateEarlyWithdrawalPenalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"}],"name":"updateStakingTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardDebts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userStakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"lockDuration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"lastRewardClaimTime","type":"uint256"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1106,"id":null,"parameterSlots":0,"returnSlots":1},"fun_add":{"entryPoint":1355,"id":9863,"parameterSlots":2,"returnSlots":1},"fun_grantRole":{"entryPoint":1159,"id":256,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":1305,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"linkReferences":{},"object":"608034620004375762002441601f38829003908101601f19168301906001600160401b038211848310176200043c578084916040948594855283398101031262000437576200004e8262000472565b916200005e602080920162000472565b600160008181556103e8600c55600380546001600160a01b0319166001600160a01b039788161781559195909392620000978162000487565b62000416575b50508280526004808352858585200154620003dd57620000bc62000452565b938085528385019487606496878152838052848752888420925183555191015560058054976801000000000000000092838a1015620003ca57620001068a838b9c01855562000519565b9590805460001980988a1b1b19169055895182815289898201527f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe279a8b91a162278d00808352818952838c8420015462000392576200016462000452565b818152848d8b83019060698252848752858d52862092518355519101558454868110156200037f578b916200019f828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260698b820152a16276a700808352818952838c842001546200039257620001db62000452565b818152848d8b83019060738252848752858d52862092518355519101558454868110156200037f578b9162000216828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260738b820152a162ed4e00808352818952838c8420015462000392576200025262000452565b818152848d8b83019060828252848752858d52862092518355519101558454868110156200037f578b916200028d828f938801895562000519565b8154908c1b908b84831b921b1916179055815190815260828b820152a16301e1338098898352818952838c84200154620003485750620002cc62000452565b89815283898201609681528b8552838b528d85209251835551910155835494851015620003355750508289979694926200030d926096979501905562000519565b81939154911b9186831b921b19161790558351928352820152a151611e689081620005d98239f35b634e487b7160e01b825260419052602490fd5b8b5162461bcd60e51b815291820189905260136024830152725469657220616c72656164792065786973747360681b604483015290fd5b634e487b7160e01b845260418352602484fd5b8b5162461bcd60e51b81528083018a905260136024820152725469657220616c72656164792065786973747360681b60448201528a90fd5b634e487b7160e01b815260418552602490fd5b845162461bcd60e51b815290810183905260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b6200042e91858052600285528686209116906200054b565b5038806200009d565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200043c57604052565b51906001600160a01b03821682036200043757565b6001600160a01b031660008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205490919060ff16620005155781805260016020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b5090565b6005548110156200053557600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b91906001830160009082825280602052604082205415600014620005d25784549468010000000000000000861015620005be5760018601808255861015620005aa57836040949596828552602085200155549382526020522055600190565b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b83526041600452602483fd5b5092505056fe608060408181526004918236101561002b575b505050361561002057600080fd5b61002934611b39565b005b600092833560e01c9182630186f8a41461123a5750816301ffc9a7146111c75781630951984d146111a6578163097aad10146111795781630cdac9631461113e578163111a980214611024578163248a9ca314610ffa578163291a3d9e14610fdb5781632e17de7814610dbc5781632f2ff15d14610d5057816331d7a26214610d1857816332298be114610cdf57816336568abe14610c99578163372500ab14610c705781633896218614610c5157816368a34f9814610ba25781636f4a2cd014610aed57816376520c6d14610abc5781637b0472f01461081c578163817b1cd2146107fd5781638686b39a146107c55781639010d07c1461078457816391d148541461073d578163a217fddf14610722578163a3246ad31461067a578163b3c6cd7614610634578163b5d5b5fa146105a9578163b7fa7cfc14610506578163c0d8fd3f1461030a578163ca15c873146102e2578163d1e85a7414610246578163d50267ee14610215578163d547741f146101d2575063ee172546146101b15780610012565b346101ce57816003193601126101ce576020906008549051908152f35b5080fd5b9190503461021157806003193601126102115761020d913561020860016101f761127a565b9383875281602052862001546113b3565b611459565b5080f35b8280fd5b9050346102115760203660031901126102115791828293358252602052206001815491015482519182526020820152f35b919050346102115760203660031901126102115781359161026561135b565b610bb883116102a05750816020917f653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d493600c5551908152a180f35b6020606492519162461bcd60e51b8352820152601960248201527f50656e616c74792063616e6e6f742065786365656420333025000000000000006044820152fd5b9050346102115760203660031901126102115760209282913581526002845220549051908152f35b91905034610211576020806003193601126105025761032761125f565b84926001600160a01b0390911690835b8287526006845281872080548210156103855760056103588360ff9361133f565b5001541615610370575b61036b9061181f565b610337565b9361037d61036b9161181f565b949050610362565b50509091938561039485611d7f565b9061039e86611d7f565b936103a887611d7f565b916103bb6103b589611d7f565b98611d7f565b948196825b8984526006808d528585208054831015610496578d918c60ff8f936103e78760059261133f565b5001541615610403575b505050506103fe9061181f565b6103c0565b92858d9361046e879f60608f8f8f8f8f9a9161043d6103fe9f61048a9f9083858f9761046598610437958e9952522061133f565b506119b3565b9461044a83875192611db1565b528a85019961045b838c5192611db1565b5284015192611db1565b52015192611db1565b525188525260018787200154610484828c611db1565b5261181f565b9890508b8b8e8c6103f1565b6104c8898f8f6104f08e916104e28d8f6104d56104fe976104b5611dc5565b84519b8c9b60a08d5260a08d019061130b565b918b8303908c015261130b565b918883039089015261130b565b90858203606087015261130b565b90838203608085015261130b565b0390f35b8380fd5b8383346101ce5760209283600319360112610211578361052c61052761125f565b611cdc565b600354845162a0785560e71b815293840191909152829060249082906001600160a01b03165afa92831561059e578093610569575b505051908152f35b909192508382813d8311610597575b61058281836116da565b81010312610594575051908380610561565b80fd5b503d610578565b8251903d90823e3d90fd5b919050346102115780600319360112610211576105c461125f565b6001600160a01b03168352600660205280832080546024359490851015610594575060c0936105f29161133f565b5080549260018201549260028301549060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b9050346102115760203660031901126102115791828293358252602052206020825161065f8161168c565b60018354938483520154918291015282519182526020820152f35b9050823461059457602091826003193601126101ce5792919235815260028352818120908251808584549182815201908194845286842090845b81811061070e57505050816106ca9103826116da565b83519485948186019282875251809352850193925b8281106106ee57505050500390f35b83516001600160a01b0316855286955093810193928101926001016106df565b8254845292880192600192830192016106b4565b5050346101ce57816003193601126101ce5751908152602090f35b9050346102115781600319360112610211578160209360ff9261075e61127a565b90358252600186528282206001600160a01b039091168252855220549151911615158152f35b9050346102115781600319360112610211576020926107af91358152600284528260243591206112f3565b905491519160018060a01b039160031b1c168152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b036107ed61125f565b168152600a845220549051908152f35b5050346101ce57816003193601126101ce576020906007549051908152f35b9050346102115761082c36611290565b6108379391936117fc565b8315610a8857600554811015610a4557610850906112a6565b90549060031b1c80855260208381526001838720015415610a0b57610874336118b0565b60035483516323b872dd60e01b8382015233602482015230604482015260648082018890528152906001600160a01b031660a0820167ffffffffffffffff8111838210176109f85785526108c89190611794565b6108d28242611754565b9333875260068252838720908451906108ea826116be565b8782528382018581528683014281526060840190898252608085019242845260a08601968d8852805490600160401b8210156109e557906109309160018201815561133f565b9690966109d3579060059695949392915186555160018601555160028501555160038401555190820155019051151560ff8019835416911617905561097785600754611754565b600755670de0b6b3a764000061098f60095487611761565b04338752600a82528387205582519485528401528201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a26001815580f35b634e487b7160e01b8e528d865260248efd5b634e487b7160e01b8f526041875260248ffd5b634e487b7160e01b895260418752602489fd5b8360649184519162461bcd60e51b8352820152601560248201527424b73b30b634b2103637b1b590323ab930ba34b7b760591b6044820152fd5b815162461bcd60e51b8152602081850152601b60248201527f496e76616c6964206c6f636b206475726174696f6e20696e64657800000000006044820152606490fd5b815162461bcd60e51b8152602081850152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b5050346101ce57816003193601126101ce576104fe90610ada611dc5565b905191829160208352602083019061130b565b91905082600319360112610211577f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea808452600160205281842033855260205260ff828520541615610b8657503415610b4d5782610b4a34611b39565b80f35b906020606492519162461bcd60e51b83528201526013602482015272043616e6e6f742064697374726962757465203606c1b6044820152fd5b60449291519163e2517d3f60e01b835233908301526024820152fd5b8383346101ce57610bb236611290565b610bba61135b565b610bc760648210156116fc565b818452846020526001838520015415610c19578394827f8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a54689552602052806001848720015582519182526020820152a180f35b825162461bcd60e51b81526020818701526012602482015271151a595c88191bd95cdb89dd08195e1a5cdd60721b6044820152606490fd5b5050346101ce57816003193601126101ce576020906009549051908152f35b8334610594578060031936011261059457610c896117fc565b610c92336118b0565b6001815580f35b8383346101ce57806003193601126101ce57610cb361127a565b90336001600160a01b03831603610cd0575061020d919235611459565b5163334bd91960e11b81528390fd5b9050346102115760203660031901126102115735916005548310156105945750610d0a6020926112a6565b91905490519160031b1c8152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b03610d4061125f565b168152600b845220549051908152f35b9050346102115781600319360112610211573590610d6c61127a565b908284526001602052610d84600182862001546113b3565b610d8e82846113d9565b610d96578380f35b9183526002602052908220610db4916001600160a01b03169061150b565b503880808380f35b8383346101ce5760209081600319360112610211578335610ddb6117fc565b3384526006835281842054811015610fa257610e00903385526006845282852061133f565b50916005830160ff815416610f66578354938591610e1d336118b0565b60038201544210610f14575b610e66670de0b6b3a764000092610e6f92600160ff19825416179055610e528154600754611579565b600755610e5e33611cdc565b905490611579565b60095490611761565b04338652600a83528386205560018060a01b036003541683519063a9059cbb60e01b84830152336024830152856044830152604482526080820182811067ffffffffffffffff821117610f015785527f4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e94939291610eec91611794565b82519485521515908401523392a26001815580f35b634e487b7160e01b885260418952602488fd5b949150610e6f610e66670de0b6b3a764000092610f41612710610f39600c5488611761565b048096611579565b97610f5c600196610f5481600754611579565b600755611b39565b9250925050610e29565b825162461bcd60e51b8152808701839052601660248201527514dd185ad948185b1c9958591e481d5b9b1bd8dad95960521b6044820152606490fd5b815162461bcd60e51b81528086018490526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b5050346101ce57816003193601126101ce57602090600c549051908152f35b90503461021157602036600319011261021157816020936001923581528285522001549051908152f35b8383346101ce5761103436611290565b61103c61135b565b61104960648210156116fc565b81845284602052600183852001546111055782516110668161168c565b828152600160208201838152848752876020528587209251835551910155600554600160401b8110156110f2577f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe279495506110e26110cb8260018694016005556112a6565b819391549060031b91821b91600019901b19161790565b905582519182526020820152a180f35b634e487b7160e01b855260418652602485fd5b825162461bcd60e51b815260208187015260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b5050346101ce57816003193601126101ce57602090517f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea8152f35b5050346101ce5760203660031901126101ce5760209061119f61119a61125f565b6119fe565b9051908152f35b5050346101ce5760203660031901126101ce5760209061119f61052761125f565b90503461021157602036600319011261021157359063ffffffff60e01b82168092036102115760209250635a05180f60e01b821491821561120c575b50519015158152f35b909150637965db0b60e01b8114908115611229575b509038611203565b6301ffc9a760e01b14905038611221565b8490346101ce57816003193601126101ce576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361127557565b600080fd5b602435906001600160a01b038216820361127557565b6040906003190112611275576004359060243590565b6005548110156112dd5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112dd5760005260206000200190600090565b90815180825260208080930193019160005b82811061132b575050505090565b83518552938101939281019260010161131d565b80548210156112dd576000526006602060002091020190600090565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16156113955750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600160205260406000203360005260205260ff60406000205416156113955750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146114545780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6114638282611494565b918261146e57505090565b600091825260026020526040909120611490916001600160a01b03169061159c565b5090565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416600014611454578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9190600183016000908282528060205260408220541560001461157357845494600160401b86101561155f578361154f6110cb886001604098999a018555846112f3565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161158657565b634e487b7160e01b600052601160045260246000fd5b9060018201906000928184528260205260408420549081151560001461168557600019918083018181116116715782549084820191821161165d57818103611628575b50505080548015611614578201916115f783836112f3565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6116486116386110cb93866112f3565b90549060031b1c928392866112f3565b905586528460205260408620553880806115df565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6040810190811067ffffffffffffffff8211176116a857604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176116a857604052565b90601f8019910116810190811067ffffffffffffffff8211176116a857604052565b1561170357565b60405162461bcd60e51b8152602060048201526024808201527f4d756c7469706c696572206d757374206265206174206c6561737420313030206044820152632831782960e01b6064820152608490fd5b9190820180921161158657565b8181029291811591840414171561158657565b811561177e570490565b634e487b7160e01b600052601260045260246000fd5b906000602091828151910182855af1156117f0576000513d6117e757506001600160a01b0381163b155b6117c55750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156117be565b6040513d6000823e3d90fd5b60026000541461180d576002600055565b604051633ee5aeb560e01b8152600490fd5b60001981146115865760010190565b3d15611869573d9067ffffffffffffffff82116116a8576040519161185d601f8201601f1916602001846116da565b82523d6000602084013e565b606090565b1561187557565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6118b981611cdc565b156119b0576118c7816119fe565b806118d0575050565b909160005b6001600160a01b038416600081815260066020818152604092839020805486101561194b57918594939160ff6005611911886119259a9761133f565b500154161561192a575b505050505061181f565b6118d5565b61193a946000525260002061133f565b50600442910155388181808061191b565b505050505050919060207ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe916119a760008080808560018060a01b038a16998a8352600b89528260408120555af16119a161182e565b5061186e565b604051908152a2565b50565b906040516119c0816116be565b60a060ff6005839580548552600181015460208601526002810154604086015260038101546060860152600481015460808601520154161515910152565b611a0781611cdc565b15611b33579081611a1a611a2f93611cdc565b670de0b6b3a764000093849160095490611761565b0460018060a01b03821693600090858252602090600a8252611a576040948585205490611579565b90611a628496611cdc565b9182611a81575b505050600b90611a7e95968352522054611754565b90565b909197845b818652600685528686208054821015611b1e5761043782611aa69261133f565b60a081015115611ac0575b50611abb9061181f565b611a86565b80989198518581029080820487149015171561165d57916064611b10611b1793898f611af9611af38c92611abb9a611774565b8b611761565b049101518b5260048a5260018c8c20015490611761565b0490611754565b9790611ab1565b50909850839250611a7e9150600b9050611a69565b50600090565b60075415611bb157670de0b6b3a7640000808202908282041482151715611586577f6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be44291611b96611b8e60209360075490611774565b600954611754565b600955611ba581600854611754565b600855604051908152a1565b6000805b6101008110611c3a575b5015611c00576000805260026020526040600020908154156112dd57600080808093611bfe95825260018060a01b036020832054165af16119a161182e565b565b60405162461bcd60e51b81526020600482015260126024820152714e6f2061646d696e20617661696c61626c6560701b6044820152606490fd5b604051632404341f60e21b8152600060048201526024810182905260208082604481305afa9160009183611c9f575b50509015600014611c7a5750611bbf565b6001600160a01b0316611c9557611c909061181f565b611bb5565b5050600138611bbf565b81813d8311611cd5575b611cb381836116da565b810103126101ce5751906001600160a01b038216820361059457503880611c69565b503d611ca9565b6000805b60018060a01b0383168060005260066020818152604092836000208054861015611d5c576005611d128760ff9361133f565b5001541615611d2e575b50505050611d299061181f565b611ce0565b93611d5293819693611d4a93611d29976000525260002061133f565b505490611754565b9190388080611d1c565b505050505050905090565b67ffffffffffffffff81116116a85760051b60200190565b90611d8982611d67565b611d9660405191826116da565b8281528092611da7601f1991611d67565b0190602036910137565b80518210156112dd5760209160051b010190565b60405190600554808352826020918282019060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000905b828210611e1857505050611bfe925003836116da565b855484526001958601958895509381019390910190611e0256fea26469706673582212207f94436ad6df262ef197283858a5b5ad9409470ffd6b26d52ac784a81678c12164736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x437 JUMPI PUSH3 0x2441 PUSH1 0x1F CODESIZE DUP3 SWAP1 SUB SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP5 DUP4 LT OR PUSH3 0x43C JUMPI DUP1 DUP5 SWAP2 PUSH1 0x40 SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x437 JUMPI PUSH3 0x4E DUP3 PUSH3 0x472 JUMP JUMPDEST SWAP2 PUSH3 0x5E PUSH1 0x20 DUP1 SWAP3 ADD PUSH3 0x472 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE PUSH2 0x3E8 PUSH1 0xC SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP2 SWAP6 SWAP1 SWAP4 SWAP3 PUSH3 0x97 DUP2 PUSH3 0x487 JUMP JUMPDEST PUSH3 0x416 JUMPI JUMPDEST POP POP DUP3 DUP1 MSTORE PUSH1 0x4 DUP1 DUP4 MSTORE DUP6 DUP6 DUP6 KECCAK256 ADD SLOAD PUSH3 0x3DD JUMPI PUSH3 0xBC PUSH3 0x452 JUMP JUMPDEST SWAP4 DUP1 DUP6 MSTORE DUP4 DUP6 ADD SWAP5 DUP8 PUSH1 0x64 SWAP7 DUP8 DUP2 MSTORE DUP4 DUP1 MSTORE DUP5 DUP8 MSTORE DUP9 DUP5 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 DUP1 SLOAD SWAP8 PUSH9 0x10000000000000000 SWAP3 DUP4 DUP11 LT ISZERO PUSH3 0x3CA JUMPI PUSH3 0x106 DUP11 DUP4 DUP12 SWAP13 ADD DUP6 SSTORE PUSH3 0x519 JUMP JUMPDEST SWAP6 SWAP1 DUP1 SLOAD PUSH1 0x0 NOT DUP1 SWAP9 DUP11 SHL SHL NOT AND SWAP1 SSTORE DUP10 MLOAD DUP3 DUP2 MSTORE DUP10 DUP10 DUP3 ADD MSTORE PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP11 DUP12 SWAP2 LOG1 PUSH3 0x278D00 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x164 PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x69 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x19F DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x69 DUP12 DUP3 ADD MSTORE LOG1 PUSH3 0x76A700 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x1DB PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x73 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x216 DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x73 DUP12 DUP3 ADD MSTORE LOG1 PUSH3 0xED4E00 DUP1 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x392 JUMPI PUSH3 0x252 PUSH3 0x452 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP14 DUP12 DUP4 ADD SWAP1 PUSH1 0x82 DUP3 MSTORE DUP5 DUP8 MSTORE DUP6 DUP14 MSTORE DUP7 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP5 SLOAD DUP7 DUP2 LT ISZERO PUSH3 0x37F JUMPI DUP12 SWAP2 PUSH3 0x28D DUP3 DUP16 SWAP4 DUP9 ADD DUP10 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP13 SHL SWAP1 DUP12 DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x82 DUP12 DUP3 ADD MSTORE LOG1 PUSH4 0x1E13380 SWAP9 DUP10 DUP4 MSTORE DUP2 DUP10 MSTORE DUP4 DUP13 DUP5 KECCAK256 ADD SLOAD PUSH3 0x348 JUMPI POP PUSH3 0x2CC PUSH3 0x452 JUMP JUMPDEST DUP10 DUP2 MSTORE DUP4 DUP10 DUP3 ADD PUSH1 0x96 DUP2 MSTORE DUP12 DUP6 MSTORE DUP4 DUP12 MSTORE DUP14 DUP6 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE DUP4 SLOAD SWAP5 DUP6 LT ISZERO PUSH3 0x335 JUMPI POP POP DUP3 DUP10 SWAP8 SWAP7 SWAP5 SWAP3 PUSH3 0x30D SWAP3 PUSH1 0x96 SWAP8 SWAP6 ADD SWAP1 SSTORE PUSH3 0x519 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP2 SHL SWAP2 DUP7 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 MLOAD PUSH2 0x1E68 SWAP1 DUP2 PUSH3 0x5D9 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP4 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP4 ADD MSTORE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP11 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x42E SWAP2 DUP6 DUP1 MSTORE PUSH1 0x2 DUP6 MSTORE DUP7 DUP7 KECCAK256 SWAP2 AND SWAP1 PUSH3 0x54B JUMP JUMPDEST POP CODESIZE DUP1 PUSH3 0x9D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x43C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x437 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x515 JUMPI DUP2 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x535 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH3 0x5D2 JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH3 0x5BE JUMPI PUSH1 0x1 DUP7 ADD DUP1 DUP3 SSTORE DUP7 LT ISZERO PUSH3 0x5AA JUMPI DUP4 PUSH1 0x40 SWAP5 SWAP6 SWAP7 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2B JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH2 0x1B39 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x186F8A4 EQ PUSH2 0x123A JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x11C7 JUMPI DUP2 PUSH4 0x951984D EQ PUSH2 0x11A6 JUMPI DUP2 PUSH4 0x97AAD10 EQ PUSH2 0x1179 JUMPI DUP2 PUSH4 0xCDAC963 EQ PUSH2 0x113E JUMPI DUP2 PUSH4 0x111A9802 EQ PUSH2 0x1024 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xFFA JUMPI DUP2 PUSH4 0x291A3D9E EQ PUSH2 0xFDB JUMPI DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0xDBC JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xD50 JUMPI DUP2 PUSH4 0x31D7A262 EQ PUSH2 0xD18 JUMPI DUP2 PUSH4 0x32298BE1 EQ PUSH2 0xCDF JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xC99 JUMPI DUP2 PUSH4 0x372500AB EQ PUSH2 0xC70 JUMPI DUP2 PUSH4 0x38962186 EQ PUSH2 0xC51 JUMPI DUP2 PUSH4 0x68A34F98 EQ PUSH2 0xBA2 JUMPI DUP2 PUSH4 0x6F4A2CD0 EQ PUSH2 0xAED JUMPI DUP2 PUSH4 0x76520C6D EQ PUSH2 0xABC JUMPI DUP2 PUSH4 0x7B0472F0 EQ PUSH2 0x81C JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0x8686B39A EQ PUSH2 0x7C5 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x784 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x73D JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x67A JUMPI DUP2 PUSH4 0xB3C6CD76 EQ PUSH2 0x634 JUMPI DUP2 PUSH4 0xB5D5B5FA EQ PUSH2 0x5A9 JUMPI DUP2 PUSH4 0xB7FA7CFC EQ PUSH2 0x506 JUMPI DUP2 PUSH4 0xC0D8FD3F EQ PUSH2 0x30A JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0xD1E85A74 EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xD50267EE EQ PUSH2 0x215 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xEE172546 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x20D SWAP2 CALLDATALOAD PUSH2 0x208 PUSH1 0x1 PUSH2 0x1F7 PUSH2 0x127A JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x265 PUSH2 0x135B JUMP JUMPDEST PUSH2 0xBB8 DUP4 GT PUSH2 0x2A0 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x653931A1F8B4E31039939D617FE0C066DC997F98127FD699E126A13766FA64D4 SWAP4 PUSH1 0xC SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50656E616C74792063616E6E6F74206578636565642033302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x502 JUMPI PUSH2 0x327 PUSH2 0x125F JUMP JUMPDEST DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x6 DUP5 MSTORE DUP2 DUP8 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x5 PUSH2 0x358 DUP4 PUSH1 0xFF SWAP4 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x36B SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST SWAP4 PUSH2 0x37D PUSH2 0x36B SWAP2 PUSH2 0x181F JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x362 JUMP JUMPDEST POP POP SWAP1 SWAP2 SWAP4 DUP6 PUSH2 0x394 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP1 PUSH2 0x39E DUP7 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 PUSH2 0x3A8 DUP8 PUSH2 0x1D7F JUMP JUMPDEST SWAP2 PUSH2 0x3BB PUSH2 0x3B5 DUP10 PUSH2 0x1D7F JUMP JUMPDEST SWAP9 PUSH2 0x1D7F JUMP JUMPDEST SWAP5 DUP2 SWAP7 DUP3 JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x6 DUP1 DUP14 MSTORE DUP6 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x496 JUMPI DUP14 SWAP2 DUP13 PUSH1 0xFF DUP16 SWAP4 PUSH2 0x3E7 DUP8 PUSH1 0x5 SWAP3 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x403 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3FE SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST SWAP3 DUP6 DUP14 SWAP4 PUSH2 0x46E DUP8 SWAP16 PUSH1 0x60 DUP16 DUP16 DUP16 DUP16 DUP16 SWAP11 SWAP2 PUSH2 0x43D PUSH2 0x3FE SWAP16 PUSH2 0x48A SWAP16 SWAP1 DUP4 DUP6 DUP16 SWAP8 PUSH2 0x465 SWAP9 PUSH2 0x437 SWAP6 DUP15 SWAP10 MSTORE MSTORE KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP PUSH2 0x19B3 JUMP JUMPDEST SWAP5 PUSH2 0x44A DUP4 DUP8 MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE DUP11 DUP6 ADD SWAP10 PUSH2 0x45B DUP4 DUP13 MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE DUP5 ADD MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE ADD MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE MLOAD DUP9 MSTORE MSTORE PUSH1 0x1 DUP8 DUP8 KECCAK256 ADD SLOAD PUSH2 0x484 DUP3 DUP13 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE PUSH2 0x181F JUMP JUMPDEST SWAP9 SWAP1 POP DUP12 DUP12 DUP15 DUP13 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x4C8 DUP10 DUP16 DUP16 PUSH2 0x4F0 DUP15 SWAP2 PUSH2 0x4E2 DUP14 DUP16 PUSH2 0x4D5 PUSH2 0x4FE SWAP8 PUSH2 0x4B5 PUSH2 0x1DC5 JUMP JUMPDEST DUP5 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xA0 DUP14 MSTORE PUSH1 0xA0 DUP14 ADD SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP2 DUP12 DUP4 SUB SWAP1 DUP13 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 PUSH2 0x52C PUSH2 0x527 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH3 0xA07855 PUSH1 0xE7 SHL DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x59E JUMPI DUP1 SWAP4 PUSH2 0x569 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x597 JUMPI JUMPDEST PUSH2 0x582 DUP2 DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x594 JUMPI POP MLOAD SWAP1 DUP4 DUP1 PUSH2 0x561 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x578 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x5C4 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP5 SWAP1 DUP6 LT ISZERO PUSH2 0x594 JUMPI POP PUSH1 0xC0 SWAP4 PUSH2 0x5F2 SWAP2 PUSH2 0x133F JUMP JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP3 MLOAD PUSH2 0x65F DUP2 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x594 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP3 MLOAD DUP1 DUP6 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP5 DUP5 MSTORE DUP7 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x70E JUMPI POP POP POP DUP2 PUSH2 0x6CA SWAP2 SUB DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x6EE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP9 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x75E PUSH2 0x127A JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7AF SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7ED PUSH2 0x125F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH2 0x82C CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x837 SWAP4 SWAP2 SWAP4 PUSH2 0x17FC JUMP JUMPDEST DUP4 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH2 0x850 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD ISZERO PUSH2 0xA0B JUMPI PUSH2 0x874 CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x9F8 JUMPI DUP6 MSTORE PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x8D2 DUP3 TIMESTAMP PUSH2 0x1754 JUMP JUMPDEST SWAP4 CALLER DUP8 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP8 KECCAK256 SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x8EA DUP3 PUSH2 0x16BE JUMP JUMPDEST DUP8 DUP3 MSTORE DUP4 DUP3 ADD DUP6 DUP2 MSTORE DUP7 DUP4 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP14 DUP9 MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x9E5 JUMPI SWAP1 PUSH2 0x930 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x133F JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x9D3 JUMPI SWAP1 PUSH1 0x5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x977 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH2 0x98F PUSH1 0x9 SLOAD DUP8 PUSH2 0x1761 JUMP JUMPDEST DIV CALLER DUP8 MSTORE PUSH1 0xA DUP3 MSTORE DUP4 DUP8 KECCAK256 SSTORE DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE DUP14 DUP7 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103637B1B590323AB930BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F636B206475726174696F6E20696E6465780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0x4FE SWAP1 PUSH2 0xADA PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP2 SWAP1 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xB86 JUMPI POP CALLVALUE ISZERO PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB4A CALLVALUE PUSH2 0x1B39 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616E6E6F742064697374726962757465203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 SWAP2 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0xBB2 CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x135B JUMP JUMPDEST PUSH2 0xBC7 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH2 0xC19 JUMPI DUP4 SWAP5 DUP3 PUSH32 0x8D0FE207EA42D27EEE4D8EDB2E4D91A2B2A3F055C41EC36E19D6E007428A5468 SWAP6 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x594 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x594 JUMPI PUSH2 0xC89 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xC92 CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0xCB3 PUSH2 0x127A JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xCD0 JUMPI POP PUSH2 0x20D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1459 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 SLOAD DUP4 LT ISZERO PUSH2 0x594 JUMPI POP PUSH2 0xD0A PUSH1 0x20 SWAP3 PUSH2 0x12A6 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD40 PUSH2 0x125F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH2 0xD6C PUSH2 0x127A JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xD84 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xD8E DUP3 DUP5 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0xD96 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xDB4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x150B JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x17FC JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xE00 SWAP1 CALLER DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP SWAP2 PUSH1 0x5 DUP4 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0xF66 JUMPI DUP4 SLOAD SWAP4 DUP6 SWAP2 PUSH2 0xE1D CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xF14 JUMPI JUMPDEST PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xE6F SWAP3 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xE52 DUP2 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xE5E CALLER PUSH2 0x1CDC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP4 DUP7 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP4 MLOAD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF01 JUMPI DUP6 MSTORE PUSH32 0x4416CA74B4C9DD8D6070D91C267A6CF53734C0F343CED0AD02471CCB5417037E SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xEEC SWAP2 PUSH2 0x1794 JUMP JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE ISZERO ISZERO SWAP1 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP5 SWAP2 POP PUSH2 0xE6F PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xF41 PUSH2 0x2710 PUSH2 0xF39 PUSH1 0xC SLOAD DUP9 PUSH2 0x1761 JUMP JUMPDEST DIV DUP1 SWAP7 PUSH2 0x1579 JUMP JUMPDEST SWAP8 PUSH2 0xF5C PUSH1 0x1 SWAP7 PUSH2 0xF54 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1B39 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xE29 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185AD948185B1C9958591E481D5B9B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6E8C2D6CA40D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP3 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0x1034 CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x103C PUSH2 0x135B JUMP JUMPDEST PUSH2 0x1049 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD PUSH2 0x1105 JUMPI DUP3 MLOAD PUSH2 0x1066 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP4 DUP2 MSTORE DUP5 DUP8 MSTORE DUP8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP5 SWAP6 POP PUSH2 0x10E2 PUSH2 0x10CB DUP3 PUSH1 0x1 DUP7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x12A6 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x119F PUSH2 0x119A PUSH2 0x125F JUMP JUMPDEST PUSH2 0x19FE JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x119F PUSH2 0x527 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x120C JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1229 JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1203 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1221 JUMP JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1275 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1275 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1275 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x132B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x131D JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1395 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1395 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1454 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1463 DUP3 DUP3 PUSH2 0x1494 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x146E JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1490 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x159C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1454 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1573 JUMPI DUP5 SLOAD SWAP5 PUSH1 0x1 PUSH1 0x40 SHL DUP7 LT ISZERO PUSH2 0x155F JUMPI DUP4 PUSH2 0x154F PUSH2 0x10CB DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1586 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1685 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x1671 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x165D JUMPI DUP2 DUP2 SUB PUSH2 0x1628 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x1614 JUMPI DUP3 ADD SWAP2 PUSH2 0x15F7 DUP4 DUP4 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1648 PUSH2 0x1638 PUSH2 0x10CB SWAP4 DUP7 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1703 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C696572206D757374206265206174206C656173742031303020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x28317829 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1586 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1586 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177E JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x17E7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17C5 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x180D JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1586 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x185D PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1875 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x18B9 DUP2 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x19B0 JUMPI PUSH2 0x18C7 DUP2 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH2 0x18D0 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x194B JUMPI SWAP2 DUP6 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x5 PUSH2 0x1911 DUP9 PUSH2 0x1925 SWAP11 SWAP8 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x192A JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x181F JUMP JUMPDEST PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x193A SWAP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE CODESIZE DUP2 DUP2 DUP1 DUP1 PUSH2 0x191B JUMP JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 PUSH1 0x20 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 PUSH2 0x19A7 PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP10 DUP11 DUP4 MSTORE PUSH1 0xB DUP10 MSTORE DUP3 PUSH1 0x40 DUP2 KECCAK256 SSTORE GAS CALL PUSH2 0x19A1 PUSH2 0x182E JUMP JUMPDEST POP PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19C0 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x1B33 JUMPI SWAP1 DUP2 PUSH2 0x1A1A PUSH2 0x1A2F SWAP4 PUSH2 0x1CDC JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x1A57 PUSH1 0x40 SWAP5 DUP6 DUP6 KECCAK256 SLOAD SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 PUSH2 0x1A62 DUP5 SWAP7 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1A81 JUMPI JUMPDEST POP POP POP PUSH1 0xB SWAP1 PUSH2 0x1A7E SWAP6 SWAP7 DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x1754 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP8 DUP5 JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x437 DUP3 PUSH2 0x1AA6 SWAP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO PUSH2 0x1AC0 JUMPI JUMPDEST POP PUSH2 0x1ABB SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST DUP1 SWAP9 SWAP2 SWAP9 MLOAD DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x165D JUMPI SWAP2 PUSH1 0x64 PUSH2 0x1B10 PUSH2 0x1B17 SWAP4 DUP10 DUP16 PUSH2 0x1AF9 PUSH2 0x1AF3 DUP13 SWAP3 PUSH2 0x1ABB SWAP11 PUSH2 0x1774 JUMP JUMPDEST DUP12 PUSH2 0x1761 JUMP JUMPDEST DIV SWAP2 ADD MLOAD DUP12 MSTORE PUSH1 0x4 DUP11 MSTORE PUSH1 0x1 DUP13 DUP13 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP8 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP SWAP1 SWAP9 POP DUP4 SWAP3 POP PUSH2 0x1A7E SWAP2 POP PUSH1 0xB SWAP1 POP PUSH2 0x1A69 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1BB1 JUMPI PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x1586 JUMPI PUSH32 0x6D1C76D614228B523BAA4DCD9539E2C713B54FF4AB3FF2D1627E7F6CD32BE442 SWAP2 PUSH2 0x1B96 PUSH2 0x1B8E PUSH1 0x20 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1BA5 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x1C3A JUMPI JUMPDEST POP ISZERO PUSH2 0x1C00 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH2 0x1BFE SWAP6 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 KECCAK256 SLOAD AND GAS CALL PUSH2 0x19A1 PUSH2 0x182E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2061646D696E20617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2404341F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1C9F JUMPI JUMPDEST POP POP SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1C7A JUMPI POP PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C95 JUMPI PUSH2 0x1C90 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x1BBF JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CD5 JUMPI JUMPDEST PUSH2 0x1CB3 DUP2 DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x594 JUMPI POP CODESIZE DUP1 PUSH2 0x1C69 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1D5C JUMPI PUSH1 0x5 PUSH2 0x1D12 DUP8 PUSH1 0xFF SWAP4 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1D2E JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D29 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST SWAP4 PUSH2 0x1D52 SWAP4 DUP2 SWAP7 SWAP4 PUSH2 0x1D4A SWAP4 PUSH2 0x1D29 SWAP8 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x1D1C JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16A8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D89 DUP3 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x1D96 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1DA7 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D67 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 SWAP2 DUP3 DUP3 ADD SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E18 JUMPI POP POP POP PUSH2 0x1BFE SWAP3 POP SUB DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E02 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x94436AD6DF262EF197283858A5B5AD9409470FFD6B26D52AC784A81678C12164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"676:14756:42:-:0;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;-1:-1:-1;;;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;676:14756:42;;;1970:4;;676:14756;2575:30;676:14756;;-1:-1:-1;;;;;;676:14756:42;-1:-1:-1;;;;;676:14756:42;;;;;;;;-1:-1:-1;;676:14756:42;2865:31:2;676:14756:42;2865:31:2;:::i;:::-;2906:69;;-1:-1:-1;676:14756:42;;;;;3701:12;676:14756;;;;;;;3701:43;676:14756;;;;;:::i;:::-;;;;;3821:111;;;2767:3;;;676:14756;;;;;;;;;;;;;;;;;;;;;3951:13;676:14756;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4007:48;;;;;2835:7;676:14756;;;;;;;;;;3701:43;676:14756;;;;;:::i;:::-;;;;3821:111;;;;;676:14756;2844:3;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2844:3;676:14756;;;;4007:48;2904:7;676:14756;;;;;;;;;;3701:43;676:14756;;;;;:::i;:::-;;;;3821:111;;;;;676:14756;2913:3;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2913:3;676:14756;;;;4007:48;2973:8;676:14756;;;;;;;;;;3701:43;676:14756;;;;;:::i;:::-;;;;3821:111;;;;;676:14756;2983:3;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2983:3;676:14756;;;;4007:48;3043:8;676:14756;;;;;;;;;;;3701:43;676:14756;;;;;;:::i;:::-;;;;3821:111;;;;3053:3;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3053:3;676:14756;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4007:48;676:14756;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;2767:3;;676:14756;2906:69:2;8382:50:39;676:14756:42;;;;2933:12:2;676:14756:42;;;;;;;8382:50:39;;:::i;:::-;;2906:69:2;;;;676:14756:42;-1:-1:-1;676:14756:42;;;;;;-1:-1:-1;676:14756:42;;;;;-1:-1:-1;676:14756:42;;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;676:14756:42;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;676:14756:42;2061:21:26;676:14756:42;;;;;;;;;;2061:21:26;;676:14756:42;;;;;;;;2954:6:0;676:14756:42;;;;;;;;;;;;;2954:6:0;676:14756:42;;;;;;;;735:10:22;6370:40:0;;;;;2954:6;6424:11;:::o;6272:217::-;6466:12;;:::o;676:14756:42:-;3951:13;676:14756;;;;;;3951:13;-1:-1:-1;676:14756:42;;-1:-1:-1;676:14756:42;;;-1:-1:-1;676:14756:42;:::o;:::-;;;;;;;;;;;;2241:406:39;;;4360:14;;;-1:-1:-1;676:14756:42;;;;;;;;;;;4360:26:39;2320:321;676:14756:42;;;;;;;;;;;;4360:14:39;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:14:39;2576:11;:::o;676:14756:42:-;-1:-1:-1;;;676:14756:42;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;2320:321:39;-1:-1:-1;2618:12:39;-1:-1:-1;;2618:12:39:o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4703,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21789":{"entryPoint":4730,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":4752,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":4875,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":7551,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":7527,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":5972,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":6004,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":5985,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5497,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":7621,"id":null,"parameterSlots":0,"returnSlots":1},"extract_returndata":{"entryPoint":6190,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5850,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_21787":{"entryPoint":5772,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_21799":{"entryPoint":5822,"id":null,"parameterSlots":1,"returnSlots":0},"fun__revokeRole":{"entryPoint":5209,"id":535,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":5387,"id":9863,"parameterSlots":2,"returnSlots":1},"fun_calculatePendingRewards":{"entryPoint":6654,"id":11972,"parameterSlots":1,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":6036,"id":2826,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":5043,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_21786":{"entryPoint":4955,"id":93,"parameterSlots":0,"returnSlots":0},"fun_distributeRewards":{"entryPoint":6969,"id":12091,"parameterSlots":1,"returnSlots":0},"fun_getTotalStakedByUser":{"entryPoint":7388,"id":12139,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":5081,"id":256,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":6140,"id":3348,"parameterSlots":0,"returnSlots":0},"fun_remove":{"entryPoint":5532,"id":9947,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":5268,"id":294,"parameterSlots":2,"returnSlots":1},"fun_updateAndClaimRewards":{"entryPoint":6320,"id":11854,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":6175,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":7601,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_UserStake":{"entryPoint":6579,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5884,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c7c2":{"entryPoint":6254,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_UserStake_dyn":{"entryPoint":4927,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":4851,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_21788":{"entryPoint":4774,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561002b575b505050361561002057600080fd5b61002934611b39565b005b600092833560e01c9182630186f8a41461123a5750816301ffc9a7146111c75781630951984d146111a6578163097aad10146111795781630cdac9631461113e578163111a980214611024578163248a9ca314610ffa578163291a3d9e14610fdb5781632e17de7814610dbc5781632f2ff15d14610d5057816331d7a26214610d1857816332298be114610cdf57816336568abe14610c99578163372500ab14610c705781633896218614610c5157816368a34f9814610ba25781636f4a2cd014610aed57816376520c6d14610abc5781637b0472f01461081c578163817b1cd2146107fd5781638686b39a146107c55781639010d07c1461078457816391d148541461073d578163a217fddf14610722578163a3246ad31461067a578163b3c6cd7614610634578163b5d5b5fa146105a9578163b7fa7cfc14610506578163c0d8fd3f1461030a578163ca15c873146102e2578163d1e85a7414610246578163d50267ee14610215578163d547741f146101d2575063ee172546146101b15780610012565b346101ce57816003193601126101ce576020906008549051908152f35b5080fd5b9190503461021157806003193601126102115761020d913561020860016101f761127a565b9383875281602052862001546113b3565b611459565b5080f35b8280fd5b9050346102115760203660031901126102115791828293358252602052206001815491015482519182526020820152f35b919050346102115760203660031901126102115781359161026561135b565b610bb883116102a05750816020917f653931a1f8b4e31039939d617fe0c066dc997f98127fd699e126a13766fa64d493600c5551908152a180f35b6020606492519162461bcd60e51b8352820152601960248201527f50656e616c74792063616e6e6f742065786365656420333025000000000000006044820152fd5b9050346102115760203660031901126102115760209282913581526002845220549051908152f35b91905034610211576020806003193601126105025761032761125f565b84926001600160a01b0390911690835b8287526006845281872080548210156103855760056103588360ff9361133f565b5001541615610370575b61036b9061181f565b610337565b9361037d61036b9161181f565b949050610362565b50509091938561039485611d7f565b9061039e86611d7f565b936103a887611d7f565b916103bb6103b589611d7f565b98611d7f565b948196825b8984526006808d528585208054831015610496578d918c60ff8f936103e78760059261133f565b5001541615610403575b505050506103fe9061181f565b6103c0565b92858d9361046e879f60608f8f8f8f8f9a9161043d6103fe9f61048a9f9083858f9761046598610437958e9952522061133f565b506119b3565b9461044a83875192611db1565b528a85019961045b838c5192611db1565b5284015192611db1565b52015192611db1565b525188525260018787200154610484828c611db1565b5261181f565b9890508b8b8e8c6103f1565b6104c8898f8f6104f08e916104e28d8f6104d56104fe976104b5611dc5565b84519b8c9b60a08d5260a08d019061130b565b918b8303908c015261130b565b918883039089015261130b565b90858203606087015261130b565b90838203608085015261130b565b0390f35b8380fd5b8383346101ce5760209283600319360112610211578361052c61052761125f565b611cdc565b600354845162a0785560e71b815293840191909152829060249082906001600160a01b03165afa92831561059e578093610569575b505051908152f35b909192508382813d8311610597575b61058281836116da565b81010312610594575051908380610561565b80fd5b503d610578565b8251903d90823e3d90fd5b919050346102115780600319360112610211576105c461125f565b6001600160a01b03168352600660205280832080546024359490851015610594575060c0936105f29161133f565b5080549260018201549260028301549060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b9050346102115760203660031901126102115791828293358252602052206020825161065f8161168c565b60018354938483520154918291015282519182526020820152f35b9050823461059457602091826003193601126101ce5792919235815260028352818120908251808584549182815201908194845286842090845b81811061070e57505050816106ca9103826116da565b83519485948186019282875251809352850193925b8281106106ee57505050500390f35b83516001600160a01b0316855286955093810193928101926001016106df565b8254845292880192600192830192016106b4565b5050346101ce57816003193601126101ce5751908152602090f35b9050346102115781600319360112610211578160209360ff9261075e61127a565b90358252600186528282206001600160a01b039091168252855220549151911615158152f35b9050346102115781600319360112610211576020926107af91358152600284528260243591206112f3565b905491519160018060a01b039160031b1c168152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b036107ed61125f565b168152600a845220549051908152f35b5050346101ce57816003193601126101ce576020906007549051908152f35b9050346102115761082c36611290565b6108379391936117fc565b8315610a8857600554811015610a4557610850906112a6565b90549060031b1c80855260208381526001838720015415610a0b57610874336118b0565b60035483516323b872dd60e01b8382015233602482015230604482015260648082018890528152906001600160a01b031660a0820167ffffffffffffffff8111838210176109f85785526108c89190611794565b6108d28242611754565b9333875260068252838720908451906108ea826116be565b8782528382018581528683014281526060840190898252608085019242845260a08601968d8852805490600160401b8210156109e557906109309160018201815561133f565b9690966109d3579060059695949392915186555160018601555160028501555160038401555190820155019051151560ff8019835416911617905561097785600754611754565b600755670de0b6b3a764000061098f60095487611761565b04338752600a82528387205582519485528401528201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a26001815580f35b634e487b7160e01b8e528d865260248efd5b634e487b7160e01b8f526041875260248ffd5b634e487b7160e01b895260418752602489fd5b8360649184519162461bcd60e51b8352820152601560248201527424b73b30b634b2103637b1b590323ab930ba34b7b760591b6044820152fd5b815162461bcd60e51b8152602081850152601b60248201527f496e76616c6964206c6f636b206475726174696f6e20696e64657800000000006044820152606490fd5b815162461bcd60e51b8152602081850152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b5050346101ce57816003193601126101ce576104fe90610ada611dc5565b905191829160208352602083019061130b565b91905082600319360112610211577f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea808452600160205281842033855260205260ff828520541615610b8657503415610b4d5782610b4a34611b39565b80f35b906020606492519162461bcd60e51b83528201526013602482015272043616e6e6f742064697374726962757465203606c1b6044820152fd5b60449291519163e2517d3f60e01b835233908301526024820152fd5b8383346101ce57610bb236611290565b610bba61135b565b610bc760648210156116fc565b818452846020526001838520015415610c19578394827f8d0fe207ea42d27eee4d8edb2e4d91a2b2a3f055c41ec36e19d6e007428a54689552602052806001848720015582519182526020820152a180f35b825162461bcd60e51b81526020818701526012602482015271151a595c88191bd95cdb89dd08195e1a5cdd60721b6044820152606490fd5b5050346101ce57816003193601126101ce576020906009549051908152f35b8334610594578060031936011261059457610c896117fc565b610c92336118b0565b6001815580f35b8383346101ce57806003193601126101ce57610cb361127a565b90336001600160a01b03831603610cd0575061020d919235611459565b5163334bd91960e11b81528390fd5b9050346102115760203660031901126102115735916005548310156105945750610d0a6020926112a6565b91905490519160031b1c8152f35b5050346101ce5760203660031901126101ce5760209181906001600160a01b03610d4061125f565b168152600b845220549051908152f35b9050346102115781600319360112610211573590610d6c61127a565b908284526001602052610d84600182862001546113b3565b610d8e82846113d9565b610d96578380f35b9183526002602052908220610db4916001600160a01b03169061150b565b503880808380f35b8383346101ce5760209081600319360112610211578335610ddb6117fc565b3384526006835281842054811015610fa257610e00903385526006845282852061133f565b50916005830160ff815416610f66578354938591610e1d336118b0565b60038201544210610f14575b610e66670de0b6b3a764000092610e6f92600160ff19825416179055610e528154600754611579565b600755610e5e33611cdc565b905490611579565b60095490611761565b04338652600a83528386205560018060a01b036003541683519063a9059cbb60e01b84830152336024830152856044830152604482526080820182811067ffffffffffffffff821117610f015785527f4416ca74b4c9dd8d6070d91c267a6cf53734c0f343ced0ad02471ccb5417037e94939291610eec91611794565b82519485521515908401523392a26001815580f35b634e487b7160e01b885260418952602488fd5b949150610e6f610e66670de0b6b3a764000092610f41612710610f39600c5488611761565b048096611579565b97610f5c600196610f5481600754611579565b600755611b39565b9250925050610e29565b825162461bcd60e51b8152808701839052601660248201527514dd185ad948185b1c9958591e481d5b9b1bd8dad95960521b6044820152606490fd5b815162461bcd60e51b81528086018490526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b5050346101ce57816003193601126101ce57602090600c549051908152f35b90503461021157602036600319011261021157816020936001923581528285522001549051908152f35b8383346101ce5761103436611290565b61103c61135b565b61104960648210156116fc565b81845284602052600183852001546111055782516110668161168c565b828152600160208201838152848752876020528587209251835551910155600554600160401b8110156110f2577f092f3e4d0effe56ce357fb92c46768da5f27170b419cf71b53cc40f36f28fe279495506110e26110cb8260018694016005556112a6565b819391549060031b91821b91600019901b19161790565b905582519182526020820152a180f35b634e487b7160e01b855260418652602485fd5b825162461bcd60e51b815260208187015260136024820152725469657220616c72656164792065786973747360681b6044820152606490fd5b5050346101ce57816003193601126101ce57602090517f59c7a9ef9a56707d87d116a5d27496afee2604c70b902ac2c4dbdcb68f36f2ea8152f35b5050346101ce5760203660031901126101ce5760209061119f61119a61125f565b6119fe565b9051908152f35b5050346101ce5760203660031901126101ce5760209061119f61052761125f565b90503461021157602036600319011261021157359063ffffffff60e01b82168092036102115760209250635a05180f60e01b821491821561120c575b50519015158152f35b909150637965db0b60e01b8114908115611229575b509038611203565b6301ffc9a760e01b14905038611221565b8490346101ce57816003193601126101ce576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361127557565b600080fd5b602435906001600160a01b038216820361127557565b6040906003190112611275576004359060243590565b6005548110156112dd5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156112dd5760005260206000200190600090565b90815180825260208080930193019160005b82811061132b575050505090565b83518552938101939281019260010161131d565b80548210156112dd576000526006602060002091020190600090565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16156113955750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600160205260406000203360005260205260ff60406000205416156113955750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146114545780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6114638282611494565b918261146e57505090565b600091825260026020526040909120611490916001600160a01b03169061159c565b5090565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416600014611454578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9190600183016000908282528060205260408220541560001461157357845494600160401b86101561155f578361154f6110cb886001604098999a018555846112f3565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161158657565b634e487b7160e01b600052601160045260246000fd5b9060018201906000928184528260205260408420549081151560001461168557600019918083018181116116715782549084820191821161165d57818103611628575b50505080548015611614578201916115f783836112f3565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6116486116386110cb93866112f3565b90549060031b1c928392866112f3565b905586528460205260408620553880806115df565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b6040810190811067ffffffffffffffff8211176116a857604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176116a857604052565b90601f8019910116810190811067ffffffffffffffff8211176116a857604052565b1561170357565b60405162461bcd60e51b8152602060048201526024808201527f4d756c7469706c696572206d757374206265206174206c6561737420313030206044820152632831782960e01b6064820152608490fd5b9190820180921161158657565b8181029291811591840414171561158657565b811561177e570490565b634e487b7160e01b600052601260045260246000fd5b906000602091828151910182855af1156117f0576000513d6117e757506001600160a01b0381163b155b6117c55750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156117be565b6040513d6000823e3d90fd5b60026000541461180d576002600055565b604051633ee5aeb560e01b8152600490fd5b60001981146115865760010190565b3d15611869573d9067ffffffffffffffff82116116a8576040519161185d601f8201601f1916602001846116da565b82523d6000602084013e565b606090565b1561187557565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6118b981611cdc565b156119b0576118c7816119fe565b806118d0575050565b909160005b6001600160a01b038416600081815260066020818152604092839020805486101561194b57918594939160ff6005611911886119259a9761133f565b500154161561192a575b505050505061181f565b6118d5565b61193a946000525260002061133f565b50600442910155388181808061191b565b505050505050919060207ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe916119a760008080808560018060a01b038a16998a8352600b89528260408120555af16119a161182e565b5061186e565b604051908152a2565b50565b906040516119c0816116be565b60a060ff6005839580548552600181015460208601526002810154604086015260038101546060860152600481015460808601520154161515910152565b611a0781611cdc565b15611b33579081611a1a611a2f93611cdc565b670de0b6b3a764000093849160095490611761565b0460018060a01b03821693600090858252602090600a8252611a576040948585205490611579565b90611a628496611cdc565b9182611a81575b505050600b90611a7e95968352522054611754565b90565b909197845b818652600685528686208054821015611b1e5761043782611aa69261133f565b60a081015115611ac0575b50611abb9061181f565b611a86565b80989198518581029080820487149015171561165d57916064611b10611b1793898f611af9611af38c92611abb9a611774565b8b611761565b049101518b5260048a5260018c8c20015490611761565b0490611754565b9790611ab1565b50909850839250611a7e9150600b9050611a69565b50600090565b60075415611bb157670de0b6b3a7640000808202908282041482151715611586577f6d1c76d614228b523baa4dcd9539e2c713b54ff4ab3ff2d1627e7f6cd32be44291611b96611b8e60209360075490611774565b600954611754565b600955611ba581600854611754565b600855604051908152a1565b6000805b6101008110611c3a575b5015611c00576000805260026020526040600020908154156112dd57600080808093611bfe95825260018060a01b036020832054165af16119a161182e565b565b60405162461bcd60e51b81526020600482015260126024820152714e6f2061646d696e20617661696c61626c6560701b6044820152606490fd5b604051632404341f60e21b8152600060048201526024810182905260208082604481305afa9160009183611c9f575b50509015600014611c7a5750611bbf565b6001600160a01b0316611c9557611c909061181f565b611bb5565b5050600138611bbf565b81813d8311611cd5575b611cb381836116da565b810103126101ce5751906001600160a01b038216820361059457503880611c69565b503d611ca9565b6000805b60018060a01b0383168060005260066020818152604092836000208054861015611d5c576005611d128760ff9361133f565b5001541615611d2e575b50505050611d299061181f565b611ce0565b93611d5293819693611d4a93611d29976000525260002061133f565b505490611754565b9190388080611d1c565b505050505050905090565b67ffffffffffffffff81116116a85760051b60200190565b90611d8982611d67565b611d9660405191826116da565b8281528092611da7601f1991611d67565b0190602036910137565b80518210156112dd5760209160051b010190565b60405190600554808352826020918282019060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000905b828210611e1857505050611bfe925003836116da565b855484526001958601958895509381019390910190611e0256fea26469706673582212207f94436ad6df262ef197283858a5b5ad9409470ffd6b26d52ac784a81678c12164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2B JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH2 0x1B39 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x186F8A4 EQ PUSH2 0x123A JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x11C7 JUMPI DUP2 PUSH4 0x951984D EQ PUSH2 0x11A6 JUMPI DUP2 PUSH4 0x97AAD10 EQ PUSH2 0x1179 JUMPI DUP2 PUSH4 0xCDAC963 EQ PUSH2 0x113E JUMPI DUP2 PUSH4 0x111A9802 EQ PUSH2 0x1024 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0xFFA JUMPI DUP2 PUSH4 0x291A3D9E EQ PUSH2 0xFDB JUMPI DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0xDBC JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0xD50 JUMPI DUP2 PUSH4 0x31D7A262 EQ PUSH2 0xD18 JUMPI DUP2 PUSH4 0x32298BE1 EQ PUSH2 0xCDF JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0xC99 JUMPI DUP2 PUSH4 0x372500AB EQ PUSH2 0xC70 JUMPI DUP2 PUSH4 0x38962186 EQ PUSH2 0xC51 JUMPI DUP2 PUSH4 0x68A34F98 EQ PUSH2 0xBA2 JUMPI DUP2 PUSH4 0x6F4A2CD0 EQ PUSH2 0xAED JUMPI DUP2 PUSH4 0x76520C6D EQ PUSH2 0xABC JUMPI DUP2 PUSH4 0x7B0472F0 EQ PUSH2 0x81C JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0x7FD JUMPI DUP2 PUSH4 0x8686B39A EQ PUSH2 0x7C5 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x784 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x73D JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0xA3246AD3 EQ PUSH2 0x67A JUMPI DUP2 PUSH4 0xB3C6CD76 EQ PUSH2 0x634 JUMPI DUP2 PUSH4 0xB5D5B5FA EQ PUSH2 0x5A9 JUMPI DUP2 PUSH4 0xB7FA7CFC EQ PUSH2 0x506 JUMPI DUP2 PUSH4 0xC0D8FD3F EQ PUSH2 0x30A JUMPI DUP2 PUSH4 0xCA15C873 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0xD1E85A74 EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xD50267EE EQ PUSH2 0x215 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xEE172546 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x20D SWAP2 CALLDATALOAD PUSH2 0x208 PUSH1 0x1 PUSH2 0x1F7 PUSH2 0x127A JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x265 PUSH2 0x135B JUMP JUMPDEST PUSH2 0xBB8 DUP4 GT PUSH2 0x2A0 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x653931A1F8B4E31039939D617FE0C066DC997F98127FD699E126A13766FA64D4 SWAP4 PUSH1 0xC SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50656E616C74792063616E6E6F74206578636565642033302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x502 JUMPI PUSH2 0x327 PUSH2 0x125F JUMP JUMPDEST DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x6 DUP5 MSTORE DUP2 DUP8 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x5 PUSH2 0x358 DUP4 PUSH1 0xFF SWAP4 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x36B SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST SWAP4 PUSH2 0x37D PUSH2 0x36B SWAP2 PUSH2 0x181F JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x362 JUMP JUMPDEST POP POP SWAP1 SWAP2 SWAP4 DUP6 PUSH2 0x394 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP1 PUSH2 0x39E DUP7 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 PUSH2 0x3A8 DUP8 PUSH2 0x1D7F JUMP JUMPDEST SWAP2 PUSH2 0x3BB PUSH2 0x3B5 DUP10 PUSH2 0x1D7F JUMP JUMPDEST SWAP9 PUSH2 0x1D7F JUMP JUMPDEST SWAP5 DUP2 SWAP7 DUP3 JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x6 DUP1 DUP14 MSTORE DUP6 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x496 JUMPI DUP14 SWAP2 DUP13 PUSH1 0xFF DUP16 SWAP4 PUSH2 0x3E7 DUP8 PUSH1 0x5 SWAP3 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x403 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3FE SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST SWAP3 DUP6 DUP14 SWAP4 PUSH2 0x46E DUP8 SWAP16 PUSH1 0x60 DUP16 DUP16 DUP16 DUP16 DUP16 SWAP11 SWAP2 PUSH2 0x43D PUSH2 0x3FE SWAP16 PUSH2 0x48A SWAP16 SWAP1 DUP4 DUP6 DUP16 SWAP8 PUSH2 0x465 SWAP9 PUSH2 0x437 SWAP6 DUP15 SWAP10 MSTORE MSTORE KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP PUSH2 0x19B3 JUMP JUMPDEST SWAP5 PUSH2 0x44A DUP4 DUP8 MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE DUP11 DUP6 ADD SWAP10 PUSH2 0x45B DUP4 DUP13 MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE DUP5 ADD MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE ADD MLOAD SWAP3 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE MLOAD DUP9 MSTORE MSTORE PUSH1 0x1 DUP8 DUP8 KECCAK256 ADD SLOAD PUSH2 0x484 DUP3 DUP13 PUSH2 0x1DB1 JUMP JUMPDEST MSTORE PUSH2 0x181F JUMP JUMPDEST SWAP9 SWAP1 POP DUP12 DUP12 DUP15 DUP13 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x4C8 DUP10 DUP16 DUP16 PUSH2 0x4F0 DUP15 SWAP2 PUSH2 0x4E2 DUP14 DUP16 PUSH2 0x4D5 PUSH2 0x4FE SWAP8 PUSH2 0x4B5 PUSH2 0x1DC5 JUMP JUMPDEST DUP5 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xA0 DUP14 MSTORE PUSH1 0xA0 DUP14 ADD SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP2 DUP12 DUP4 SUB SWAP1 DUP13 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 PUSH2 0x52C PUSH2 0x527 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH3 0xA07855 PUSH1 0xE7 SHL DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x59E JUMPI DUP1 SWAP4 PUSH2 0x569 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x597 JUMPI JUMPDEST PUSH2 0x582 DUP2 DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x594 JUMPI POP MLOAD SWAP1 DUP4 DUP1 PUSH2 0x561 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x578 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x5C4 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP5 SWAP1 DUP6 LT ISZERO PUSH2 0x594 JUMPI POP PUSH1 0xC0 SWAP4 PUSH2 0x5F2 SWAP2 PUSH2 0x133F JUMP JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI SWAP2 DUP3 DUP3 SWAP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP3 MLOAD PUSH2 0x65F DUP2 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x594 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP3 MLOAD DUP1 DUP6 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP5 DUP5 MSTORE DUP7 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x70E JUMPI POP POP POP DUP2 PUSH2 0x6CA SWAP2 SUB DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x6EE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP9 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x75E PUSH2 0x127A JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7AF SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7ED PUSH2 0x125F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH2 0x82C CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x837 SWAP4 SWAP2 SWAP4 PUSH2 0x17FC JUMP JUMPDEST DUP4 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH2 0x850 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP6 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD ISZERO PUSH2 0xA0B JUMPI PUSH2 0x874 CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x9F8 JUMPI DUP6 MSTORE PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x8D2 DUP3 TIMESTAMP PUSH2 0x1754 JUMP JUMPDEST SWAP4 CALLER DUP8 MSTORE PUSH1 0x6 DUP3 MSTORE DUP4 DUP8 KECCAK256 SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x8EA DUP3 PUSH2 0x16BE JUMP JUMPDEST DUP8 DUP3 MSTORE DUP4 DUP3 ADD DUP6 DUP2 MSTORE DUP7 DUP4 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP7 DUP14 DUP9 MSTORE DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x9E5 JUMPI SWAP1 PUSH2 0x930 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x133F JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x9D3 JUMPI SWAP1 PUSH1 0x5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x977 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH2 0x98F PUSH1 0x9 SLOAD DUP8 PUSH2 0x1761 JUMP JUMPDEST DIV CALLER DUP8 MSTORE PUSH1 0xA DUP3 MSTORE DUP4 DUP8 KECCAK256 SSTORE DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE DUP14 DUP7 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103637B1B590323AB930BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F636B206475726174696F6E20696E6465780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0x4FE SWAP1 PUSH2 0xADA PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x130B JUMP JUMPDEST SWAP2 SWAP1 POP DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xB86 JUMPI POP CALLVALUE ISZERO PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB4A CALLVALUE PUSH2 0x1B39 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616E6E6F742064697374726962757465203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 SWAP2 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0xBB2 CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x135B JUMP JUMPDEST PUSH2 0xBC7 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH2 0xC19 JUMPI DUP4 SWAP5 DUP3 PUSH32 0x8D0FE207EA42D27EEE4D8EDB2E4D91A2B2A3F055C41EC36E19D6E007428A5468 SWAP6 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151A595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x594 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x594 JUMPI PUSH2 0xC89 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xC92 CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH2 0xCB3 PUSH2 0x127A JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xCD0 JUMPI POP PUSH2 0x20D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x1459 JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 SLOAD DUP4 LT ISZERO PUSH2 0x594 JUMPI POP PUSH2 0xD0A PUSH1 0x20 SWAP3 PUSH2 0x12A6 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD40 PUSH2 0x125F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH2 0xD6C PUSH2 0x127A JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xD84 PUSH1 0x1 DUP3 DUP7 KECCAK256 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xD8E DUP3 DUP5 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0xD96 JUMPI DUP4 DUP1 RETURN JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 PUSH2 0xDB4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x150B JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI DUP4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x17FC JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xE00 SWAP1 CALLER DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP SWAP2 PUSH1 0x5 DUP4 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0xF66 JUMPI DUP4 SLOAD SWAP4 DUP6 SWAP2 PUSH2 0xE1D CALLER PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xF14 JUMPI JUMPDEST PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xE6F SWAP3 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xE52 DUP2 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xE5E CALLER PUSH2 0x1CDC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP4 DUP7 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP4 MLOAD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF01 JUMPI DUP6 MSTORE PUSH32 0x4416CA74B4C9DD8D6070D91C267A6CF53734C0F343CED0AD02471CCB5417037E SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xEEC SWAP2 PUSH2 0x1794 JUMP JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE ISZERO ISZERO SWAP1 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP5 SWAP2 POP PUSH2 0xE6F PUSH2 0xE66 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0xF41 PUSH2 0x2710 PUSH2 0xF39 PUSH1 0xC SLOAD DUP9 PUSH2 0x1761 JUMP JUMPDEST DIV DUP1 SWAP7 PUSH2 0x1579 JUMP JUMPDEST SWAP8 PUSH2 0xF5C PUSH1 0x1 SWAP7 PUSH2 0xF54 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1B39 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xE29 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185AD948185B1C9958591E481D5B9B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6E8C2D6CA40D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP3 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1CE JUMPI PUSH2 0x1034 CALLDATASIZE PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x103C PUSH2 0x135B JUMP JUMPDEST PUSH2 0x1049 PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP5 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 DUP6 KECCAK256 ADD SLOAD PUSH2 0x1105 JUMPI DUP3 MLOAD PUSH2 0x1066 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP4 DUP2 MSTORE DUP5 DUP8 MSTORE DUP8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH32 0x92F3E4D0EFFE56CE357FB92C46768DA5F27170B419CF71B53CC40F36F28FE27 SWAP5 SWAP6 POP PUSH2 0x10E2 PUSH2 0x10CB DUP3 PUSH1 0x1 DUP7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x12A6 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5469657220616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x59C7A9EF9A56707D87D116A5D27496AFEE2604C70B902AC2C4DBDCB68F36F2EA DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x119F PUSH2 0x119A PUSH2 0x125F JUMP JUMPDEST PUSH2 0x19FE JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x20 SWAP1 PUSH2 0x119F PUSH2 0x527 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x211 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x120C JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1229 JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1203 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1221 JUMP JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1275 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1275 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1275 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x132B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x131D JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1395 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1395 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1454 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1463 DUP3 DUP3 PUSH2 0x1494 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x146E JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1490 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x159C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1454 JUMPI DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1573 JUMPI DUP5 SLOAD SWAP5 PUSH1 0x1 PUSH1 0x40 SHL DUP7 LT ISZERO PUSH2 0x155F JUMPI DUP4 PUSH2 0x154F PUSH2 0x10CB DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1586 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x1685 JUMPI PUSH1 0x0 NOT SWAP2 DUP1 DUP4 ADD DUP2 DUP2 GT PUSH2 0x1671 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x165D JUMPI DUP2 DUP2 SUB PUSH2 0x1628 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x1614 JUMPI DUP3 ADD SWAP2 PUSH2 0x15F7 DUP4 DUP4 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x1648 PUSH2 0x1638 PUSH2 0x10CB SWAP4 DUP7 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x12F3 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1703 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C696572206D757374206265206174206C656173742031303020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x28317829 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1586 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1586 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177E JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x17E7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17C5 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x180D JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1586 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x185D PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1875 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x18B9 DUP2 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x19B0 JUMPI PUSH2 0x18C7 DUP2 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH2 0x18D0 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x194B JUMPI SWAP2 DUP6 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x5 PUSH2 0x1911 DUP9 PUSH2 0x1925 SWAP11 SWAP8 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x192A JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x181F JUMP JUMPDEST PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x193A SWAP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE CODESIZE DUP2 DUP2 DUP1 DUP1 PUSH2 0x191B JUMP JUMPDEST POP POP POP POP POP POP SWAP2 SWAP1 PUSH1 0x20 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 PUSH2 0x19A7 PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP10 DUP11 DUP4 MSTORE PUSH1 0xB DUP10 MSTORE DUP3 PUSH1 0x40 DUP2 KECCAK256 SSTORE GAS CALL PUSH2 0x19A1 PUSH2 0x182E JUMP JUMPDEST POP PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x19C0 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x1B33 JUMPI SWAP1 DUP2 PUSH2 0x1A1A PUSH2 0x1A2F SWAP4 PUSH2 0x1CDC JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 DUP5 SWAP2 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE PUSH2 0x1A57 PUSH1 0x40 SWAP5 DUP6 DUP6 KECCAK256 SLOAD SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 PUSH2 0x1A62 DUP5 SWAP7 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1A81 JUMPI JUMPDEST POP POP POP PUSH1 0xB SWAP1 PUSH2 0x1A7E SWAP6 SWAP7 DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x1754 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP8 DUP5 JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x437 DUP3 PUSH2 0x1AA6 SWAP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO PUSH2 0x1AC0 JUMPI JUMPDEST POP PUSH2 0x1ABB SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST DUP1 SWAP9 SWAP2 SWAP9 MLOAD DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x165D JUMPI SWAP2 PUSH1 0x64 PUSH2 0x1B10 PUSH2 0x1B17 SWAP4 DUP10 DUP16 PUSH2 0x1AF9 PUSH2 0x1AF3 DUP13 SWAP3 PUSH2 0x1ABB SWAP11 PUSH2 0x1774 JUMP JUMPDEST DUP12 PUSH2 0x1761 JUMP JUMPDEST DIV SWAP2 ADD MLOAD DUP12 MSTORE PUSH1 0x4 DUP11 MSTORE PUSH1 0x1 DUP13 DUP13 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x1761 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP8 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP SWAP1 SWAP9 POP DUP4 SWAP3 POP PUSH2 0x1A7E SWAP2 POP PUSH1 0xB SWAP1 POP PUSH2 0x1A69 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1BB1 JUMPI PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x1586 JUMPI PUSH32 0x6D1C76D614228B523BAA4DCD9539E2C713B54FF4AB3FF2D1627E7F6CD32BE442 SWAP2 PUSH2 0x1B96 PUSH2 0x1B8E PUSH1 0x20 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1BA5 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x1C3A JUMPI JUMPDEST POP ISZERO PUSH2 0x1C00 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH2 0x1BFE SWAP6 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 KECCAK256 SLOAD AND GAS CALL PUSH2 0x19A1 PUSH2 0x182E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2061646D696E20617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2404341F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1C9F JUMPI JUMPDEST POP POP SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1C7A JUMPI POP PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C95 JUMPI PUSH2 0x1C90 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x1BBF JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CD5 JUMPI JUMPDEST PUSH2 0x1CB3 DUP2 DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CE JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x594 JUMPI POP CODESIZE DUP1 PUSH2 0x1C69 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP7 LT ISZERO PUSH2 0x1D5C JUMPI PUSH1 0x5 PUSH2 0x1D12 DUP8 PUSH1 0xFF SWAP4 PUSH2 0x133F JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x1D2E JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D29 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST SWAP4 PUSH2 0x1D52 SWAP4 DUP2 SWAP7 SWAP4 PUSH2 0x1D4A SWAP4 PUSH2 0x1D29 SWAP8 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x133F JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x1D1C JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16A8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D89 DUP3 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x1D96 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1DA7 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D67 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 SWAP2 DUP3 DUP3 ADD SWAP1 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E18 JUMPI POP POP POP PUSH2 0x1BFE SWAP3 POP SUB DUP4 PUSH2 0x16DA JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E02 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x94436AD6DF262EF197283858A5B5AD9409470FFD6B26D52AC784A81678C12164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"676:14756:42:-:0;;;;;;;;;;;;;-1:-1:-1;676:14756:42;;;;;;;;;;;15413:9;;;:::i;:::-;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:38;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;676:14756:42;;2475:4:0;676:14756:42;;;:::i;:::-;;;;;;;;;;3901:22:0;676:14756:42;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;676:14756:42;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;;;;;;;1386:51;;676:14756;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;2475:4:0;;;:::i;:::-;4924::42;4913:15;;676:14756;;;;;;5015:38;676:14756;4968:32;676:14756;;;;;5015:38;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;1933:12:2;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12954:23;;-1:-1:-1;;;;;676:14756:42;;;;12954:23;13073:3;676:14756;;;13048:10;676:14756;;;;;;;13044:27;;;;;13097:28;:19;;676:14756;13097:19;;:::i;:::-;:28;;676:14756;;13096:29;13092:81;;13073:3;;;;:::i;:::-;13032:10;;13092:81;13145:13;;13073:3;13145:13;;:::i;:::-;13092:81;;;;;13044:27;;;;;;;13240:26;;;:::i;:::-;13296;;;;:::i;:::-;13345;;;;:::i;:::-;13392;13442;13392;;;:::i;:::-;13442;;:::i;:::-;13510:17;;13542:10;;13583:3;676:14756;;;13048:10;676:14756;;;;;;;;13554:27;;;;;13607:19;;;676:14756;13607:19;;;;13097:28;13607:19;;:::i;:::-;:28;;676:14756;;13606:29;13602:461;;13583:3;;;;;;;;:::i;:::-;13542:10;;13602:461;676:14756;;;;13896:35;676:14756;;13914:17;676:14756;;;;;;;;13583:3;676:14756;14041:7;676:14756;;;;;;13839:39;676:14756;13684:19;676:14756;;;;;;13684:19;:::i;:::-;676:14756;;:::i;:::-;;13721:33;676:14756;;;13721:33;;:::i;:::-;676:14756;13799:22;;;676:14756;13772:49;676:14756;;;13772:49;;:::i;:::-;676:14756;13859:19;;676:14756;13839:39;;:::i;:::-;676:14756;13914:17;676:14756;13896:35;;:::i;:::-;676:14756;;;;;;;;;13970:53;676:14756;13949:74;;;;:::i;:::-;676:14756;14041:7;:::i;:::-;13602:461;;;;;;;;;13554:27;676:14756;13554:27;;;676:14756;13554:27;;676:14756;13554:27;;676:14756;;13554:27;676:14756;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;14447:26;676:14756;;:::i;:::-;14447:26;:::i;:::-;676:14756;;;;-1:-1:-1;;;14490:76:42;;;;;676:14756;;;;;;;;;;-1:-1:-1;;;;;676:14756:42;14490:76;;;;;;;;;;;676:14756;;;;;;;;14490:76;;;;;;;;;;;;;;;;;;:::i;:::-;;;676:14756;;;;;;14490:76;;;;;676:14756;;;14490:76;;;;;;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;676:14756:42;;;1562:49;676:14756;;;;;;;;;;;1562:49;;;;;;676:14756;1562:49;;;;:::i;:::-;676:14756;;;1562:49;676:14756;1562:49;;676:14756;1562:49;;;;676:14756;1562:49;676:14756;1562:49;676:14756;1562:49;;676:14756;1562:49;;;676:14756;1562:49;;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:12:2;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;-1:-1:-1;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:18:39;676:14756:42;;;;1633:12:2;676:14756:42;;;;;;;5016:18:39;:::i;:::-;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;-1:-1:-1;;;;;676:14756:42;;:::i;:::-;;;;1786:50;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;1645:26;676:14756;;;;;;;;;;;;;;;;:::i;:::-;2466:103:26;;;;;:::i;:::-;5341:10:42;;676:14756;;5408:13;676:14756;5388:40;;676:14756;;;5502:32;;;:::i;:::-;676:14756;;;;;;;;;;;;;5595:43;676:14756;;;5595:43;676:14756;5595:47;676:14756;;5753:10;;;:::i;:::-;676:14756;;;;-1:-1:-1;;;1797:53:20;;;;5753:10:42;1797:53:20;;;676:14756:42;5867:4;676:14756;;;;;;;;;;;1797:53:20;;676:14756:42;-1:-1:-1;;;;;676:14756:42;;;;;;;;;;;;;;;1797:53:20;;676:14756:42;1797:53:20;:::i;:::-;5946:30:42;:15;;:30;:::i;:::-;5753:10;;676:14756;;5986:10;676:14756;;;;;;;;;;;;:::i;:::-;;;;6014:238;;;676:14756;;;6014:238;;;5946:15;676:14756;;;6014:238;;676:14756;;;;6014:238;;;5946:15;;676:14756;;;6014:238;;676:14756;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;5595:43;676:14756;;;;;:::i;:::-;;;;;;;5408:13;676:14756;;;;;;;;;;5595:43;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:21;676:14756;6303:21;676:14756;6303:21;:::i;:::-;;676:14756;6448:4;6409:35;6418:26;676:14756;6409:35;;:::i;:::-;676:14756;5753:10;676:14756;;6378:15;676:14756;;;;;;;;;;;;;;;;;6476:49;676:14756;5753:10;6476:49;;5595:43;676:14756;;;;;-1:-1:-1;;;676:14756:42;;;;;1797:53:20;676:14756:42;;;-1:-1:-1;;;676:14756:42;;;;;1797:53:20;676:14756:42;;;-1:-1:-1;;;676:14756:42;;;;;1797:53:20;676:14756:42;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;844:33;676:14756;;;2954:6:0;676:14756:42;;;;;735:10:22;676:14756:42;;;;;;;;;;3519:23:0;3515:108;;10662:9:42;;:13;676:14756;;10662:9;10728;10662;10728;:::i;:::-;676:14756;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;3515:108:0;676:14756:42;;;;3565:47:0;;;;;;735:10:22;3565:47:0;;;676:14756:42;;;;;3565:47:0;676:14756:42;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;4351:72:42;4379:3;4359:23;;;4351:72;:::i;:::-;676:14756;;;;;;4441:43;676:14756;;;4441:43;676:14756;4441:48;676:14756;;;;;4617:50;676:14756;;;;;4441:43;676:14756;;;4531:43;676:14756;;;;;;;;;;4617:50;676:14756;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;4379:3;;676:14756;;;;;;;;;;;;;;;;;1721:41;676:14756;;;;;;;;;;;;;;;;;;;;2466:103:26;;:::i;:::-;8263:10:42;;;:::i;:::-;1857:1:26;676:14756:42;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:22;;-1:-1:-1;;;;;676:14756:42;;5421:34:0;5417:102;;676:14756:42;5529:37:0;676:14756:42;;;5529:37:0;:::i;5417:102::-;676:14756:42;-1:-1:-1;;;5478:30:0;;676:14756:42;;5478:30:0;676:14756:42;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;1480:30;676:14756;1480:30;;;;;;;676:14756;1480:30;;:::i;:::-;676:14756;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;-1:-1:-1;;;;;676:14756:42;;:::i;:::-;;;;1842:49;676:14756;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2475:4:0;676:14756:42;;;;3901:22:0;676:14756:42;2475:4:0;:::i;:::-;2865:31:2;;;;:::i;:::-;2906:69;;676:14756:42;;;2906:69:2;676:14756:42;;;2933:12:2;676:14756:42;;;;;8382:50:39;;-1:-1:-1;;;;;676:14756:42;;8382:50:39;:::i;:::-;;2906:69:2;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;2466:103:26;;:::i;:::-;6766:10:42;676:14756;;6755:10;676:14756;;;;;;6742:42;;676:14756;;;6857:34;6766:10;;676:14756;;6755:10;676:14756;;;;;6857:34;:::i;:::-;6910:18;;;;;676:14756;;;;;;;;7017:22;;6766:10;7124;6766;7124;:::i;:::-;676:14756;7218:17;;676:14756;7200:15;:35;7196:420;;676:14756;7860:51;7945:4;676:14756;7859:82;676:14756;;;;;;;;;;7743:31;676:14756;;7743:31;676:14756;7743:31;:::i;:::-;;676:14756;7860:32;6766:10;7860:32;:::i;:::-;676:14756;;7860:51;;:::i;:::-;7915:26;676:14756;7859:82;;:::i;:::-;676:14756;6766:10;676:14756;;7828:15;676:14756;;;;;;;;;;;;;;;;;;;;1380:43:20;;;;6766:10:42;1380:43:20;;;676:14756:42;;;;;;;1380:43:20;;676:14756:42;;;;;;;;;;;;;;8074:39;;676:14756;;;1380:43:20;;;:::i;:::-;676:14756:42;;;;;;;;;;;6766:10;8074:39;;676:14756;;;;;;-1:-1:-1;;;676:14756:42;;;;;1380:43:20;676:14756:42;;7196:420;676:14756;;;7859:82;7860:51;7945:4;676:14756;7379:16;7351:5;7316:31;7325:22;676:14756;7316:31;;:::i;:::-;676:14756;7379:16;;;:::i;:::-;7409;7597:7;676:14756;;7542:22;676:14756;7542:22;676:14756;7542:22;:::i;:::-;;676:14756;7597:7;:::i;:::-;7196:420;;;;;;;676:14756;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;1930:44;676:14756;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;;;;;;3901:22:0;676:14756:42;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;3611:72:42;3639:3;3619:23;;;3611:72;:::i;:::-;676:14756;;;;;;3701:43;676:14756;;;3701:43;676:14756;;;;;;;;:::i;:::-;;;;3701:43;676:14756;3821:111;;676:14756;;;;;;;;;;;;;;;;;;;;3951:13;676:14756;-1:-1:-1;;;676:14756:42;;;;;4007:48;676:14756;;;;;;3701:43;676:14756;;;3951:13;676:14756;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:48;676:14756;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;3639:3;;676:14756;;;;;;;;;;;;;;;;;;844:33;676:14756;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;837:57:2;;;:97;;;;676:14756:42;;;;;;;;;837:97:2;2688:32:0;;-1:-1:-1;;;;2673:47:0;;;:87;;;;837:97:2;;;;;;2673:87:0;-1:-1:-1;;;862:40:33;;-1:-1:-1;2673:87:0;;;676:14756:42;;;;;;;;;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;3951:13;676:14756;;;;;;3951:13;-1:-1:-1;676:14756:42;;;;-1:-1:-1;676:14756:42;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:14756:42;;-1:-1:-1;676:14756:42;;;-1:-1:-1;676:14756:42;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;676:14756:42;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:14756:42;;;-1:-1:-1;676:14756:42;;;;;-1:-1:-1;676:14756:42;:::o;3199:103:0:-;735:10:22;676:14756:42;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;676:14756:42;;;;3565:47:0;;;;;;735:10:22;3565:47:0;;;676:14756:42;;;;;3565:47:0;3199:103;676:14756:42;-1:-1:-1;676:14756:42;2954:6:0;676:14756:42;;;-1:-1:-1;676:14756:42;735:10:22;-1:-1:-1;676:14756:42;;;;;-1:-1:-1;676:14756:42;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;-1:-1:-1;676:14756:42;;;;2954:6:0;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;676:14756:42;;;;;;2954:6:0;676:14756:42;;;;;;;;;;;;;2954:6:0;676:14756:42;;;;;;;;6370:40:0;735:10:22;6370:40:0;;;2954:6;6424:11;:::o;6272:217::-;6466:12;;;:::o;3108:262:2:-;3226:32;;;;:::i;:::-;3268:72;;;;3349:14;;3108:262;:::o;3268:72::-;-1:-1:-1;676:14756:42;;;3295:12:2;676:14756:42;;;;;;8703:53:39;;-1:-1:-1;;;;;676:14756:42;;8703:53:39;:::i;:::-;;3108:262:2;:::o;6730:317:0:-;;-1:-1:-1;676:14756:42;;;;2954:6:0;676:14756:42;;;;;;;;;;;;;;;;;;;;;;;;6824:217:0;676:14756:42;;;;;;2954:6:0;676:14756:42;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:22;6922:40:0;;;2954:6;6976:11;:::o;2241:406:39:-;;;4360:14;;;-1:-1:-1;676:14756:42;;;;;;;;;;;4360:26:39;2320:321;676:14756:42;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;4360:14:39;676:14756:42;;;;;;;;;:::i;:::-;;;;;;;;;;;4360:14:39;2576:11;:::o;676:14756:42:-;-1:-1:-1;;;676:14756:42;;;;;;;;2320:321:39;-1:-1:-1;2618:12:39;-1:-1:-1;;2618:12:39:o;676:14756:42:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2815:1368:39;;3010:14;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;3046:13:39;;;;3042:1135;3046:13;;;-1:-1:-1;;676:14756:42;;;;;;;;;;;;;;;;;;;;3521:23:39;;;3517:378;;3042:1135;676:14756:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3010:14:39;4112:11;:::o;676:14756:42:-;-1:-1:-1;;;676:14756:42;;;;;;;;3517:378:39;676:14756:42;3584:22:39;3705:23;3584:22;;;:::i;:::-;676:14756:42;;;;;;3705:23:39;;;;;:::i;676:14756:42:-;;;;;;;;;;;;3517:378:39;;;;;676:14756:42;-1:-1:-1;;;676:14756:42;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;3042:1135:39;4154:12;;;;;:::o;676:14756:42:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;7738:720:20;;-1:-1:-1;7875:421:20;7738:720;7875:421;;;;;;;;;;;;-1:-1:-1;7875:421:20;;8310:15;;-1:-1:-1;;;;;;676:14756:42;;8328:26:20;:31;8310:68;8306:146;;7738:720;:::o;8306:146::-;676:14756:42;;-1:-1:-1;;;8401:40:20;;-1:-1:-1;;;;;676:14756:42;;;8401:40:20;;;676:14756:42;;;8401:40:20;8310:68;8377:1;8362:16;;8310:68;;7875:421;;;;-1:-1:-1;7875:421:20;;;;;2575:307:26;1899:1;2702:7;676:14756:42;2702:18:26;2698:86;;1899:1;2702:7;676:14756:42;2575:307:26:o;2698:86::-;676:14756:42;;-1:-1:-1;;;2743:30:26;;;;;676:14756:42;-1:-1:-1;;676:14756:42;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;676:14756:42;;;;;:::i;:::-;;;;-1:-1:-1;676:14756:42;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;676:14756:42;;;;;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;8400:861;8469:26;;;:::i;:::-;:31;8465:44;;8582:29;;;:::i;:::-;8634:11;8630:625;;8400:861;;:::o;8630:625::-;8721:10;;8499:1;8762:3;-1:-1:-1;;;;;676:14756:42;;8499:1;676:14756;;;8737:10;676:14756;;;;;;;;;;;8733:27;;;;;8790:19;;;;;676:14756;8790:28;:19;;8762:3;8790:19;;;:::i;:::-;:28;;676:14756;;8789:29;8785:133;;8762:3;;;;;;;:::i;:::-;8721:10;;8785:133;8842:19;676:14756;8499:1;676:14756;;8499:1;676:14756;8842:19;:::i;:::-;8884:15;8842:39;8884:15;8842:39;;676:14756;8785:133;;;;;;;8733:27;;;;;;;;;676:14756;9215:29;8733:27;9144:39;8499:1;676:14756;;;;;;;;;;;;;;;8995:14;676:14756;;;;;;;9101:29;;;;:::i;:::-;;9144:39;:::i;:::-;676:14756;;;;;9215:29;8400:861::o;8465:44::-;8502:7;:::o;676:14756::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9409:1082::-;9500:26;;;:::i;:::-;:31;9496:45;;9582:26;;;:55;:26;;:::i;:::-;9641:4;676:14756;;;9611:26;676:14756;9582:55;;:::i;:::-;676:14756;;;;;;;;9530:1;;676:14756;;;;;;9648:15;676:14756;;9581:88;676:14756;;;;;;9581:88;;:::i;:::-;9746:27;9809:26;9746:27;9809:26;;:::i;:::-;9858:19;;9854:567;;9409:1082;676:14756;;;10446:14;676:14756;10446:38;676:14756;;;;;;;10446:38;:::i;:::-;9409:1082;:::o;9854:567::-;9898:10;;;;9939:3;676:14756;;;9914:10;676:14756;;;;;;;9910:27;;;;;9989:19;;676:14756;9989:19;;:::i;676:14756::-;;10031:16;;676:14756;;10026:371;;9939:3;;;;;:::i;:::-;9898:10;;10026:371;676:14756;;;;;;;;;;;;;;;;;;;;10092:41;10375:3;10346:25;10326:52;10092:41;;;10179:23;10092:41;;;9939:3;10092:41;;:::i;:::-;10179:23;;:::i;:::-;676:14756;10266:20;;676:14756;;;10253:12;676:14756;;;;;;10253:51;676:14756;10346:25;;:::i;:::-;676:14756;10326:52;;:::i;:::-;10026:371;;;;9910:27;-1:-1:-1;9910:27:42;;-1:-1:-1;9910:27:42;;-1:-1:-1;10446:38:42;;-1:-1:-1;10446:14:42;;-1:-1:-1;9854:567:42;;9496:45;9533:8;9530:1;9533:8;:::o;10868:1001::-;10935:11;676:14756;10935:16;10931:711;;11750:4;676:14756;;;;;;;;;;;;;;11836:26;676:14756;11710:59;11740:29;676:14756;;10935:11;676:14756;11740:29;;:::i;:::-;11710:59;676:14756;11710:59;:::i;:::-;;676:14756;11779:33;676:14756;11779:33;676:14756;11779:33;:::i;:::-;;676:14756;;;;;;11836:26;10868:1001::o;10931:711::-;-1:-1:-1;11054:13:42;11069:7;11073:3;11069:7;;;;11049:352;676:14756;;;;-1:-1:-1;676:14756:42;;1633:12:2;11105:41:42;676:14756;;-1:-1:-1;676:14756:42;;;;;;;-1:-1:-1;676:14756:42;;;;11572:39;676:14756;;;;;;;;11105:41;676:14756;;;;11489:69;;;;:::i;11572:39::-;11625:7::o;676:14756::-;;;-1:-1:-1;;;676:14756:42;;11105:41;;676:14756;;;;;;;;-1:-1:-1;;;676:14756:42;;;;;;;11078:3;676:14756;;-1:-1:-1;;;11105:41:42;;-1:-1:-1;11105:41:42;;;676:14756;;;;;;;11105:41;;676:14756;;;11105:4;:41;;;-1:-1:-1;;11105:41:42;;;11078:3;11101:286;;;;;;;;11363:5;;;11101:286;-1:-1:-1;;;;;676:14756:42;11193:123;;11078:3;11101:286;11078:3;:::i;:::-;11054:13;;11193:123;11244:18;;676:14756;11288:5;;;11105:41;;;;;;;;;;;;;:::i;:::-;;;676:14756;;;;;;-1:-1:-1;;;;;676:14756:42;;;;;;11105:41;;;;;;;;;;12016:317;12116:1;12132:10;12173:3;676:14756;;;;;;;;12116:1;676:14756;12148:10;676:14756;;;;;;;12116:1;676:14756;;;12144:27;;;;;12197:28;:19;;676:14756;12197:19;;:::i;:::-;:28;;676:14756;;12196:29;12192:103;;12173:3;;;;;;;;:::i;:::-;12132:10;;12192:103;676:14756;12245:35;676:14756;;;;12254:19;676:14756;12173:3;676:14756;12116:1;676:14756;;12116:1;676:14756;12254:19;:::i;:::-;676:14756;;12245:35;;:::i;:::-;12192:103;;;;;;;12144:27;;;;;;;;;12016:317;:::o;676:14756::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;14784:13;676:14756;;;;;;;;;;;14784:13;-1:-1:-1;676:14756:42;;;-1:-1:-1;676:14756:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;676:14756:42;;;;;;;;;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","FEE_DISTRIBUTOR_ROLE()":"0cdac963","accumulatedRewardsPerToken()":"38962186","addStakingTier(uint256,uint256)":"111a9802","calculatePendingRewards(address)":"097aad10","claimRewards()":"372500ab","distributeRewards()":"6f4a2cd0","earlyWithdrawalPenalty()":"291a3d9e","getFeeDiscount(address)":"b7fa7cfc","getLockDurations()":"76520c6d","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","getStakesByUser(address)":"c0d8fd3f","getStakingTier(uint256)":"b3c6cd76","getTotalStakedByUser(address)":"0951984d","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","lockDurations(uint256)":"32298be1","omniToken()":"0186f8a4","pendingRewards(address)":"31d7a262","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","stake(uint256,uint256)":"7b0472f0","stakingTiers(uint256)":"d50267ee","supportsInterface(bytes4)":"01ffc9a7","totalRewardsDistributed()":"ee172546","totalStaked()":"817b1cd2","unstake(uint256)":"2e17de78","updateEarlyWithdrawalPenalty(uint256)":"d1e85a74","updateStakingTier(uint256,uint256)":"68a34f98","userRewardDebts(address)":"8686b39a","userStakes(address,uint256)":"b5d5b5fa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_omniToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"EarlyWithdrawalPenaltyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"StakingTierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"StakingTierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedRewardsPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"addStakingTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculatePendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFeeDiscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockDurations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakesByUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"userLockDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"multipliers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"}],\"name\":\"getStakingTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omniToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDurationIndex\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"updateEarlyWithdrawalPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateStakingTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardDebts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addStakingTier(uint256,uint256)\":{\"params\":{\"lockDuration\":\"Duration in seconds\",\"rewardMultiplier\":\"Multiplier in basis points\"}},\"calculatePendingRewards(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Pending rewards in wei\"}},\"getFeeDiscount(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Discount in basis points\"}},\"getLockDurations()\":{\"returns\":{\"_0\":\"Array of lock durations in seconds\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"getStakesByUser(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"amounts\":\"Array of stake amounts\",\"endTimes\":\"Array of end times\",\"multipliers\":\"Array of reward multipliers\",\"startTimes\":\"Array of start times\",\"userLockDurations\":\"Array of lock durations\"}},\"getStakingTier(uint256)\":{\"params\":{\"lockDuration\":\"Duration in seconds\"},\"returns\":{\"duration\":\"Lock duration in seconds\",\"multiplier\":\"Reward multiplier in basis points\"}},\"getTotalStakedByUser(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Total staked amount\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"stake(uint256,uint256)\":{\"params\":{\"amount\":\"Amount to stake\",\"lockDurationIndex\":\"Index of the lock duration in the lockDurations array\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstake(uint256)\":{\"params\":{\"stakeIndex\":\"Index of the stake to unstake\"}},\"updateEarlyWithdrawalPenalty(uint256)\":{\"params\":{\"penalty\":\"New penalty in basis points\"}},\"updateStakingTier(uint256,uint256)\":{\"params\":{\"lockDuration\":\"Duration to update\",\"rewardMultiplier\":\"New multiplier\"}}},\"title\":\"OMNI Staking Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStakingTier(uint256,uint256)\":{\"notice\":\"Adds a new staking tier\"},\"calculatePendingRewards(address)\":{\"notice\":\"Calculate pending rewards for a user\"},\"claimRewards()\":{\"notice\":\"Claims pending rewards\"},\"distributeRewards()\":{\"notice\":\"Distributes ETH rewards to stakers\"},\"getFeeDiscount(address)\":{\"notice\":\"Gets the fee discount for a user based on their staked amount\"},\"getLockDurations()\":{\"notice\":\"Gets all available lock durations\"},\"getStakesByUser(address)\":{\"notice\":\"Gets all active stakes for a user\"},\"getStakingTier(uint256)\":{\"notice\":\"Gets staking tier info for a specific lock duration\"},\"getTotalStakedByUser(address)\":{\"notice\":\"Gets the total amount staked by a user\"},\"stake(uint256,uint256)\":{\"notice\":\"Stakes OMNI tokens\"},\"unstake(uint256)\":{\"notice\":\"Unstakes tokens for a specific stake\"},\"updateEarlyWithdrawalPenalty(uint256)\":{\"notice\":\"Updates the early withdrawal penalty\"},\"updateStakingTier(uint256,uint256)\":{\"notice\":\"Updates an existing staking tier\"}},\"notice\":\"Allows users to stake OMNI tokens to earn ETH rewards and trading fee discounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNIStaking.sol\":\"OMNIStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/OMNIStaking.sol\":{\"keccak256\":\"0x8a79b80c6be12440673cebc5b19d8b18d4b3bbd6845ca9626cc2621b5cc30fec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfe7794517e086e4d1988ba87ea44593deeb74bf55bc202bfa5ed5b4aa6e224\",\"dweb:/ipfs/QmczEEy7rqyXv34WbbXKoSqYuM4aoXXsKAiaPpuFkUWmET\"]}},\"version\":1}"}},"contracts/OMNIToken.sol":{"OMNIToken":{"abi":[{"inputs":[{"internalType":"address","name":"initialGovernance","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tier","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"discount","type":"uint256"}],"name":"DiscountTierSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"insuranceFund","type":"address"}],"name":"InsuranceFundUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newLeverage","type":"uint256"}],"name":"MaxLeverageUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"staking","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"treasury","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"buybackBurn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"insurance","type":"uint256"}],"name":"RewardDistributionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"TradingFeeBaseUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasury","type":"address"}],"name":"TreasuryUpdated","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNANCE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"buybackBurnPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"name":"getDiscountForStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDiscountTiers","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"insuranceFund","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"insuranceFundPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastInflationUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLeverage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tier","type":"uint256"},{"internalType":"uint256","name":"discountBps","type":"uint256"}],"name":"setDiscountTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_insuranceFund","type":"address"}],"name":"setInsuranceFund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_leverage","type":"uint256"}],"name":"setMaxLeverage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_staking","type":"uint256"},{"internalType":"uint256","name":"_treasury","type":"uint256"},{"internalType":"uint256","name":"_buybackBurn","type":"uint256"},{"internalType":"uint256","name":"_insurance","type":"uint256"}],"name":"setRewardDistribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setTradingFeeBase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakingDiscountTiers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingRewardPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingFeeBase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasuryPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"yearlyInflationCap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"yearlyMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"finalize_allocation":{"entryPoint":1323,"id":null,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":1480,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_13056":{"entryPoint":1351,"id":256,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":2095,"id":3526,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_13054":{"entryPoint":1643,"id":3526,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"610160346200052657601f6200384f38819003918201601f19168301916001600160401b03831184841017620002f9578084926020946040528339810103126200052657516001600160a01b038116810362000526576040519062000064826200052b565b600a82526913db5b9a5b1a5c5d5a5960b21b90816020840152604051916200008c836200052b565b600a8352602083015260405192620000a4846200052b565b60048452634f4d4e4960e01b602085015260405192620000c4846200052b565b60018452603160f81b60208501528051906001600160401b038211620002f95760035490600182811c921680156200051b575b6020831014620003ee5781601f849311620004a6575b50602090601f83116001146200041b576000926200040f575b50508160011b916000199060031b1c1916176003555b83516001600160401b038111620002f957600454600181811c9116801562000404575b6020821014620003ee57601f811162000388575b50602094601f82116001146200031b579481929394956000926200030f575b50508160011b916000199060031b1c1916176004555b620001b3816200066b565b91610120928352620001c5846200082f565b9161014092835260208151910120938460e0526020815191012090610100948286524660a0526040519260208401917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352604085015260608401524660808401523060a084015260a0835260c083019280841060018060401b03851117620002f957620002aa936040525190206080523060c0526a52b7d2dcc80cd2e4000000600c556a0422ca8b0a00a425000000600d55603260115560146012556113886013556107d0806014556103e8601555601655620002a38162000547565b50620005c8565b5042600e5560405191612e479384620009e88539608051846122c4015260a0518461237f015260c0518461228e015260e051846123130152518361233901525182610cf301525181610d1f0152f35b634e487b7160e01b600052604160045260246000fd5b01519050388062000192565b601f19821695600460005260206000209160005b8881106200036f5750836001959697981062000355575b505050811b01600455620001a8565b015160001960f88460031b161c1916905538808062000346565b919260206001819286850151815501940192016200032f565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810160208410620003e6575b601f830160051c82018110620003d957505062000173565b60008155600101620003c1565b5080620003c1565b634e487b7160e01b600052602260045260246000fd5b90607f16906200015f565b01519050388062000126565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b8181106200048d575090846001959493921062000473575b505050811b016003556200013c565b015160001960f88460031b161c1916905538808062000464565b929360206001819287860151815501950193016200044c565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000510575b90601f859493920160051c01905b8181106200050057506200010d565b60008155849350600101620004f1565b9091508190620004e3565b91607f1691620000f7565b600080fd5b604081019081106001600160401b03821117620002f957604052565b6001600160a01b031660008181527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76602052604081205490919060ff16620005c457818052600b6020526040822081835260205260408220600160ff1982541617905533916000805160206200382f8339815191528180a4600190565b5090565b6001600160a01b031660008181527f335e1b54ca43df00436bb5fe7358af00aea8249f479068439ed5a193dfc6fce960205260408120549091907f71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb19060ff166200066657808352600b6020526040832082845260205260408320600160ff198254161790556000805160206200382f833981519152339380a4600190565b505090565b805160209190828110156200070a575090601f825111620006a957808251920151908083106200069a57501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620006f0575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620006cc565b6001600160401b038111620002f9576005928354926001938481811c9116801562000824575b83821014620003ee57601f8111620007ed575b5081601f841160011462000783575092829391839260009462000777575b50501b916000199060031b1c191617905560ff90565b01519250388062000761565b919083601f1981168760005284600020946000905b88838310620007d25750505010620007b8575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620007ab565b85870151885590960195948501948793509081019062000798565b8560005284601f846000209201871c820191601f8601881c015b8281106200081757505062000743565b6000815501859062000807565b90607f169062000730565b805160209081811015620008bd5750601f8251116200085c57808251920151908083106200069a57501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620008a3575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200087f565b906001600160401b038211620002f957600654926001938481811c91168015620009dc575b83821014620003ee57601f8111620009a2575b5081601f84116001146200093657509282939183926000946200092a575b50501b916000199060031b1c19161760065560ff90565b01519250388062000913565b919083601f198116600660005284600020946000905b888383106200098757505050106200096d575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806200095f565b8587015188559096019594850194879350908101906200094c565b600660005284601f84600020920160051c820191601f860160051c015b828110620009cf575050620008f5565b60008155018590620009bf565b90607f1690620008e256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461039757806306fdde0314610392578063095ea7b31461038d5780630967a7711461038857806318160ddd1461038357806323b872dd1461037e578063248a9ca3146103795780632f2ff15d14610374578063313ce5671461036f5780633644e5151461036a57806336568abe146103655780633a46b1a81461036057806340c10f191461035b57806342966c68146103565780634bf5d7e914610351578063503c2a801461034c5780635158cd0914610347578063587cde1e146103425780635c19a95c1461033d57806361d027b31461033857806366c8e57c1461033357806369ee19af1461032e5780636b4e8bb0146103295780636ebefe7e146103245780636fcfff451461031f57806370a082311461031a57806379cc6790146103155780637a1370b5146103105780637ab560831461030b5780637ecebe001461030657806384b0196e14610301578063882693b1146102fc5780638e539e8c146102f757806391d14854146102f257806391ddadf4146102ed57806395d89b41146102e85780639ab24eb0146102e3578063a217fddf146102de578063a9059cbb146102d9578063abec147a146102d4578063ae3302c2146102cf578063b7902303146102ca578063c1542352146102c5578063c3c05293146102c0578063c3cda520146102bb578063d3127e63146102b6578063d505accf146102b1578063d5391393146102ac578063d547741f146102a7578063d5abeb01146102a2578063d80a619f1461029d578063dc8faff414610298578063dd62ed3e14610293578063f0f442601461028e578063f1127ed8146102895763f36c8f5c1461028457600080fd5b6117aa565b6116f7565b611690565b611638565b61161a565b611574565b611556565b611517565b6114dc565b6113a8565b61135c565b611293565b61120c565b6111ee565b6111c5565b6111a7565b6110b3565b61108d565b611071565b611028565b610f81565b610f55565b610f03565b610de8565b610d9c565b610cda565b610ca0565b610c82565b610c64565b610c34565b610bfb565b610b93565b610b75565b610b57565b610b39565b610b0d565b610ae4565b610ac2565b610a87565b610a21565b610969565b6108d7565b6108ba565b61079d565b6106f2565b6106ab565b610688565b61066c565b61062b565b6105fc565b6105c4565b6105a6565b610588565b610557565b610446565b346103ed5760203660031901126103ed5760043563ffffffff60e01b81168091036103ed57602090637965db0b60e01b81149081156103dc575b506040519015158152f35b6301ffc9a760e01b149050386103d1565b600080fd5b919082519283825260005b84811061041e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103fd565b9060206104439281815201906103f2565b90565b346103ed5760008060031936011261052857604051908060035461046981611d26565b808552916001918083169081156104fe57506001146104a3575b61049f8561049381870382611a75565b60405191829182610432565b0390f35b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106104e65750505081016020016104938261049f610483565b805460208587018101919091529093019281016104cb565b86955061049f9693506020925061049394915060ff191682840152151560051b8201019293610483565b80fd5b600435906001600160a01b03821682036103ed57565b602435906001600160a01b03821682036103ed57565b346103ed5760403660031901126103ed5761057d61057361052b565b6024359033611e72565b602060405160018152f35b346103ed5760003660031901126103ed576020601654604051908152f35b346103ed5760003660031901126103ed576020600254604051908152f35b346103ed5760603660031901126103ed5761057d6105e061052b565b6105e8610541565b604435916105f7833383611f26565b611d60565b346103ed5760203660031901126103ed57600435600052600b6020526020600160406000200154604051908152f35b346103ed5760403660031901126103ed5761066a60043561064a610541565b9080600052600b6020526106656001604060002001546118b9565b6118da565b005b346103ed5760003660031901126103ed57602060405160128152f35b346103ed5760003660031901126103ed5760206106a361228b565b604051908152f35b346103ed5760403660031901126103ed576106c4610541565b336001600160a01b038216036106e05761066a90600435611974565b60405163334bd91960e11b8152600490fd5b346103ed5760403660031901126103ed5761070b61052b565b60243561071743612608565b9165ffffffffffff8316821015610772576001600160a01b0316600090815260096020526040902061049f92506001600160d01b0391610761919061075b90612608565b90612675565b604051911681529081906020820190565b50604051637669fc0f60e11b8152600481019190915265ffffffffffff919091166024820152604490fd5b346103ed5760403660031901126103ed576107b661052b565b602435906107c26117e5565b6002548281018091116108b557600c541061087a5761085d7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe91610807600e54612649565b4211610862575b61083961083485600f5461082f6108258383612668565b600d541015612c0d565b612668565b600f55565b6108438482612c52565b6040519384526001600160a01b0316929081906020820190565b0390a2005b61086c6000600f55565b61087542600e55565b61080e565b60405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b6044820152606490fd5b611d10565b346103ed5760203660031901126103ed5761066a60043533611fd4565b346103ed5760003660031901126103ed576108f143612608565b65ffffffffffff8061090243612608565b169116036109575761049f60405161091981611a1c565b601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c7400000060208201526040519182916020835260208301906103f2565b6040516301bfc1c560e61b8152600490fd5b346103ed576020806003193601126103ed5760043590600090815b600a811061099757604051838152602090f35b683635c9adc5dea000008082029082820414821517156108b5578410156109c7575b6109c290612cfe565b610984565b600081815260108352604090205492506109b9565b90815180825260208080930193019160005b8281106109fc575050505090565b8351855293810193928101926001016109ee565b9060206104439281815201906109dc565b346103ed5760008060031936011261052857610a3b6123cb565b90805b600a8110610a54576040518061049f8582610a10565b8082526020906010825260408320548451821015610a8257610a7d928260051b86010152612cfe565b610a3e565b61291a565b346103ed5760203660031901126103ed5760206001600160a01b0380610aab61052b565b166000526008825260406000205416604051908152f35b346103ed5760203660031901126103ed5761066a610ade61052b565b33611aa6565b346103ed5760003660031901126103ed576017546040516001600160a01b039091168152602090f35b346103ed5760203660031901126103ed5760043560005260106020526020604060002054604051908152f35b346103ed5760003660031901126103ed576020601554604051908152f35b346103ed5760003660031901126103ed576020600e54604051908152f35b346103ed5760003660031901126103ed576020600f54604051908152f35b346103ed5760203660031901126103ed576001600160a01b03610bb461052b565b16600052600960205260406000205463ffffffff90818111610bdc5760209160405191168152f35b604490604051906306dfcc6560e41b8252602060048301526024820152fd5b346103ed5760203660031901126103ed5760206106a3610c1961052b565b6001600160a01b031660009081526020819052604090205490565b346103ed5760403660031901126103ed5761066a610c5061052b565b60243590610c5f823383611f26565b611fd4565b346103ed5760003660031901126103ed576020601154604051908152f35b346103ed5760003660031901126103ed576020601454604051908152f35b346103ed5760203660031901126103ed576001600160a01b03610cc161052b565b1660005260076020526020604060002054604051908152f35b346103ed5760003660031901126103ed57610d6d610d177f0000000000000000000000000000000000000000000000000000000000000000612422565b61049f610d437f000000000000000000000000000000000000000000000000000000000000000061251b565b610d7b610d4e6123f9565b91604051958695600f60f81b875260e0602088015260e08701906103f2565b9085820360408701526103f2565b90466060850152306080850152600060a085015283820360c08501526109dc565b346103ed5760203660031901126103ed577f17e876f6956b36dde6c5dd9df30e484bfefa90239ff982e267abf6c45d0184026020600435610ddb611861565b80601155604051908152a1005b346103ed5760203660031901126103ed57600435610e0543612608565b9065ffffffffffff91828116821015610edc5750610e2290612608565b600a54906000908260058111610e86575b50610e3e9350612ba4565b600081610e5e575050602060005b6040516001600160d01b039091168152f35b600a610e6b60209361263a565b9152600080516020612df2833981519152015460301c610e4c565b9092610e9182612777565b82039182116108b557610e3e94600a84528083600080516020612df283398151915201541690851610600014610eca5750915b38610e33565b929150610ed69061265a565b90610ec4565b604051637669fc0f60e11b8152600481019290925265ffffffffffff166024820152604490fd5b346103ed5760403660031901126103ed57602060ff610f49610f23610541565b600435600052600b845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346103ed5760003660031901126103ed576020610f7143612608565b65ffffffffffff60405191168152f35b346103ed57600080600319360112610528576040519080600454610fa481611d26565b808552916001918083169081156104fe5750600114610fcd5761049f8561049381870382611a75565b9250600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106110105750505081016020016104938261049f610483565b80546020858701810191909152909301928101610ff5565b346103ed5760203660031901126103ed576001600160a01b0361104961052b565b166000526009602052602060018060d01b0361106860406000206128ec565b16604051908152f35b346103ed5760003660031901126103ed57602060405160008152f35b346103ed5760403660031901126103ed5761057d6110a961052b565b6024359033611d60565b346103ed5760803660031901126103ed576064356024356004356044356110d8611861565b8282018083116108b5578181018091116108b5578481018091116108b55761271003611170577f31372a128fc1946aa198a9d7c72e23d7106618d46c478a053897fc73f3be48bc9361116b9161112d84601355565b61113685601455565b61113f81601555565b61114882601655565b604051948594859094939260609260808301968352602083015260408201520152565b0390a1005b60405162461bcd60e51b815260206004820152600f60248201526e4d75737420657175616c203130302560881b6044820152606490fd5b346103ed5760003660031901126103ed576020601254604051908152f35b346103ed5760003660031901126103ed576018546040516001600160a01b039091168152602090f35b346103ed5760003660031901126103ed576020601354604051908152f35b346103ed5760203660031901126103ed5761122561052b565b61122d611861565b601880546001600160a01b0319166001600160a01b039290921691821790557f7aa78e1baf57af40dede9e6b906523dcd0de972d7ed5e1961f0fcc2b9cf19f00600080a2005b6064359060ff821682036103ed57565b6084359060ff821682036103ed57565b346103ed5760c03660031901126103ed576112ac61052b565b604435906024356112bb611273565b8342116113435761133761066a9461133e926040519060208201927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845260018060a01b038816604084015286606084015260808301526080825261131f82611a3d565b61133260a43593608435935190206123a5565b612136565b91826120e0565b611aa6565b604051632341d78760e11b815260048101859052602490fd5b346103ed5760203660031901126103ed577fb0f01601e93ad2a8fc4106e97567bc037aa114741705be9d80570fd2afa7bf1b602060043561139b611861565b80601255604051908152a1005b346103ed5760e03660031901126103ed576113c161052b565b6113c9610541565b604435906064356113d8611283565b8142116114c3576001600160a01b0385811660008181526007602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019283529283019390935292861660608201526080810187905260a081019190915260c08082019490945292835261147c92909161146960e083611a75565b61133260c4359360a435935190206123a5565b6001600160a01b0384811690821603611499575061066a92611e72565b6040516325c0072360e11b81526001600160a01b0391821660048201529084166024820152604490fd5b60405163313c898160e11b815260048101839052602490fd5b346103ed5760003660031901126103ed5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b346103ed5760403660031901126103ed5761066a600435611536610541565b9080600052600b6020526115516001604060002001546118b9565b611974565b346103ed5760003660031901126103ed576020600c54604051908152f35b346103ed5760403660031901126103ed57600435602435611593611861565b61271081116115ea57817f3badd8c132bb1c7264c8a842670580d2bdad682383a87a17638ae047444e6d209260005260106020528160406000205561116b6040519283928360209093929193604081019481520152565b60405162461bcd60e51b81526020600482015260086024820152674d6178203130302560c01b6044820152606490fd5b346103ed5760003660031901126103ed576020600d54604051908152f35b346103ed5760403660031901126103ed57602061168761165661052b565b61165e610541565b6001600160a01b0391821660009081526001855260408082209290931681526020919091522090565b54604051908152f35b346103ed5760203660031901126103ed576116a961052b565b6116b1611861565b601780546001600160a01b0319166001600160a01b039290921691821790557f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1600080a2005b346103ed5760403660031901126103ed5761171061052b565b6024359063ffffffff821682036103ed5761049f91611760916117316120c7565b5061173a6120c7565b506001600160a01b0316600090815260096020526040902061175a6120c7565b50612930565b506040519061176e82611a1c565b5465ffffffffffff811680835260309190911c60209283019081526040805192835290516001600160d01b031692820192909252918291820190565b346103ed5760003660031901126103ed5760206040517f71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb18152f35b3360009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc8602052604090207f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff905b5416156118435750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527f335e1b54ca43df00436bb5fe7358af00aea8249f479068439ed5a193dfc6fce9602052604090207f71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb19060ff90611839565b6000818152600b60209081526040808320338452909152902060ff90611839565b600090808252600b60205260ff61190684604085209060018060a01b0316600052602052604060002090565b541661196e57808252600b602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600b60205260ff6119a084604085209060018060a01b0316600052602052604060002090565b54161561196e57808252600b602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117611a3857604052565b611a06565b60a0810190811067ffffffffffffffff821117611a3857604052565b60c0810190811067ffffffffffffffff821117611a3857604052565b90601f8019910116810190811067ffffffffffffffff821117611a3857604052565b60405190611aa482611a1c565b565b6001600160a01b03818116600081815260086020526040812080548685166001600160a01b031982168117909255611aa496941694611b239390928691907f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9080a46001600160a01b031660009081526020819052604090205490565b915b6001600160a01b03808316939291908116908185141580611c6e575b611b4d575b5050505050565b81611bd2575b505082611b62575b8080611b46565b6001600160a01b031660009081526009602052604090207fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611baf91611ba990916125d5565b90611c77565b604080516001600160d01b039384168152919092166020820152a2388080611b5b565b6001600160a01b03166000908152600960205260409020611bf2846125d5565b611bfb43612608565b6001600160d01b03918280611c0f866128ec565b1691169003928284116108b5577fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72493611c6492611c4b92612ae8565b6040805192851683529316602082015291829190820190565b0390a23880611b53565b50831515611b41565b90611c8143612608565b6001600160d01b03918280611c95866128ec565b169116019182116108b557611ca992612ae8565b9091565b611cb643612608565b906001600160d01b03908180611cca6128a2565b169116019081116108b557611ca9916129ff565b611ce743612608565b906001600160d01b03908180611cfb6128a2565b1691169003908111611d1057611ca9916129ff565b634e487b7160e01b600052601160045260246000fd5b90600182811c92168015611d56575b6020831014611d4057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d35565b6001600160a01b0380821694939291908515611e595782168015611e40576001600160a01b03821660009081526020819052604090205495848710611e115784611aa4969703611dc28460018060a01b03166000526000602052604060002090565b556001600160a01b0384166000908152602081815260409182902080548801905590518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3612d86565b60405163391434e360e21b81526001600160a01b03841660048201526024810188905260448101869052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b038082169291908315611f0d578216938415611ef45780611eea7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594611ed360209560018060a01b03166000526001602052604060002090565b9060018060a01b0316600052602052604060002090565b55604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b6001600160a01b038181166000818152600160208181526040808420888716855290915290912054939594939291908301611f64575b505050505050565b848310611fa55715611f0d57821615611ef457611f9992611ed391039360018060a01b03166000526001602052604060002090565b55388080808080611f5c565b604051637dc7a0d960e11b81526001600160a01b03851660048201526024810184905260448101869052606490fd5b91906001600160a01b038084168015611e59576001600160a01b0385166000908152602081905260409020549483861061209657906020929161203085611aa49798039160018060a01b03166000526000602052604060002090565b558360025403600255604051848152817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000958693a3612078612073856125d5565b611cde565b50508252600860205260408181842054169280805220541690611b25565b60405163391434e360e21b81526001600160a01b039190911660048201526024810186905260448101849052606490fd5b604051906120d482611a1c565b60006020838281520152565b6001600160a01b0381166000908152600760205260409020805460018101909155909181900361210e575050565b6040516301d4b62360e61b81526001600160a01b039092166004830152602482015260449150fd5b9161044393916121459361214e565b909291926121fe565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116121d257926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156121c65780516001600160a01b038116156121bd57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600411156121e857565b634e487b7160e01b600052602160045260246000fd5b612207816121de565b80612210575050565b612219816121de565b600181036122335760405163f645eedf60e01b8152600490fd5b61223c816121de565b6002810361225d5760405163fce698f760e01b815260048101839052602490fd5b806122696003926121de565b146122715750565b6040516335e2f38360e21b81526004810191909152602490fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061237c575b156122e6577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261237681611a59565b51902090565b507f000000000000000000000000000000000000000000000000000000000000000046146122bd565b6042906123b061228b565b906040519161190160f01b8352600283015260228201522090565b60405190610160820182811067ffffffffffffffff821117611a3857604052600a8252610140366020840137565b6040516020810181811067ffffffffffffffff821117611a385760405260008152906000368137565b60ff81146124605760ff811690601f821161244e576040519161244483611a1c565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160055481600061247383611d26565b808352926001908181169081156124f9575060011461249a575b5061044392500382611a75565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8483106124de575061044393505081016020013861248d565b819350908160209254838589010152019101909184926124c5565b90506020925061044394915060ff191682840152151560051b8201013861248d565b60ff811461253d5760ff811690601f821161244e576040519161244483611a1c565b5060405160065481600061255083611d26565b808352926001908181169081156124f95750600114612576575061044392500382611a75565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8483106125ba575061044393505081016020013861248d565b819350908160209254838589010152019101909184926125a1565b6001600160d01b03908181116125e9571690565b604490604051906306dfcc6560e41b825260d060048301526024820152fd5b65ffffffffffff9081811161261b571690565b604490604051906306dfcc6560e41b8252603060048301526024820152fd5b6000198101919082116108b557565b906301e1338082018092116108b557565b90600182018092116108b557565b919082018092116108b557565b9081546000816005811161270c575b509190915b8281106126bc575050600081156000146126a557505050600090565b6126b060209261263a565b92815220015460301c90565b90918082169080831860011c82018092116108b5578460005265ffffffffffff80836020600020015416908516106000146126fa5750915b90612689565b9291506127069061265a565b906126f4565b909161271782612777565b82039182116108b55784835265ffffffffffff808360208620015416908516106000146127475750905b38612684565b91506127529061265a565b612741565b8115612761570490565b634e487b7160e01b600052601260045260246000fd5b600181111561044357600181600160801b811015612890575b61283861282e61282461281a61281061280661284497600488600160401b61283f9a1015612883575b640100000000811015612876575b62010000811015612869575b61010081101561285d575b6010811015612851575b1015612849575b60030260011c6127ff818b612757565b0160011c90565b6127ff818a612757565b6127ff8189612757565b6127ff8188612757565b6127ff8187612757565b6127ff8186612757565b8093612757565b821190565b900390565b60011b6127ef565b811c9160021b916127e8565b60081c91811b916127de565b60101c9160081b916127d3565b60201c9160101b916127c7565b60401c9160201b916127b9565b50600160401b9050608082901c612790565b600a54600090806128b4575050600090565b806000198101116108b557600a7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a79252015460301c90565b8054600091816128fe57505050600090565b6000199282848101116108b55760209181522001015460301c90565b634e487b7160e01b600052603260045260246000fd5b8054821015610a825760005260206000200190600090565b600a5490600160401b821015611a38576001820180600a55821015610a8257600a600052805160209091015160301b65ffffffffffff191665ffffffffffff9190911617600080516020612df283398151915290910155565b8054600160401b811015611a38576129be91600182018155612930565b6129e957815160209092015160301b65ffffffffffff191665ffffffffffff92909216919091179055565b634e487b7160e01b600052600060045260246000fd5b600a549192918015612abe57612a17612a2f9161263a565b600a600052600080516020612df28339815191520190565b9081549165ffffffffffff90818416918316808311612aac57869203612a7457612a6d92509065ffffffffffff82549181199060301b169116179055565b60301c9190565b5050612aa790612a93612a85611a97565b65ffffffffffff9092168252565b6001600160d01b0385166020820152612948565b612a6d565b604051632520601d60e01b8152600490fd5b50612ae290612ace612a85611a97565b6001600160d01b0384166020820152612948565b60009190565b80549293928015612b7f57612aff612b0c9161263a565b8260005260206000200190565b9182549265ffffffffffff91828516928116808411612aac57879303612b4b5750612a6d92509065ffffffffffff82549181199060301b169116179055565b915050612aa791612b6b612b5d611a97565b65ffffffffffff9093168352565b6001600160d01b03861660208301526129a1565b5090612ae291612b90612b5d611a97565b6001600160d01b03851660208301526129a1565b905b828110612bb257505090565b90918082169080831860011c82018092116108b557600a60005265ffffffffffff8083600080516020612df283398151915201541690851610600014612bfb5750915b90612ba6565b929150612c079061265a565b90612bf5565b15612c1457565b60405162461bcd60e51b8152602060048201526016602482015275125b999b185d1a5bdb8818d85c08195e18d95959195960521b6044820152606490fd5b91906001600160a01b0383168015611e40576002548281018091116108b5576002556001600160a01b038416600090815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3600254926001600160d01b038411612cd857611aa4929350612d0d565b604051630e58ae9360e11b8152600481018590526001600160d01b036024820152604490fd5b60001981146108b55760010190565b90611aa491612d23612d1e836125d5565b611cad565b50506001600160a01b03908116908115612d73575b60086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c754600092835260409092205481169116611b25565b612d7f612073846125d5565b5050612d38565b611aa492916001600160a01b03918216919081908315612dde575b16918215612dcb575b60005260086020528060406000205416916000526040600020541690611b25565b612dd7612073856125d5565b5050612daa565b612dea612d1e866125d5565b5050612da156fec65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8a26469706673582212200c35260c2a0914257b2058cf9495eaf2c0699f5a74e9c74fbd05a2a8a011fdd764736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH2 0x160 CALLVALUE PUSH3 0x526 JUMPI PUSH1 0x1F PUSH3 0x384F CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x2F9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x526 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x526 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH3 0x64 DUP3 PUSH3 0x52B JUMP JUMPDEST PUSH1 0xA DUP3 MSTORE PUSH10 0x13DB5B9A5B1A5C5D5A59 PUSH1 0xB2 SHL SWAP1 DUP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH3 0x8C DUP4 PUSH3 0x52B JUMP JUMPDEST PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH3 0xA4 DUP5 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x4 DUP5 MSTORE PUSH4 0x4F4D4E49 PUSH1 0xE0 SHL PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH3 0xC4 DUP5 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP6 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2F9 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x51B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x3EE JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x4A6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x41B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x40F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2F9 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x404 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x3EE JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x388 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x31B JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x30F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH3 0x1B3 DUP2 PUSH3 0x66B JUMP JUMPDEST SWAP2 PUSH2 0x120 SWAP3 DUP4 MSTORE PUSH3 0x1C5 DUP5 PUSH3 0x82F JUMP JUMPDEST SWAP2 PUSH2 0x140 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP4 DUP5 PUSH1 0xE0 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH2 0x100 SWAP5 DUP3 DUP7 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CHAINID PUSH1 0x80 DUP5 ADD MSTORE ADDRESS PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 MSTORE PUSH1 0xC0 DUP4 ADD SWAP3 DUP1 DUP5 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH3 0x2F9 JUMPI PUSH3 0x2AA SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0xC SSTORE PUSH11 0x422CA8B0A00A425000000 PUSH1 0xD SSTORE PUSH1 0x32 PUSH1 0x11 SSTORE PUSH1 0x14 PUSH1 0x12 SSTORE PUSH2 0x1388 PUSH1 0x13 SSTORE PUSH2 0x7D0 DUP1 PUSH1 0x14 SSTORE PUSH2 0x3E8 PUSH1 0x15 SSTORE PUSH1 0x16 SSTORE PUSH3 0x2A3 DUP2 PUSH3 0x547 JUMP JUMPDEST POP PUSH3 0x5C8 JUMP JUMPDEST POP TIMESTAMP PUSH1 0xE SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2E47 SWAP4 DUP5 PUSH3 0x9E8 DUP6 CODECOPY PUSH1 0x80 MLOAD DUP5 PUSH2 0x22C4 ADD MSTORE PUSH1 0xA0 MLOAD DUP5 PUSH2 0x237F ADD MSTORE PUSH1 0xC0 MLOAD DUP5 PUSH2 0x228E ADD MSTORE PUSH1 0xE0 MLOAD DUP5 PUSH2 0x2313 ADD MSTORE MLOAD DUP4 PUSH2 0x2339 ADD MSTORE MLOAD DUP3 PUSH2 0xCF3 ADD MSTORE MLOAD DUP2 PUSH2 0xD1F ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x192 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x36F JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x355 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x1A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x346 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x32F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH3 0x3E6 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x3D9 JUMPI POP POP PUSH3 0x173 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3C1 JUMP JUMPDEST POP DUP1 PUSH3 0x3C1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x15F JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x126 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x48D JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x473 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x13C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x464 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x44C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x510 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x500 JUMPI POP PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x4F1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x4E3 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x2F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x5C4 JUMPI DUP2 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x382F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x335E1B54CA43DF00436BB5FE7358AF00AEA8249F479068439ED5A193DFC6FCE9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x71840DC4906352362B0CDAF79870196C8E42ACAFADE72D5D5A6D59291253CEB1 SWAP1 PUSH1 0xFF AND PUSH3 0x666 JUMPI DUP1 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x382F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0x70A JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x6A9 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x69A JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x6F0 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x6CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2F9 JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x824 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3EE JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x7ED JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x783 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x777 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x761 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x7D2 JUMPI POP POP POP LT PUSH3 0x7B8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7AB JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x798 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD DUP8 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD DUP9 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x817 JUMPI POP POP PUSH3 0x743 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x807 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x730 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x8BD JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x85C JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x69A JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x8A3 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x87F JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2F9 JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x9DC JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3EE JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x9A2 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x936 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x92A JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x913 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x987 JUMPI POP POP POP LT PUSH3 0x96D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x95F JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x94C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x9CF JUMPI POP POP PUSH3 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x9BF JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x8E2 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x967A771 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x503C2A80 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5158CD09 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x66C8E57C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x69EE19AF EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x6B4E8BB0 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x6EBEFE7E EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7A1370B5 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x7AB56083 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x882693B1 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xABEC147A EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xAE3302C2 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB7902303 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC1542352 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC3C05293 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xD3127E63 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD80A619F EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xDC8FAFF4 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x289 JUMPI PUSH4 0xF36C8F5C EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AA JUMP JUMPDEST PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x11C5 JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3ED JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3DC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x41E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3FD JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x443 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD PUSH2 0x469 DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x1 EQ PUSH2 0x4A3 JUMPI JUMPDEST PUSH2 0x49F DUP6 PUSH2 0x493 DUP2 DUP8 SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x432 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP3 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x4E6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x493 DUP3 PUSH2 0x49F PUSH2 0x483 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x4CB JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x49F SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x493 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x483 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x573 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x5E0 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5F7 DUP4 CALLER DUP4 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1D60 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD PUSH2 0x64A PUSH2 0x541 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x665 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x18DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x6A3 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x6C4 PUSH2 0x541 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x6E0 JUMPI PUSH2 0x66A SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x70B PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x717 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF DUP4 AND DUP3 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x49F SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x75B SWAP1 PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x7B6 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x7C2 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH1 0xC SLOAD LT PUSH2 0x87A JUMPI PUSH2 0x85D PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP2 PUSH2 0x807 PUSH1 0xE SLOAD PUSH2 0x2649 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x862 JUMPI JUMPDEST PUSH2 0x839 PUSH2 0x834 DUP6 PUSH1 0xF SLOAD PUSH2 0x82F PUSH2 0x825 DUP4 DUP4 PUSH2 0x2668 JUMP JUMPDEST PUSH1 0xD SLOAD LT ISZERO PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x2668 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x843 DUP5 DUP3 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x86C PUSH1 0x0 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x875 TIMESTAMP PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1D10 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x1FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x8F1 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x902 NUMBER PUSH2 0x2608 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x957 JUMPI PUSH2 0x49F PUSH1 0x40 MLOAD PUSH2 0x919 DUP2 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x8B5 JUMPI DUP5 LT ISZERO PUSH2 0x9C7 JUMPI JUMPDEST PUSH2 0x9C2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP PUSH2 0x9B9 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9FC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9EE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x443 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9DC JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH2 0xA3B PUSH2 0x23CB JUMP JUMPDEST SWAP1 DUP1 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x49F DUP6 DUP3 PUSH2 0xA10 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA7D SWAP3 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD MSTORE PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x291A JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xAAB PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH2 0xADE PUSH2 0x52B JUMP JUMPDEST CALLER PUSH2 0x1AA6 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBB4 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xBDC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x6A3 PUSH2 0xC19 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH2 0xC50 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xC5F DUP3 CALLER DUP4 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC1 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xD6D PUSH2 0xD17 PUSH32 0x0 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x49F PUSH2 0xD43 PUSH32 0x0 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xD7B PUSH2 0xD4E PUSH2 0x23F9 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x3F2 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x9DC JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH32 0x17E876F6956B36DDE6C5DD9DF30E484BFEFA90239FF982E267ABF6C45D018402 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x1861 JUMP JUMPDEST DUP1 PUSH1 0x11 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE05 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP3 LT ISZERO PUSH2 0xEDC JUMPI POP PUSH2 0xE22 SWAP1 PUSH2 0x2608 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 PUSH1 0x5 DUP2 GT PUSH2 0xE86 JUMPI JUMPDEST POP PUSH2 0xE3E SWAP4 POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE5E JUMPI POP POP PUSH1 0x20 PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA PUSH2 0xE6B PUSH1 0x20 SWAP4 PUSH2 0x263A JUMP JUMPDEST SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x30 SHR PUSH2 0xE4C JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xE91 DUP3 PUSH2 0x2777 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI PUSH2 0xE3E SWAP5 PUSH1 0xA DUP5 MSTORE DUP1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0xECA JUMPI POP SWAP2 JUMPDEST CODESIZE PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0xED6 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xF49 PUSH2 0xF23 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0xF71 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD PUSH2 0xFA4 DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFCD JUMPI PUSH2 0x49F DUP6 PUSH2 0x493 DUP2 DUP8 SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP4 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x1010 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x493 DUP3 PUSH2 0x49F PUSH2 0x483 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1049 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xD0 SHL SUB PUSH2 0x1068 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x10A9 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D60 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x10D8 PUSH2 0x1861 JUMP JUMPDEST DUP3 DUP3 ADD DUP1 DUP4 GT PUSH2 0x8B5 JUMPI DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI DUP5 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH2 0x2710 SUB PUSH2 0x1170 JUMPI PUSH32 0x31372A128FC1946AA198A9D7C72E23D7106618D46C478A053897FC73F3BE48BC SWAP4 PUSH2 0x116B SWAP2 PUSH2 0x112D DUP5 PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH2 0x1136 DUP6 PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0x113F DUP2 PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH2 0x1148 DUP3 PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4D75737420657175616C2031303025 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x1225 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x122D PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x7AA78E1BAF57AF40DEDE9E6B906523DCD0DE972D7ED5E1961F0FCC2B9CF19F00 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x12AC PUSH2 0x52B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x12BB PUSH2 0x1273 JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x1343 JUMPI PUSH2 0x1337 PUSH2 0x66A SWAP5 PUSH2 0x133E SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x131F DUP3 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1332 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH32 0xB0F01601E93AD2A8FC4106E97567BC037AA114741705BE9D80570FD2AFA7BF1B PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x139B PUSH2 0x1861 JUMP JUMPDEST DUP1 PUSH1 0x12 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x13C1 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x13C9 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x13D8 PUSH2 0x1283 JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x14C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH2 0x147C SWAP3 SWAP1 SWAP2 PUSH2 0x1469 PUSH1 0xE0 DUP4 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1332 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x1499 JUMPI POP PUSH2 0x66A SWAP3 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD PUSH2 0x1536 PUSH2 0x541 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1551 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x1593 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x15EA JUMPI DUP2 PUSH32 0x3BADD8C132BB1C7264C8A842670580D2BDAD682383A87A17638AE047444E6D20 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x116B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x4D61782031303025 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x1687 PUSH2 0x1656 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x165E PUSH2 0x541 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x16A9 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x16B1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x1710 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI PUSH2 0x49F SWAP2 PUSH2 0x1760 SWAP2 PUSH2 0x1731 PUSH2 0x20C7 JUMP JUMPDEST POP PUSH2 0x173A PUSH2 0x20C7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x175A PUSH2 0x20C7 JUMP JUMPDEST POP PUSH2 0x2930 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x176E DUP3 PUSH2 0x1A1C JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x30 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x20 SWAP3 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x71840DC4906352362B0CDAF79870196C8E42ACAFADE72D5D5A6D59291253CEB1 DUP2 MSTORE RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x1843 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x335E1B54CA43DF00436BB5FE7358AF00AEA8249F479068439ED5A193DFC6FCE9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x71840DC4906352362B0CDAF79870196C8E42ACAFADE72D5D5A6D59291253CEB1 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1906 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x196E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x19A0 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x196E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1AA4 DUP3 PUSH2 0x1A1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH2 0x1AA4 SWAP7 SWAP5 AND SWAP5 PUSH2 0x1B23 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP1 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP2 DUP6 EQ ISZERO DUP1 PUSH2 0x1C6E JUMPI JUMPDEST PUSH2 0x1B4D JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1BD2 JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B62 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1BAF SWAP2 PUSH2 0x1BA9 SWAP1 SWAP2 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1BF2 DUP5 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1BFB NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 DUP1 PUSH2 0x1C0F DUP7 PUSH2 0x28EC JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x8B5 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C64 SWAP3 PUSH2 0x1C4B SWAP3 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1B53 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1B41 JUMP JUMPDEST SWAP1 PUSH2 0x1C81 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 DUP1 PUSH2 0x1C95 DUP7 PUSH2 0x28EC JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI PUSH2 0x1CA9 SWAP3 PUSH2 0x2AE8 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1CB6 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP1 PUSH2 0x1CCA PUSH2 0x28A2 JUMP JUMPDEST AND SWAP2 AND ADD SWAP1 DUP2 GT PUSH2 0x8B5 JUMPI PUSH2 0x1CA9 SWAP2 PUSH2 0x29FF JUMP JUMPDEST PUSH2 0x1CE7 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP1 PUSH2 0x1CFB PUSH2 0x28A2 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP1 DUP2 GT PUSH2 0x1D10 JUMPI PUSH2 0x1CA9 SWAP2 PUSH2 0x29FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1D56 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D40 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 ISZERO PUSH2 0x1E59 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 DUP5 DUP8 LT PUSH2 0x1E11 JUMPI DUP5 PUSH2 0x1AA4 SWAP7 SWAP8 SUB PUSH2 0x1DC2 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x1F0D JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x1EF4 JUMPI DUP1 PUSH2 0x1EEA PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x1ED3 PUSH1 0x20 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP8 AND DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP4 ADD PUSH2 0x1F64 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP4 LT PUSH2 0x1FA5 JUMPI ISZERO PUSH2 0x1F0D JUMPI DUP3 AND ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1F99 SWAP3 PUSH2 0x1ED3 SWAP2 SUB SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 DUP4 DUP7 LT PUSH2 0x2096 JUMPI SWAP1 PUSH1 0x20 SWAP3 SWAP2 PUSH2 0x2030 DUP6 PUSH2 0x1AA4 SWAP8 SWAP9 SUB SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP6 DUP7 SWAP4 LOG3 PUSH2 0x2078 PUSH2 0x2073 DUP6 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST POP POP DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 DUP2 DUP5 KECCAK256 SLOAD AND SWAP3 DUP1 DUP1 MSTORE KECCAK256 SLOAD AND SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x20D4 DUP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 SWAP2 DUP2 SWAP1 SUB PUSH2 0x210E JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP2 PUSH2 0x443 SWAP4 SWAP2 PUSH2 0x2145 SWAP4 PUSH2 0x214E JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x21FE JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x21D2 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x21C6 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x21BD JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x21E8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2207 DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP1 PUSH2 0x2210 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2233 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x225D JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2269 PUSH1 0x3 SWAP3 PUSH2 0x21DE JUMP JUMPDEST EQ PUSH2 0x2271 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x237C JUMPI JUMPDEST ISZERO PUSH2 0x22E6 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x2376 DUP2 PUSH2 0x1A59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x22BD JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x23B0 PUSH2 0x228B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x140 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x2460 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2444 DUP4 PUSH2 0x1A1C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2473 DUP4 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x24F9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249A JUMPI JUMPDEST POP PUSH2 0x443 SWAP3 POP SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x24DE JUMPI POP PUSH2 0x443 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x443 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x253D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2444 DUP4 PUSH2 0x1A1C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2550 DUP4 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x24F9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2576 JUMPI POP PUSH2 0x443 SWAP3 POP SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x25BA JUMPI POP PUSH2 0x443 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x25E9 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x261B JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 PUSH4 0x1E13380 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x270C JUMPI JUMPDEST POP SWAP2 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x26BC JUMPI POP POP PUSH1 0x0 DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0x26A5 JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26B0 PUSH1 0x20 SWAP3 PUSH2 0x263A JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x26FA JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2689 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2706 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0x26F4 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2717 DUP3 PUSH2 0x2777 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI DUP5 DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x20 DUP7 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2747 JUMPI POP SWAP1 JUMPDEST CODESIZE PUSH2 0x2684 JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 SWAP1 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x2741 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2761 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT ISZERO PUSH2 0x2890 JUMPI JUMPDEST PUSH2 0x2838 PUSH2 0x282E PUSH2 0x2824 PUSH2 0x281A PUSH2 0x2810 PUSH2 0x2806 PUSH2 0x2844 SWAP8 PUSH1 0x4 DUP9 PUSH1 0x1 PUSH1 0x40 SHL PUSH2 0x283F SWAP11 LT ISZERO PUSH2 0x2883 JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2876 JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2869 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x285D JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2851 JUMPI JUMPDEST LT ISZERO PUSH2 0x2849 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x27FF DUP2 DUP12 PUSH2 0x2757 JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP11 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP10 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP9 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP8 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP7 PUSH2 0x2757 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x2757 JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x27EF JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x27B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x40 SHL SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2790 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x28B4 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x8B5 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x28FE JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x8B5 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1A38 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1A38 JUMPI PUSH2 0x29BE SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x29E9 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2ABE JUMPI PUSH2 0x2A17 PUSH2 0x2A2F SWAP2 PUSH2 0x263A JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2AAC JUMPI DUP7 SWAP3 SUB PUSH2 0x2A74 JUMPI PUSH2 0x2A6D SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2AA7 SWAP1 PUSH2 0x2A93 PUSH2 0x2A85 PUSH2 0x1A97 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x2AE2 SWAP1 PUSH2 0x2ACE PUSH2 0x2A85 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2B7F JUMPI PUSH2 0x2AFF PUSH2 0x2B0C SWAP2 PUSH2 0x263A JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2AAC JUMPI DUP8 SWAP4 SUB PUSH2 0x2B4B JUMPI POP PUSH2 0x2A6D SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AA7 SWAP2 PUSH2 0x2B6B PUSH2 0x2B5D PUSH2 0x1A97 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x29A1 JUMP JUMPDEST POP SWAP1 PUSH2 0x2AE2 SWAP2 PUSH2 0x2B90 PUSH2 0x2B5D PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x29A1 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2BB2 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2BFB JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2C07 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0x2BF5 JUMP JUMPDEST ISZERO PUSH2 0x2C14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B999B185D1A5BDB8818D85C08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 GT PUSH2 0x2CD8 JUMPI PUSH2 0x1AA4 SWAP3 SWAP4 POP PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AA4 SWAP2 PUSH2 0x2D23 PUSH2 0x2D1E DUP4 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D73 JUMPI JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SLOAD PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD DUP2 AND SWAP2 AND PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x2D7F PUSH2 0x2073 DUP5 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x1AA4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 SWAP1 DUP4 ISZERO PUSH2 0x2DDE JUMPI JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x2DCB JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x2DD7 PUSH2 0x2073 DUP6 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x2DEA PUSH2 0x2D1E DUP7 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2DA1 JUMP INVALID 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC CALLDATALOAD 0x26 0xC 0x2A MULMOD EQ 0x25 PUSH28 0x2058CF9495EAF2C0699F5A74E9C74FBD05A2A8A011FDD764736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"542:4675:43:-:0;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;542:4675:43;;;;;;;-1:-1:-1;;;;;542:4675:43;;;;1667:13:13;542:4675:43;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;1667:13:13;542:4675:43;;;;;1667:13:13;542:4675:43;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;1667:13:13;542:4675:43;;;;;;;;3401:45:31;;;:::i;:::-;3393:53;;;;;3467:51;;;:::i;:::-;3456:62;;;;;542:4675:43;;;;;3542:22:31;3528:36;;;;542:4675:43;;;;;3591:25:31;3574:42;;;;;;3644:13;542:4675:43;3627:30:31;542:4675:43;;4204:80:31;542:4675:43;4204:80:31;;2079:95;;;;542:4675:43;2079:95:31;;;;;;;3644:13;2079:95;;;;4278:4;542:4675:43;2079:95:31;;;542:4675:43;4204:80:31;;2079:95;542:4675:43;;;;;;;;;;;;;;;;2082:46;542:4675;;;;4194:91:31;;2079:95;3667:48;4278:4;2079:95;3725:27;816:18:43;;542:4675;878:16;;542:4675;1078:2;;542:4675;1139:2;;542:4675;1198:4;;542:4675;1257:4;542:4675;1139:2;542:4675;1316:4;;542:4675;1375:4;542:4675;2023:49;;;:::i;:::-;;2082:46;:::i;:::-;;2160:15;2138:37;542:4675;;;;;;;;;;2079:95:31;542:4675:43;;;;;;;;;;;2079:95:31;542:4675:43;;;;;3528:36:31;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;-1:-1:-1;542:4675:43;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:13;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;-1:-1:-1;542:4675:43;;;;;;;-1:-1:-1;542:4675:43;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;1667:13:13;-1:-1:-1;542:4675:43;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:13;542:4675:43;;;;;;;;;;1667:13:13;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:13;-1:-1:-1;542:4675:43;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;-1:-1:-1;542:4675:43;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;2954:6:0;542:4675:43;;;;;;;;;;;;;;;;;;;;;;735:10:22;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;542:4675:43;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;542:4675:43;-1:-1:-1;542:4675:43;;;;;;;;;;-1:-1:-1;;542:4675:43;745:28;;542:4675;;;;;;;2954:6:0;542:4675:43;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:22;6370:40:0;;;542:4675:43;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;2887:340:27:-;542:4675:43;;3032:2:27;;542:4675:43;3010:24:27;;;3032:2;;;542:4675:43;;1854:2:27;542:4675:43;;1840:16:27;1836:72;;542:4675:43;;;;;;;;;;;;1949:36:27;;3050:27;:::o;542:4675:43:-;;;;;;;;;;1949:36:27;3050:27;:::o;1836:72::-;542:4675:43;;;1879:18:27;;;;;;;;;;;542:4675:43;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;1854:2:27;542:4675:43;;;;;;;1879:18:27;;;;542:4675:43;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;3006:215:27;-1:-1:-1;;;;;542:4675:43;;;;3432:13:31;542:4675:43;;;;;;;;;;;;;;;;3006:215:27;542:4675:43;;;;;;;;;;;3006:215:27;542:4675:43;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;1390:66:27;3168:42;:::o;542:4675:43:-;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;1390:66:27;3168:42;:::o;542:4675:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;-1:-1:-1;542:4675:43;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;2887:340:27;542:4675:43;;3032:2:27;;3010:24;;;3032:2;;;542:4675:43;1854:2:27;542:4675:43;;1840:16:27;1836:72;;542:4675:43;;;;;;;;;;;;1949:36:27;;3050:27;:::o;1836:72::-;542:4675:43;;;1879:18:27;;;;;;;;;;;542:4675:43;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;1854:2:27;542:4675:43;;;;;;;1879:18:27;;;;542:4675:43;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;3006:215:27;542:4675:43;-1:-1:-1;;;;;542:4675:43;;;;3501:16:31;542:4675:43;;;;;;;;;;;;;;3006:215:27;542:4675:43;;;;;;;;;;;3006:215:27;542:4675:43;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;3501:16:31;542:4675:43;1390:66:27;3168:42;:::o;542:4675:43:-;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;3501:16:31;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;3501:16:31;542:4675:43;1390:66:27;3168:42;:::o;542:4675:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;3501:16:31;-1:-1:-1;542:4675:43;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1323,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13521":{"entryPoint":1345,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8":{"entryPoint":4723,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_13585":{"entryPoint":4739,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_string":{"entryPoint":1074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":1010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Checkpoint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_23880":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_uint256_uint48":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":9209,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn_13540":{"entryPoint":9163,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Checkpoint208":{"entryPoint":8391,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":6807,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr":{"entryPoint":10657,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr_28599":{"entryPoint":10568,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":9832,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_13533":{"entryPoint":9801,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_13642":{"entryPoint":9818,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_CLOCK_MODE":{"entryPoint":2263,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":4209,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DOMAIN_SEPARATOR":{"entryPoint":1672,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_GOVERNANCE_ROLE":{"entryPoint":6058,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":5340,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowance":{"entryPoint":5688,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":1367,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":3067,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":2234,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnFrom":{"entryPoint":3124,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_buybackBurnPercentage":{"entryPoint":2873,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_checkpoints":{"entryPoint":5879,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_clock":{"entryPoint":3925,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decimals":{"entryPoint":1644,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegate":{"entryPoint":2754,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegateBySig":{"entryPoint":4755,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegates":{"entryPoint":2695,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_eip712Domain":{"entryPoint":3290,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDiscountForStakedAmount":{"entryPoint":2409,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDiscountTiers":{"entryPoint":2593,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastTotalSupply":{"entryPoint":3560,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastVotes":{"entryPoint":1778,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1532,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVotes":{"entryPoint":4136,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":1579,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":3843,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_insuranceFund":{"entryPoint":4549,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_insuranceFundPercentage":{"entryPoint":1416,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lastInflationUpdate":{"entryPoint":2903,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxLeverage":{"entryPoint":4519,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxSupply":{"entryPoint":5462,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":1949,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1094,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nonces":{"entryPoint":3232,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_numCheckpoints":{"entryPoint":2963,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_permit":{"entryPoint":5032,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":1707,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":5399,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDiscountTier":{"entryPoint":5492,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setInsuranceFund":{"entryPoint":4620,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMaxLeverage":{"entryPoint":4956,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setRewardDistribution":{"entryPoint":4275,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setTradingFeeBase":{"entryPoint":3484,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setTreasury":{"entryPoint":5776,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stakingDiscountTiers":{"entryPoint":2829,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stakingRewardPercentage":{"entryPoint":4590,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1446,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tradingFeeBase":{"entryPoint":3172,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":4237,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1476,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_treasury":{"entryPoint":2788,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_treasuryPercentage":{"entryPoint":3202,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_yearlyInflationCap":{"entryPoint":5658,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_yearlyMinted":{"entryPoint":2933,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7462,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6773,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_13599":{"entryPoint":6684,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_23865":{"entryPoint":6717,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_23872":{"entryPoint":6745,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":7794,"id":1936,"parameterSlots":3,"returnSlots":0},"fun_balanceOf":{"entryPoint":null,"id":1571,"parameterSlots":1,"returnSlots":1},"fun_burn":{"entryPoint":8148,"id":1858,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":6329,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_13532":{"entryPoint":6117,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_13553":{"entryPoint":6241,"id":93,"parameterSlots":0,"returnSlots":0},"fun_delegate":{"entryPoint":6822,"id":950,"parameterSlots":2,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":8843,"id":4500,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":6362,"id":256,"parameterSlots":2,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":9125,"id":4537,"parameterSlots":1,"returnSlots":1},"fun_insert":{"entryPoint":10984,"id":9166,"parameterSlots":3,"returnSlots":2},"fun_insert_23869":{"entryPoint":10751,"id":9166,"parameterSlots":2,"returnSlots":2},"fun_latest":{"entryPoint":10476,"id":8991,"parameterSlots":1,"returnSlots":1},"fun_latest_23868":{"entryPoint":10402,"id":8991,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":11346,"id":1825,"parameterSlots":2,"returnSlots":0},"fun_moveDelegateVotes":{"entryPoint":6949,"id":1083,"parameterSlots":3,"returnSlots":0},"fun_push":{"entryPoint":7287,"id":1155,"parameterSlots":2,"returnSlots":2},"fun_push_13729":{"entryPoint":7341,"id":1155,"parameterSlots":1,"returnSlots":2},"fun_push_13730":{"entryPoint":7390,"id":1155,"parameterSlots":1,"returnSlots":2},"fun_recover":{"entryPoint":8502,"id":4327,"parameterSlots":4,"returnSlots":1},"fun_revokeRole":{"entryPoint":6516,"id":294,"parameterSlots":2,"returnSlots":1},"fun_spendAllowance":{"entryPoint":7974,"id":1984,"parameterSlots":3,"returnSlots":0},"fun_sqrt":{"entryPoint":10103,"id":5699,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":8702,"id":4376,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":9499,"id":3553,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_13549":{"entryPoint":9250,"id":3553,"parameterSlots":1,"returnSlots":1},"fun_toUint208":{"entryPoint":9685,"id":6515,"parameterSlots":1,"returnSlots":1},"fun_toUint48":{"entryPoint":9736,"id":7075,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":7520,"id":1715,"parameterSlots":3,"returnSlots":0},"fun_transferVotingUnits":{"entryPoint":11654,"id":1005,"parameterSlots":3,"returnSlots":0},"fun_transferVotingUnits_13691":{"entryPoint":11533,"id":1005,"parameterSlots":2,"returnSlots":0},"fun_tryRecover":{"entryPoint":8526,"id":4291,"parameterSlots":4,"returnSlots":3},"fun_unsafeAccess":{"entryPoint":null,"id":9285,"parameterSlots":2,"returnSlots":1},"fun_unsafeAccess_28600":{"entryPoint":null,"id":9285,"parameterSlots":1,"returnSlots":1},"fun_upperBinaryLookup":{"entryPoint":11172,"id":9218,"parameterSlots":3,"returnSlots":1},"fun_upperLookupRecent":{"entryPoint":9845,"id":8961,"parameterSlots":2,"returnSlots":1},"fun_useCheckedNonce":{"entryPoint":8416,"id":3246,"parameterSlots":2,"returnSlots":0},"fun_useNonce":{"entryPoint":null,"id":3221,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":11518,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_13603":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_13608":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_13616":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10522,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6662,"id":null,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral_16d5":{"entryPoint":11277,"id":null,"parameterSlots":1,"returnSlots":0},"shift_right_uint256_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_struct_Checkpoint208_dyn":{"entryPoint":10544,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_uint208_to_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13534":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13535":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13536":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13567":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13569":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13570":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13622":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":8670,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_div_uint256":{"entryPoint":10071,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"4398":[{"length":32,"start":8900}],"4400":[{"length":32,"start":9087}],"4402":[{"length":32,"start":8846}],"4404":[{"length":32,"start":8979}],"4406":[{"length":32,"start":9017}],"4409":[{"length":32,"start":3315}],"4412":[{"length":32,"start":3359}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461039757806306fdde0314610392578063095ea7b31461038d5780630967a7711461038857806318160ddd1461038357806323b872dd1461037e578063248a9ca3146103795780632f2ff15d14610374578063313ce5671461036f5780633644e5151461036a57806336568abe146103655780633a46b1a81461036057806340c10f191461035b57806342966c68146103565780634bf5d7e914610351578063503c2a801461034c5780635158cd0914610347578063587cde1e146103425780635c19a95c1461033d57806361d027b31461033857806366c8e57c1461033357806369ee19af1461032e5780636b4e8bb0146103295780636ebefe7e146103245780636fcfff451461031f57806370a082311461031a57806379cc6790146103155780637a1370b5146103105780637ab560831461030b5780637ecebe001461030657806384b0196e14610301578063882693b1146102fc5780638e539e8c146102f757806391d14854146102f257806391ddadf4146102ed57806395d89b41146102e85780639ab24eb0146102e3578063a217fddf146102de578063a9059cbb146102d9578063abec147a146102d4578063ae3302c2146102cf578063b7902303146102ca578063c1542352146102c5578063c3c05293146102c0578063c3cda520146102bb578063d3127e63146102b6578063d505accf146102b1578063d5391393146102ac578063d547741f146102a7578063d5abeb01146102a2578063d80a619f1461029d578063dc8faff414610298578063dd62ed3e14610293578063f0f442601461028e578063f1127ed8146102895763f36c8f5c1461028457600080fd5b6117aa565b6116f7565b611690565b611638565b61161a565b611574565b611556565b611517565b6114dc565b6113a8565b61135c565b611293565b61120c565b6111ee565b6111c5565b6111a7565b6110b3565b61108d565b611071565b611028565b610f81565b610f55565b610f03565b610de8565b610d9c565b610cda565b610ca0565b610c82565b610c64565b610c34565b610bfb565b610b93565b610b75565b610b57565b610b39565b610b0d565b610ae4565b610ac2565b610a87565b610a21565b610969565b6108d7565b6108ba565b61079d565b6106f2565b6106ab565b610688565b61066c565b61062b565b6105fc565b6105c4565b6105a6565b610588565b610557565b610446565b346103ed5760203660031901126103ed5760043563ffffffff60e01b81168091036103ed57602090637965db0b60e01b81149081156103dc575b506040519015158152f35b6301ffc9a760e01b149050386103d1565b600080fd5b919082519283825260005b84811061041e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103fd565b9060206104439281815201906103f2565b90565b346103ed5760008060031936011261052857604051908060035461046981611d26565b808552916001918083169081156104fe57506001146104a3575b61049f8561049381870382611a75565b60405191829182610432565b0390f35b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106104e65750505081016020016104938261049f610483565b805460208587018101919091529093019281016104cb565b86955061049f9693506020925061049394915060ff191682840152151560051b8201019293610483565b80fd5b600435906001600160a01b03821682036103ed57565b602435906001600160a01b03821682036103ed57565b346103ed5760403660031901126103ed5761057d61057361052b565b6024359033611e72565b602060405160018152f35b346103ed5760003660031901126103ed576020601654604051908152f35b346103ed5760003660031901126103ed576020600254604051908152f35b346103ed5760603660031901126103ed5761057d6105e061052b565b6105e8610541565b604435916105f7833383611f26565b611d60565b346103ed5760203660031901126103ed57600435600052600b6020526020600160406000200154604051908152f35b346103ed5760403660031901126103ed5761066a60043561064a610541565b9080600052600b6020526106656001604060002001546118b9565b6118da565b005b346103ed5760003660031901126103ed57602060405160128152f35b346103ed5760003660031901126103ed5760206106a361228b565b604051908152f35b346103ed5760403660031901126103ed576106c4610541565b336001600160a01b038216036106e05761066a90600435611974565b60405163334bd91960e11b8152600490fd5b346103ed5760403660031901126103ed5761070b61052b565b60243561071743612608565b9165ffffffffffff8316821015610772576001600160a01b0316600090815260096020526040902061049f92506001600160d01b0391610761919061075b90612608565b90612675565b604051911681529081906020820190565b50604051637669fc0f60e11b8152600481019190915265ffffffffffff919091166024820152604490fd5b346103ed5760403660031901126103ed576107b661052b565b602435906107c26117e5565b6002548281018091116108b557600c541061087a5761085d7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe91610807600e54612649565b4211610862575b61083961083485600f5461082f6108258383612668565b600d541015612c0d565b612668565b600f55565b6108438482612c52565b6040519384526001600160a01b0316929081906020820190565b0390a2005b61086c6000600f55565b61087542600e55565b61080e565b60405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b6044820152606490fd5b611d10565b346103ed5760203660031901126103ed5761066a60043533611fd4565b346103ed5760003660031901126103ed576108f143612608565b65ffffffffffff8061090243612608565b169116036109575761049f60405161091981611a1c565b601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c7400000060208201526040519182916020835260208301906103f2565b6040516301bfc1c560e61b8152600490fd5b346103ed576020806003193601126103ed5760043590600090815b600a811061099757604051838152602090f35b683635c9adc5dea000008082029082820414821517156108b5578410156109c7575b6109c290612cfe565b610984565b600081815260108352604090205492506109b9565b90815180825260208080930193019160005b8281106109fc575050505090565b8351855293810193928101926001016109ee565b9060206104439281815201906109dc565b346103ed5760008060031936011261052857610a3b6123cb565b90805b600a8110610a54576040518061049f8582610a10565b8082526020906010825260408320548451821015610a8257610a7d928260051b86010152612cfe565b610a3e565b61291a565b346103ed5760203660031901126103ed5760206001600160a01b0380610aab61052b565b166000526008825260406000205416604051908152f35b346103ed5760203660031901126103ed5761066a610ade61052b565b33611aa6565b346103ed5760003660031901126103ed576017546040516001600160a01b039091168152602090f35b346103ed5760203660031901126103ed5760043560005260106020526020604060002054604051908152f35b346103ed5760003660031901126103ed576020601554604051908152f35b346103ed5760003660031901126103ed576020600e54604051908152f35b346103ed5760003660031901126103ed576020600f54604051908152f35b346103ed5760203660031901126103ed576001600160a01b03610bb461052b565b16600052600960205260406000205463ffffffff90818111610bdc5760209160405191168152f35b604490604051906306dfcc6560e41b8252602060048301526024820152fd5b346103ed5760203660031901126103ed5760206106a3610c1961052b565b6001600160a01b031660009081526020819052604090205490565b346103ed5760403660031901126103ed5761066a610c5061052b565b60243590610c5f823383611f26565b611fd4565b346103ed5760003660031901126103ed576020601154604051908152f35b346103ed5760003660031901126103ed576020601454604051908152f35b346103ed5760203660031901126103ed576001600160a01b03610cc161052b565b1660005260076020526020604060002054604051908152f35b346103ed5760003660031901126103ed57610d6d610d177f0000000000000000000000000000000000000000000000000000000000000000612422565b61049f610d437f000000000000000000000000000000000000000000000000000000000000000061251b565b610d7b610d4e6123f9565b91604051958695600f60f81b875260e0602088015260e08701906103f2565b9085820360408701526103f2565b90466060850152306080850152600060a085015283820360c08501526109dc565b346103ed5760203660031901126103ed577f17e876f6956b36dde6c5dd9df30e484bfefa90239ff982e267abf6c45d0184026020600435610ddb611861565b80601155604051908152a1005b346103ed5760203660031901126103ed57600435610e0543612608565b9065ffffffffffff91828116821015610edc5750610e2290612608565b600a54906000908260058111610e86575b50610e3e9350612ba4565b600081610e5e575050602060005b6040516001600160d01b039091168152f35b600a610e6b60209361263a565b9152600080516020612df2833981519152015460301c610e4c565b9092610e9182612777565b82039182116108b557610e3e94600a84528083600080516020612df283398151915201541690851610600014610eca5750915b38610e33565b929150610ed69061265a565b90610ec4565b604051637669fc0f60e11b8152600481019290925265ffffffffffff166024820152604490fd5b346103ed5760403660031901126103ed57602060ff610f49610f23610541565b600435600052600b845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346103ed5760003660031901126103ed576020610f7143612608565b65ffffffffffff60405191168152f35b346103ed57600080600319360112610528576040519080600454610fa481611d26565b808552916001918083169081156104fe5750600114610fcd5761049f8561049381870382611a75565b9250600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106110105750505081016020016104938261049f610483565b80546020858701810191909152909301928101610ff5565b346103ed5760203660031901126103ed576001600160a01b0361104961052b565b166000526009602052602060018060d01b0361106860406000206128ec565b16604051908152f35b346103ed5760003660031901126103ed57602060405160008152f35b346103ed5760403660031901126103ed5761057d6110a961052b565b6024359033611d60565b346103ed5760803660031901126103ed576064356024356004356044356110d8611861565b8282018083116108b5578181018091116108b5578481018091116108b55761271003611170577f31372a128fc1946aa198a9d7c72e23d7106618d46c478a053897fc73f3be48bc9361116b9161112d84601355565b61113685601455565b61113f81601555565b61114882601655565b604051948594859094939260609260808301968352602083015260408201520152565b0390a1005b60405162461bcd60e51b815260206004820152600f60248201526e4d75737420657175616c203130302560881b6044820152606490fd5b346103ed5760003660031901126103ed576020601254604051908152f35b346103ed5760003660031901126103ed576018546040516001600160a01b039091168152602090f35b346103ed5760003660031901126103ed576020601354604051908152f35b346103ed5760203660031901126103ed5761122561052b565b61122d611861565b601880546001600160a01b0319166001600160a01b039290921691821790557f7aa78e1baf57af40dede9e6b906523dcd0de972d7ed5e1961f0fcc2b9cf19f00600080a2005b6064359060ff821682036103ed57565b6084359060ff821682036103ed57565b346103ed5760c03660031901126103ed576112ac61052b565b604435906024356112bb611273565b8342116113435761133761066a9461133e926040519060208201927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845260018060a01b038816604084015286606084015260808301526080825261131f82611a3d565b61133260a43593608435935190206123a5565b612136565b91826120e0565b611aa6565b604051632341d78760e11b815260048101859052602490fd5b346103ed5760203660031901126103ed577fb0f01601e93ad2a8fc4106e97567bc037aa114741705be9d80570fd2afa7bf1b602060043561139b611861565b80601255604051908152a1005b346103ed5760e03660031901126103ed576113c161052b565b6113c9610541565b604435906064356113d8611283565b8142116114c3576001600160a01b0385811660008181526007602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019283529283019390935292861660608201526080810187905260a081019190915260c08082019490945292835261147c92909161146960e083611a75565b61133260c4359360a435935190206123a5565b6001600160a01b0384811690821603611499575061066a92611e72565b6040516325c0072360e11b81526001600160a01b0391821660048201529084166024820152604490fd5b60405163313c898160e11b815260048101839052602490fd5b346103ed5760003660031901126103ed5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b346103ed5760403660031901126103ed5761066a600435611536610541565b9080600052600b6020526115516001604060002001546118b9565b611974565b346103ed5760003660031901126103ed576020600c54604051908152f35b346103ed5760403660031901126103ed57600435602435611593611861565b61271081116115ea57817f3badd8c132bb1c7264c8a842670580d2bdad682383a87a17638ae047444e6d209260005260106020528160406000205561116b6040519283928360209093929193604081019481520152565b60405162461bcd60e51b81526020600482015260086024820152674d6178203130302560c01b6044820152606490fd5b346103ed5760003660031901126103ed576020600d54604051908152f35b346103ed5760403660031901126103ed57602061168761165661052b565b61165e610541565b6001600160a01b0391821660009081526001855260408082209290931681526020919091522090565b54604051908152f35b346103ed5760203660031901126103ed576116a961052b565b6116b1611861565b601780546001600160a01b0319166001600160a01b039290921691821790557f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1600080a2005b346103ed5760403660031901126103ed5761171061052b565b6024359063ffffffff821682036103ed5761049f91611760916117316120c7565b5061173a6120c7565b506001600160a01b0316600090815260096020526040902061175a6120c7565b50612930565b506040519061176e82611a1c565b5465ffffffffffff811680835260309190911c60209283019081526040805192835290516001600160d01b031692820192909252918291820190565b346103ed5760003660031901126103ed5760206040517f71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb18152f35b3360009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc8602052604090207f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff905b5416156118435750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527f335e1b54ca43df00436bb5fe7358af00aea8249f479068439ed5a193dfc6fce9602052604090207f71840dc4906352362b0cdaf79870196c8e42acafade72d5d5a6d59291253ceb19060ff90611839565b6000818152600b60209081526040808320338452909152902060ff90611839565b600090808252600b60205260ff61190684604085209060018060a01b0316600052602052604060002090565b541661196e57808252600b602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600b60205260ff6119a084604085209060018060a01b0316600052602052604060002090565b54161561196e57808252600b602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117611a3857604052565b611a06565b60a0810190811067ffffffffffffffff821117611a3857604052565b60c0810190811067ffffffffffffffff821117611a3857604052565b90601f8019910116810190811067ffffffffffffffff821117611a3857604052565b60405190611aa482611a1c565b565b6001600160a01b03818116600081815260086020526040812080548685166001600160a01b031982168117909255611aa496941694611b239390928691907f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9080a46001600160a01b031660009081526020819052604090205490565b915b6001600160a01b03808316939291908116908185141580611c6e575b611b4d575b5050505050565b81611bd2575b505082611b62575b8080611b46565b6001600160a01b031660009081526009602052604090207fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611baf91611ba990916125d5565b90611c77565b604080516001600160d01b039384168152919092166020820152a2388080611b5b565b6001600160a01b03166000908152600960205260409020611bf2846125d5565b611bfb43612608565b6001600160d01b03918280611c0f866128ec565b1691169003928284116108b5577fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72493611c6492611c4b92612ae8565b6040805192851683529316602082015291829190820190565b0390a23880611b53565b50831515611b41565b90611c8143612608565b6001600160d01b03918280611c95866128ec565b169116019182116108b557611ca992612ae8565b9091565b611cb643612608565b906001600160d01b03908180611cca6128a2565b169116019081116108b557611ca9916129ff565b611ce743612608565b906001600160d01b03908180611cfb6128a2565b1691169003908111611d1057611ca9916129ff565b634e487b7160e01b600052601160045260246000fd5b90600182811c92168015611d56575b6020831014611d4057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d35565b6001600160a01b0380821694939291908515611e595782168015611e40576001600160a01b03821660009081526020819052604090205495848710611e115784611aa4969703611dc28460018060a01b03166000526000602052604060002090565b556001600160a01b0384166000908152602081815260409182902080548801905590518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3612d86565b60405163391434e360e21b81526001600160a01b03841660048201526024810188905260448101869052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b038082169291908315611f0d578216938415611ef45780611eea7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594611ed360209560018060a01b03166000526001602052604060002090565b9060018060a01b0316600052602052604060002090565b55604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b6001600160a01b038181166000818152600160208181526040808420888716855290915290912054939594939291908301611f64575b505050505050565b848310611fa55715611f0d57821615611ef457611f9992611ed391039360018060a01b03166000526001602052604060002090565b55388080808080611f5c565b604051637dc7a0d960e11b81526001600160a01b03851660048201526024810184905260448101869052606490fd5b91906001600160a01b038084168015611e59576001600160a01b0385166000908152602081905260409020549483861061209657906020929161203085611aa49798039160018060a01b03166000526000602052604060002090565b558360025403600255604051848152817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000958693a3612078612073856125d5565b611cde565b50508252600860205260408181842054169280805220541690611b25565b60405163391434e360e21b81526001600160a01b039190911660048201526024810186905260448101849052606490fd5b604051906120d482611a1c565b60006020838281520152565b6001600160a01b0381166000908152600760205260409020805460018101909155909181900361210e575050565b6040516301d4b62360e61b81526001600160a01b039092166004830152602482015260449150fd5b9161044393916121459361214e565b909291926121fe565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116121d257926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156121c65780516001600160a01b038116156121bd57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600411156121e857565b634e487b7160e01b600052602160045260246000fd5b612207816121de565b80612210575050565b612219816121de565b600181036122335760405163f645eedf60e01b8152600490fd5b61223c816121de565b6002810361225d5760405163fce698f760e01b815260048101839052602490fd5b806122696003926121de565b146122715750565b6040516335e2f38360e21b81526004810191909152602490fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061237c575b156122e6577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261237681611a59565b51902090565b507f000000000000000000000000000000000000000000000000000000000000000046146122bd565b6042906123b061228b565b906040519161190160f01b8352600283015260228201522090565b60405190610160820182811067ffffffffffffffff821117611a3857604052600a8252610140366020840137565b6040516020810181811067ffffffffffffffff821117611a385760405260008152906000368137565b60ff81146124605760ff811690601f821161244e576040519161244483611a1c565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160055481600061247383611d26565b808352926001908181169081156124f9575060011461249a575b5061044392500382611a75565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8483106124de575061044393505081016020013861248d565b819350908160209254838589010152019101909184926124c5565b90506020925061044394915060ff191682840152151560051b8201013861248d565b60ff811461253d5760ff811690601f821161244e576040519161244483611a1c565b5060405160065481600061255083611d26565b808352926001908181169081156124f95750600114612576575061044392500382611a75565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8483106125ba575061044393505081016020013861248d565b819350908160209254838589010152019101909184926125a1565b6001600160d01b03908181116125e9571690565b604490604051906306dfcc6560e41b825260d060048301526024820152fd5b65ffffffffffff9081811161261b571690565b604490604051906306dfcc6560e41b8252603060048301526024820152fd5b6000198101919082116108b557565b906301e1338082018092116108b557565b90600182018092116108b557565b919082018092116108b557565b9081546000816005811161270c575b509190915b8281106126bc575050600081156000146126a557505050600090565b6126b060209261263a565b92815220015460301c90565b90918082169080831860011c82018092116108b5578460005265ffffffffffff80836020600020015416908516106000146126fa5750915b90612689565b9291506127069061265a565b906126f4565b909161271782612777565b82039182116108b55784835265ffffffffffff808360208620015416908516106000146127475750905b38612684565b91506127529061265a565b612741565b8115612761570490565b634e487b7160e01b600052601260045260246000fd5b600181111561044357600181600160801b811015612890575b61283861282e61282461281a61281061280661284497600488600160401b61283f9a1015612883575b640100000000811015612876575b62010000811015612869575b61010081101561285d575b6010811015612851575b1015612849575b60030260011c6127ff818b612757565b0160011c90565b6127ff818a612757565b6127ff8189612757565b6127ff8188612757565b6127ff8187612757565b6127ff8186612757565b8093612757565b821190565b900390565b60011b6127ef565b811c9160021b916127e8565b60081c91811b916127de565b60101c9160081b916127d3565b60201c9160101b916127c7565b60401c9160201b916127b9565b50600160401b9050608082901c612790565b600a54600090806128b4575050600090565b806000198101116108b557600a7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a79252015460301c90565b8054600091816128fe57505050600090565b6000199282848101116108b55760209181522001015460301c90565b634e487b7160e01b600052603260045260246000fd5b8054821015610a825760005260206000200190600090565b600a5490600160401b821015611a38576001820180600a55821015610a8257600a600052805160209091015160301b65ffffffffffff191665ffffffffffff9190911617600080516020612df283398151915290910155565b8054600160401b811015611a38576129be91600182018155612930565b6129e957815160209092015160301b65ffffffffffff191665ffffffffffff92909216919091179055565b634e487b7160e01b600052600060045260246000fd5b600a549192918015612abe57612a17612a2f9161263a565b600a600052600080516020612df28339815191520190565b9081549165ffffffffffff90818416918316808311612aac57869203612a7457612a6d92509065ffffffffffff82549181199060301b169116179055565b60301c9190565b5050612aa790612a93612a85611a97565b65ffffffffffff9092168252565b6001600160d01b0385166020820152612948565b612a6d565b604051632520601d60e01b8152600490fd5b50612ae290612ace612a85611a97565b6001600160d01b0384166020820152612948565b60009190565b80549293928015612b7f57612aff612b0c9161263a565b8260005260206000200190565b9182549265ffffffffffff91828516928116808411612aac57879303612b4b5750612a6d92509065ffffffffffff82549181199060301b169116179055565b915050612aa791612b6b612b5d611a97565b65ffffffffffff9093168352565b6001600160d01b03861660208301526129a1565b5090612ae291612b90612b5d611a97565b6001600160d01b03851660208301526129a1565b905b828110612bb257505090565b90918082169080831860011c82018092116108b557600a60005265ffffffffffff8083600080516020612df283398151915201541690851610600014612bfb5750915b90612ba6565b929150612c079061265a565b90612bf5565b15612c1457565b60405162461bcd60e51b8152602060048201526016602482015275125b999b185d1a5bdb8818d85c08195e18d95959195960521b6044820152606490fd5b91906001600160a01b0383168015611e40576002548281018091116108b5576002556001600160a01b038416600090815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3600254926001600160d01b038411612cd857611aa4929350612d0d565b604051630e58ae9360e11b8152600481018590526001600160d01b036024820152604490fd5b60001981146108b55760010190565b90611aa491612d23612d1e836125d5565b611cad565b50506001600160a01b03908116908115612d73575b60086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c754600092835260409092205481169116611b25565b612d7f612073846125d5565b5050612d38565b611aa492916001600160a01b03918216919081908315612dde575b16918215612dcb575b60005260086020528060406000205416916000526040600020541690611b25565b612dd7612073856125d5565b5050612daa565b612dea612d1e866125d5565b5050612da156fec65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8a26469706673582212200c35260c2a0914257b2058cf9495eaf2c0699f5a74e9c74fbd05a2a8a011fdd764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x967A771 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x503C2A80 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5158CD09 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x66C8E57C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x69EE19AF EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x6B4E8BB0 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x6EBEFE7E EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7A1370B5 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x7AB56083 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x882693B1 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xABEC147A EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xAE3302C2 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB7902303 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC1542352 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC3C05293 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xD3127E63 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD80A619F EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xDC8FAFF4 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x289 JUMPI PUSH4 0xF36C8F5C EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AA JUMP JUMPDEST PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x11C5 JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x10B3 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3ED JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3DC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x41E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3FD JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x443 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD PUSH2 0x469 DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x1 EQ PUSH2 0x4A3 JUMPI JUMPDEST PUSH2 0x49F DUP6 PUSH2 0x493 DUP2 DUP8 SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x432 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP3 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x4E6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x493 DUP3 PUSH2 0x49F PUSH2 0x483 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x4CB JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x49F SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x493 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x483 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x573 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x5E0 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x5F7 DUP4 CALLER DUP4 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1D60 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD PUSH2 0x64A PUSH2 0x541 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x665 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x18DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x6A3 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x6C4 PUSH2 0x541 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x6E0 JUMPI PUSH2 0x66A SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x70B PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x717 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF DUP4 AND DUP3 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x49F SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x75B SWAP1 PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x7B6 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x7C2 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH1 0xC SLOAD LT PUSH2 0x87A JUMPI PUSH2 0x85D PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP2 PUSH2 0x807 PUSH1 0xE SLOAD PUSH2 0x2649 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x862 JUMPI JUMPDEST PUSH2 0x839 PUSH2 0x834 DUP6 PUSH1 0xF SLOAD PUSH2 0x82F PUSH2 0x825 DUP4 DUP4 PUSH2 0x2668 JUMP JUMPDEST PUSH1 0xD SLOAD LT ISZERO PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x2668 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x843 DUP5 DUP3 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH2 0x86C PUSH1 0x0 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x875 TIMESTAMP PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1D10 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x1FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x8F1 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x902 NUMBER PUSH2 0x2608 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x957 JUMPI PUSH2 0x49F PUSH1 0x40 MLOAD PUSH2 0x919 DUP2 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV EQ DUP3 ISZERO OR ISZERO PUSH2 0x8B5 JUMPI DUP5 LT ISZERO PUSH2 0x9C7 JUMPI JUMPDEST PUSH2 0x9C2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP PUSH2 0x9B9 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9FC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9EE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x443 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9DC JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH2 0xA3B PUSH2 0x23CB JUMP JUMPDEST SWAP1 DUP1 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x49F DUP6 DUP3 PUSH2 0xA10 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA7D SWAP3 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD MSTORE PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x291A JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xAAB PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH2 0xADE PUSH2 0x52B JUMP JUMPDEST CALLER PUSH2 0x1AA6 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBB4 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xBDC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x6A3 PUSH2 0xC19 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH2 0xC50 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xC5F DUP3 CALLER DUP4 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC1 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xD6D PUSH2 0xD17 PUSH32 0x0 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x49F PUSH2 0xD43 PUSH32 0x0 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xD7B PUSH2 0xD4E PUSH2 0x23F9 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x3F2 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x9DC JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH32 0x17E876F6956B36DDE6C5DD9DF30E484BFEFA90239FF982E267ABF6C45D018402 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0xDDB PUSH2 0x1861 JUMP JUMPDEST DUP1 PUSH1 0x11 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE05 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP3 LT ISZERO PUSH2 0xEDC JUMPI POP PUSH2 0xE22 SWAP1 PUSH2 0x2608 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 PUSH1 0x5 DUP2 GT PUSH2 0xE86 JUMPI JUMPDEST POP PUSH2 0xE3E SWAP4 POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE5E JUMPI POP POP PUSH1 0x20 PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA PUSH2 0xE6B PUSH1 0x20 SWAP4 PUSH2 0x263A JUMP JUMPDEST SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x30 SHR PUSH2 0xE4C JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xE91 DUP3 PUSH2 0x2777 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI PUSH2 0xE3E SWAP5 PUSH1 0xA DUP5 MSTORE DUP1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0xECA JUMPI POP SWAP2 JUMPDEST CODESIZE PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0xED6 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xF49 PUSH2 0xF23 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0xF71 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD PUSH2 0xFA4 DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFCD JUMPI PUSH2 0x49F DUP6 PUSH2 0x493 DUP2 DUP8 SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP4 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x1010 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x493 DUP3 PUSH2 0x49F PUSH2 0x483 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1049 PUSH2 0x52B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xD0 SHL SUB PUSH2 0x1068 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x28EC JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x57D PUSH2 0x10A9 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1D60 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x10D8 PUSH2 0x1861 JUMP JUMPDEST DUP3 DUP3 ADD DUP1 DUP4 GT PUSH2 0x8B5 JUMPI DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI DUP5 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH2 0x2710 SUB PUSH2 0x1170 JUMPI PUSH32 0x31372A128FC1946AA198A9D7C72E23D7106618D46C478A053897FC73F3BE48BC SWAP4 PUSH2 0x116B SWAP2 PUSH2 0x112D DUP5 PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH2 0x1136 DUP6 PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0x113F DUP2 PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH2 0x1148 DUP3 PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4D75737420657175616C2031303025 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x1225 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x122D PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x7AA78E1BAF57AF40DEDE9E6B906523DCD0DE972D7ED5E1961F0FCC2B9CF19F00 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x12AC PUSH2 0x52B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x12BB PUSH2 0x1273 JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x1343 JUMPI PUSH2 0x1337 PUSH2 0x66A SWAP5 PUSH2 0x133E SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x131F DUP3 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1332 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x23A5 JUMP JUMPDEST PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH32 0xB0F01601E93AD2A8FC4106E97567BC037AA114741705BE9D80570FD2AFA7BF1B PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x139B PUSH2 0x1861 JUMP JUMPDEST DUP1 PUSH1 0x12 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x13C1 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x13C9 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x13D8 PUSH2 0x1283 JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x14C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH2 0x147C SWAP3 SWAP1 SWAP2 PUSH2 0x1469 PUSH1 0xE0 DUP4 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1332 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x1499 JUMPI POP PUSH2 0x66A SWAP3 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x66A PUSH1 0x4 CALLDATALOAD PUSH2 0x1536 PUSH2 0x541 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1551 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x1593 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x15EA JUMPI DUP2 PUSH32 0x3BADD8C132BB1C7264C8A842670580D2BDAD682383A87A17638AE047444E6D20 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x116B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x4D61782031303025 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x1687 PUSH2 0x1656 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x165E PUSH2 0x541 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x16A9 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x16B1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x1710 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3ED JUMPI PUSH2 0x49F SWAP2 PUSH2 0x1760 SWAP2 PUSH2 0x1731 PUSH2 0x20C7 JUMP JUMPDEST POP PUSH2 0x173A PUSH2 0x20C7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x175A PUSH2 0x20C7 JUMP JUMPDEST POP PUSH2 0x2930 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x176E DUP3 PUSH2 0x1A1C JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x30 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x20 SWAP3 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x71840DC4906352362B0CDAF79870196C8E42ACAFADE72D5D5A6D59291253CEB1 DUP2 MSTORE RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x1843 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x335E1B54CA43DF00436BB5FE7358AF00AEA8249F479068439ED5A193DFC6FCE9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x71840DC4906352362B0CDAF79870196C8E42ACAFADE72D5D5A6D59291253CEB1 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1906 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x196E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x19A0 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x196E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1AA4 DUP3 PUSH2 0x1A1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH2 0x1AA4 SWAP7 SWAP5 AND SWAP5 PUSH2 0x1B23 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP1 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP2 DUP6 EQ ISZERO DUP1 PUSH2 0x1C6E JUMPI JUMPDEST PUSH2 0x1B4D JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1BD2 JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B62 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1BAF SWAP2 PUSH2 0x1BA9 SWAP1 SWAP2 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1BF2 DUP5 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1BFB NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 DUP1 PUSH2 0x1C0F DUP7 PUSH2 0x28EC JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x8B5 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C64 SWAP3 PUSH2 0x1C4B SWAP3 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1B53 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1B41 JUMP JUMPDEST SWAP1 PUSH2 0x1C81 NUMBER PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 DUP1 PUSH2 0x1C95 DUP7 PUSH2 0x28EC JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI PUSH2 0x1CA9 SWAP3 PUSH2 0x2AE8 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1CB6 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP1 PUSH2 0x1CCA PUSH2 0x28A2 JUMP JUMPDEST AND SWAP2 AND ADD SWAP1 DUP2 GT PUSH2 0x8B5 JUMPI PUSH2 0x1CA9 SWAP2 PUSH2 0x29FF JUMP JUMPDEST PUSH2 0x1CE7 NUMBER PUSH2 0x2608 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP1 PUSH2 0x1CFB PUSH2 0x28A2 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP1 DUP2 GT PUSH2 0x1D10 JUMPI PUSH2 0x1CA9 SWAP2 PUSH2 0x29FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1D56 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D40 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 ISZERO PUSH2 0x1E59 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 DUP5 DUP8 LT PUSH2 0x1E11 JUMPI DUP5 PUSH2 0x1AA4 SWAP7 SWAP8 SUB PUSH2 0x1DC2 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x1F0D JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x1EF4 JUMPI DUP1 PUSH2 0x1EEA PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x1ED3 PUSH1 0x20 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP8 AND DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP4 ADD PUSH2 0x1F64 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP4 LT PUSH2 0x1FA5 JUMPI ISZERO PUSH2 0x1F0D JUMPI DUP3 AND ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1F99 SWAP3 PUSH2 0x1ED3 SWAP2 SUB SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 DUP4 DUP7 LT PUSH2 0x2096 JUMPI SWAP1 PUSH1 0x20 SWAP3 SWAP2 PUSH2 0x2030 DUP6 PUSH2 0x1AA4 SWAP8 SWAP9 SUB SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP6 DUP7 SWAP4 LOG3 PUSH2 0x2078 PUSH2 0x2073 DUP6 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST POP POP DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 DUP2 DUP5 KECCAK256 SLOAD AND SWAP3 DUP1 DUP1 MSTORE KECCAK256 SLOAD AND SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x20D4 DUP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 SWAP2 DUP2 SWAP1 SUB PUSH2 0x210E JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP2 PUSH2 0x443 SWAP4 SWAP2 PUSH2 0x2145 SWAP4 PUSH2 0x214E JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x21FE JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x21D2 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x21C6 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x21BD JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x21E8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2207 DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP1 PUSH2 0x2210 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2233 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x225D JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2269 PUSH1 0x3 SWAP3 PUSH2 0x21DE JUMP JUMPDEST EQ PUSH2 0x2271 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x237C JUMPI JUMPDEST ISZERO PUSH2 0x22E6 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x2376 DUP2 PUSH2 0x1A59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x22BD JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x23B0 PUSH2 0x228B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x140 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A38 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x2460 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2444 DUP4 PUSH2 0x1A1C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2473 DUP4 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x24F9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249A JUMPI JUMPDEST POP PUSH2 0x443 SWAP3 POP SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x24DE JUMPI POP PUSH2 0x443 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x443 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x253D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2444 DUP4 PUSH2 0x1A1C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2550 DUP4 PUSH2 0x1D26 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x24F9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2576 JUMPI POP PUSH2 0x443 SWAP3 POP SUB DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x25BA JUMPI POP PUSH2 0x443 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x248D JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x25E9 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x261B JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 PUSH4 0x1E13380 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x270C JUMPI JUMPDEST POP SWAP2 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x26BC JUMPI POP POP PUSH1 0x0 DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0x26A5 JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26B0 PUSH1 0x20 SWAP3 PUSH2 0x263A JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x26FA JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2689 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2706 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0x26F4 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2717 DUP3 PUSH2 0x2777 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8B5 JUMPI DUP5 DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x20 DUP7 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2747 JUMPI POP SWAP1 JUMPDEST CODESIZE PUSH2 0x2684 JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 SWAP1 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x2741 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2761 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT ISZERO PUSH2 0x2890 JUMPI JUMPDEST PUSH2 0x2838 PUSH2 0x282E PUSH2 0x2824 PUSH2 0x281A PUSH2 0x2810 PUSH2 0x2806 PUSH2 0x2844 SWAP8 PUSH1 0x4 DUP9 PUSH1 0x1 PUSH1 0x40 SHL PUSH2 0x283F SWAP11 LT ISZERO PUSH2 0x2883 JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2876 JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2869 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x285D JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2851 JUMPI JUMPDEST LT ISZERO PUSH2 0x2849 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x27FF DUP2 DUP12 PUSH2 0x2757 JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP11 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP10 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP9 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP8 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x27FF DUP2 DUP7 PUSH2 0x2757 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x2757 JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x27EF JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x27B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x40 SHL SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2790 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x28B4 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x8B5 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x28FE JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x8B5 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1A38 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1A38 JUMPI PUSH2 0x29BE SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x29E9 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2ABE JUMPI PUSH2 0x2A17 PUSH2 0x2A2F SWAP2 PUSH2 0x263A JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2AAC JUMPI DUP7 SWAP3 SUB PUSH2 0x2A74 JUMPI PUSH2 0x2A6D SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2AA7 SWAP1 PUSH2 0x2A93 PUSH2 0x2A85 PUSH2 0x1A97 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x2AE2 SWAP1 PUSH2 0x2ACE PUSH2 0x2A85 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2B7F JUMPI PUSH2 0x2AFF PUSH2 0x2B0C SWAP2 PUSH2 0x263A JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2AAC JUMPI DUP8 SWAP4 SUB PUSH2 0x2B4B JUMPI POP PUSH2 0x2A6D SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AA7 SWAP2 PUSH2 0x2B6B PUSH2 0x2B5D PUSH2 0x1A97 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x29A1 JUMP JUMPDEST POP SWAP1 PUSH2 0x2AE2 SWAP2 PUSH2 0x2B90 PUSH2 0x2B5D PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x29A1 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2BB2 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B5 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2BFB JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2C07 SWAP1 PUSH2 0x265A JUMP JUMPDEST SWAP1 PUSH2 0x2BF5 JUMP JUMPDEST ISZERO PUSH2 0x2C14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B999B185D1A5BDB8818D85C08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B5 JUMPI PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 GT PUSH2 0x2CD8 JUMPI PUSH2 0x1AA4 SWAP3 SWAP4 POP PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AA4 SWAP2 PUSH2 0x2D23 PUSH2 0x2D1E DUP4 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D73 JUMPI JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SLOAD PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD DUP2 AND SWAP2 AND PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x2D7F PUSH2 0x2073 DUP5 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x1AA4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 SWAP1 DUP4 ISZERO PUSH2 0x2DDE JUMPI JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x2DCB JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x2DD7 PUSH2 0x2073 DUP6 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x2DEA PUSH2 0x2D1E DUP7 PUSH2 0x25D5 JUMP JUMPDEST POP POP PUSH2 0x2DA1 JUMP INVALID 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC CALLDATALOAD 0x26 0xC 0x2A MULMOD EQ 0x25 PUSH28 0x2058CF9495EAF2C0699F5A74E9C74FBD05A2A8A011FDD764736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"542:4675:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;542:4675:43;;;;;;;;;;2673:87:0;-1:-1:-1;;;862:40:33;;-1:-1:-1;2673:87:0;;;542:4675:43;-1:-1:-1;542:4675:43;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;542:4675:43;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;542:4675:43;;;;;;:::o;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;8842:4:13;542:4675:43;;:::i;:::-;;;735:10:22;;8842:4:13;:::i;:::-;542:4675:43;;;8842:4:13;542:4675:43;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1334:45;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;2927:12:13;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;4986:5:13;542:4675:43;;:::i;:::-;;;:::i;:::-;;;735:10:22;4950:5:13;735:10:22;;4950:5:13;;:::i;:::-;4986;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;;;-1:-1:-1;542:4675:43;3901:6:0;542:4675:43;;;3901:22:0;542:4675:43;-1:-1:-1;542:4675:43;3901:22:0;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;4330:25:0;542:4675:43;;;;:::i;:::-;;;-1:-1:-1;542:4675:43;3901:6:0;542:4675:43;;2475:4:0;3901:22;542:4675:43;-1:-1:-1;542:4675:43;3901:22:0;542:4675:43;2475:4:0;:::i;:::-;4330:25;:::i;:::-;542:4675:43;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;2780:2:13;542:4675:43;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;2744:20:16;;:::i;:::-;542:4675:43;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;735:10:22;-1:-1:-1;;;;;542:4675:43;;5421:34:0;5417:102;;5529:37;542:4675:43;;;5529:37:0;:::i;5417:102::-;542:4675:43;;-1:-1:-1;;;5478:30:0;;542:4675:43;;5478:30:0;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;;;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;;;;4075:29:5;;;4071:115;;-1:-1:-1;;;;;542:4675:43;-1:-1:-1;542:4675:43;;;4202:20:5;542:4675:43;;;;;;;-1:-1:-1;;;;;;542:4675:43;4202:77:5;;542:4675:43;4250:28:5;;;:::i;:::-;4202:77;;:::i;:::-;542:4675:43;;;;;;;;;;;;;;4071:115:5;-1:-1:-1;542:4675:43;;-1:-1:-1;;;4127:48:5;;542:4675:43;4127:48:5;;542:4675:43;;;;;;;;;;;;;;;4127:48:5;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;;;2475:4:0;;;:::i;:::-;2927:12:13;542:4675:43;;;;;;;;;2305:9;542:4675;-1:-1:-1;542:4675:43;;2655:18;;542:4675;2370:30;:19;542:4675;2370:30;:::i;:::-;2352:15;:48;2348:146;;542:4675;2591:22;;542:4675;2511:12;542:4675;2503:78;2511:21;;;;:::i;:::-;2536:18;542:4675;-1:-1:-1;2511:43:43;2503:78;:::i;:::-;2591:22;:::i;:::-;2511:12;542:4675;;2591:22;2633:6;;;;:::i;:::-;542:4675;;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;2655:18;;;;542:4675;2348:146;2416:16;2431:1;2416:16;542:4675;;2416:16;2446:37;2352:15;2370:19;542:4675;;2446:37;2348:146;;542:4675;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;692:5:15;542:4675:43;;735:10:22;692:5:15;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;1020:12:40;1002:31;1020:12;1002:31;:::i;:::-;542:4675:43;;;3169:29:5;3165:93;;542:4675:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;3165:93:5:-;542:4675:43;;-1:-1:-1;;;3221:26:5;;542:4675:43;;3221:26:5;542:4675:43;;;;;;;;;;;;;;;4301:30;-1:-1:-1;4346:16:43;;4364:9;4371:2;4364:9;;;;542:4675;;;;;;;;4375:6;4424:10;542:4675;;;;;;;;;;;;;;4401:33;;;4397:119;;4375:6;;;;:::i;:::-;4346:16;;4397:119;-1:-1:-1;542:4675:43;;;4475:20;542:4675;;;;;;;-1:-1:-1;4397:119:43;;542:4675;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4681:17;;:::i;:::-;4713:13;;4728:6;4695:2;4728:6;;;;542:4675;;;;;;;:::i;4736:3::-;542:4675;;;;;4770:20;542:4675;;;;;;;;;;;;;4736:3;542:4675;;;;;;;;4736:3;:::i;:::-;4713:13;;542:4675;;:::i;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;;-1:-1:-1;;;;;542:4675:43;;;:::i;:::-;;-1:-1:-1;542:4675:43;5630:10:5;542:4675:43;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;5859:9:5;542:4675:43;;:::i;:::-;735:10:22;5859:9:5;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;1394:23;542:4675;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;-1:-1:-1;542:4675:43;975:55;542:4675;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1275:45;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;901:34;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;941:27;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;-1:-1:-1;;;;;542:4675:43;;:::i;:::-;;-1:-1:-1;542:4675:43;8697:20:5;542:4675:43;;;-1:-1:-1;542:4675:43;;;15374:24:36;;;;15370:103;;542:4675:43;;;;;;;;;15370:103:36;542:4675:43;;;;15421:41:36;;;;;;542:4675:43;;15421:41:36;;542:4675:43;;;;;15421:41:36;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;:::i;:::-;-1:-1:-1;;;;;542:4675:43;3095:9:13;542:4675:43;;;;;;;;;;;;3004:116:13;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;1166:5:15;542:4675:43;;:::i;:::-;;;735:10:22;1135:5:15;735:10:22;;1135:5:15;;:::i;:::-;1166;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;;1037:43;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1216:45;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;-1:-1:-1;;;;;542:4675:43;;:::i;:::-;;-1:-1:-1;542:4675:43;624:7:24;542:4675:43;;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;6099:41:31;:5;:41;:::i;:::-;542:4675:43;6554:47:31;:8;:47;:::i;:::-;542:4675:43;5668:16:31;;:::i;:::-;542:4675:43;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5590:13:31;;542:4675:43;;;;5625:4:31;542:4675:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;3183:27;542:4675;;;2475:4:0;;:::i;:::-;542:4675:43;3147:21;542:4675;;;;;;3183:27;542:4675;;;;;;;-1:-1:-1;;542:4675:43;;;;;;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;;;;;;5064:29:5;;;5060:115;;5227:28;;;;:::i;:::-;5191:17;542:4675:43;9737:15:38;-1:-1:-1;9762:18:38;;9801:1;9795:7;;9791:234;;542:4675:43;10049:53:38;;;;;:::i;:::-;-1:-1:-1;10120:8:38;;;:63;;542:4675:43;-1:-1:-1;10120:63:38;542:4675:43;;-1:-1:-1;;;;;542:4675:43;;;;;;10120:63:38;5191:17:5;10168:7:38;542:4675:43;10168:7:38;;:::i;:::-;14439:109;;-1:-1:-1;;;;;;;;;;;14439:109:38;542:4675:43;;;10120:63:38;;9791:234;9838:14;;;;;:::i;:::-;542:4675:43;;;;;;;10049:53:38;14439:109;5191:17:5;14439:109:38;;;;-1:-1:-1;;;;;;;;;;;14439:109:38;542:4675:43;;;;;9870:48:38;9866:149;542:4675:43;;;9938:10:38;9866:149;;9791:234;;;9866:149;9993:7;;;;;;:::i;:::-;9866:149;;;5060:115:5;542:4675:43;;-1:-1:-1;;;5116:48:5;;542:4675:43;5116:48:5;;542:4675:43;;;;;;;;;;;;4127:48:5;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;;;2954:29:0;542:4675:43;;:::i;:::-;;;-1:-1:-1;542:4675:43;2954:6:0;542:4675:43;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;2954:29:0;542:4675:43;;;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;-1:-1:-1;;;;;542:4675:43;;:::i;:::-;;-1:-1:-1;542:4675:43;3492:20:5;542:4675:43;;;;;;;;3492:38:5;542:4675:43;-1:-1:-1;542:4675:43;3492:38:5;:::i;:::-;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;3459:5:13;542:4675:43;;:::i;:::-;;;735:10:22;;3459:5:13;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;2475:4:0;;:::i;:::-;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;3644:5;3592:57;542:4675;;3860:72;3679:34;3860:72;3679:34;;;;542:4675;;3679:34;3723:30;;;542:4675;;3723:30;3763:36;;;542:4675;;3763:36;3809;;;542:4675;;3809:36;542:4675;;3860:72;;;;542:4675;;;;;;;;;;;;;;;;;;;;;;;3860:72;;;;542:4675;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1098:43;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;1423:28;542:4675;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;1157:45;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;2967:30:43;542:4675;;-1:-1:-1;;;;;;542:4675:43;-1:-1:-1;;;;;542:4675:43;;;;;;;;;3012:36;-1:-1:-1;;3012:36:43;542:4675;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;;;;;;;;:::i;:::-;6141:15:5;;:24;6137:91;;6254:168;6491:9;542:4675:43;6457:5:5;542:4675:43;;;6308:57:5;542:4675:43;6308:57:5;;542:4675:43;2063:71:5;542:4675:43;;;;;;;;;;2063:71:5;;542:4675:43;2063:71:5;542:4675:43;2063:71:5;;542:4675:43;;2063:71:5;;542:4675:43;;6308:57:5;;;;;:::i;:::-;6281:86;542:4675:43;;;;;;;6298:68:5;;6281:86;:::i;:::-;6254:168;:::i;:::-;6457:5;;;:::i;:::-;6491:9;:::i;6137:91::-;542:4675:43;;-1:-1:-1;;;6188:29:5;;542:4675:43;6188:29:5;;542:4675:43;;;;;6188:29:5;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;3349:29;542:4675;;;2475:4:0;;:::i;:::-;542:4675:43;3311:23;542:4675;;;;;;3349:29;542:4675;;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;1886:15:16;;:26;1882:97;;-1:-1:-1;;;;;542:4675:43;;;-1:-1:-1;542:4675:43;;;1121:7:24;542:4675:43;;;;;;;;;;;;;;;;;;;1024:95:16;2020:78;;;542:4675:43;;;1024:95:16;;;542:4675:43;;;;;;;1024:95:16;;;542:4675:43;1024:95:16;;;542:4675:43;;;;1024:95:16;;542:4675:43;;;;1024:95:16;;;;542:4675:43;;;;2020:78:16;;;2181:28;;2020:78;;;1024:95;542:4675:43;2020:78:16;:::i;:::-;2125:28;542:4675:43;;;;;;;2010:89:16;;2125:28;:::i;2181:::-;-1:-1:-1;;;;;542:4675:43;;;;;;2223:15:16;2219:88;;8842:4:13;;;;:::i;2219:88:16:-;542:4675:43;;-1:-1:-1;;;2261:35:16;;-1:-1:-1;;;;;542:4675:43;;;;2261:35:16;;542:4675:43;;;;1024:95:16;;;542:4675:43;1024:95:16;;4127:48:5;1882:97:16;542:4675:43;;-1:-1:-1;;;1935:33:16;;542:4675:43;1935:33:16;;542:4675:43;;;;;1935:33:16;542:4675:43;;;;;;-1:-1:-1;;542:4675:43;;;;;;;673:24;542:4675;;;;;;;;;-1:-1:-1;;542:4675:43;;;;4747:26:0;542:4675:43;;;;:::i;:::-;;;-1:-1:-1;542:4675:43;3901:6:0;542:4675:43;;2475:4:0;3901:22;542:4675:43;-1:-1:-1;542:4675:43;3901:22:0;542:4675:43;2475:4:0;:::i;:::-;4747:26;:::i;542:4675:43:-;;;;;;-1:-1:-1;;542:4675:43;;;;;780:54;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;2475:4:0;;:::i;:::-;4073:5:43;4058:20;;542:4675;;;4156:34;542:4675;-1:-1:-1;542:4675:43;4101:20;542:4675;;;;-1:-1:-1;542:4675:43;;4156:34;542:4675;;4156:34;;;;542:4675;;;;;;;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;840:54;542:4675;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;3657:27:13;542:4675:43;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;542:4675:43;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;;;;;;3657:27:13;542:4675:43;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;2798:20:43;542:4675;;-1:-1:-1;;;;;;542:4675:43;-1:-1:-1;;;;;542:4675:43;;;;;;;;;2833:26;-1:-1:-1;;2833:26:43;542:4675;;;;;;;-1:-1:-1;;542:4675:43;;;;;;:::i;:::-;;;;;;;;;;;;;11452:22:38;542:4675:43;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;542:4675:43;-1:-1:-1;542:4675:43;;;8975:20:5;542:4675:43;;;;;;;:::i;:::-;;11452:22:38;:::i;:::-;542:4675:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;745:28;542:4675;;;3199:103:0;735:10:22;-1:-1:-1;542:4675:43;;;;;;;;;673:24;;542:4675;;2954:29:0;542:4675:43;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;542:4675:43;;;;3565:47:0;;;;;;735:10:22;3565:47:0;;;542:4675:43;;;;;3565:47:0;3199:103;735:10:22;-1:-1:-1;542:4675:43;;;;;;;;;745:28;;542:4675;;2954:29:0;542:4675:43;3199:103:0;-1:-1:-1;542:4675:43;;;2954:6:0;542:4675:43;;;;;;;;735:10:22;542:4675:43;;;;;;;;;2954:29:0;542:4675:43;6179:316:0;-1:-1:-1;542:4675:43;;;;2954:6:0;542:4675:43;;;2954:29:0;542:4675:43;;;;;;;;;;;;;;;;;;;;2954:29:0;542:4675:43;;;;;;;2954:6:0;542:4675:43;;;;;;;;-1:-1:-1;;;;;542:4675:43;;-1:-1:-1;542:4675:43;;;;;;;;;-1:-1:-1;;542:4675:43;6347:4:0;542:4675:43;;;735:10:22;;-1:-1:-1;;;;;542:4675:43;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;;:::o;6730:317::-;-1:-1:-1;542:4675:43;;;;2954:6:0;542:4675:43;;;2954:29:0;542:4675:43;;;;;;;;;;;;;;;;;;;;2954:29:0;542:4675:43;;;;;;;;2954:6:0;542:4675:43;;;;;;;;-1:-1:-1;;;;;542:4675:43;;-1:-1:-1;542:4675:43;;;;;;;;;-1:-1:-1;;542:4675:43;;;735:10:22;;-1:-1:-1;;;;;542:4675:43;;6922:40:0;;;;542:4675:43;6976:11:0;:::o;542:4675:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;2079:95:31;542:4675:43;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;6686:312:5:-;-1:-1:-1;;;;;542:4675:43;;;-1:-1:-1;542:4675:43;;;5630:10:5;542:4675:43;;;;;;;;;;-1:-1:-1;;;;;;542:4675:43;;;;;;;6966:24:5;;542:4675:43;;;3137:18:17;;542:4675:43;;;;;6865:48:5;;-1:-1:-1;6865:48:5;-1:-1:-1;;;;;542:4675:43;3095:9:13;542:4675:43;;;;;;;;;;;;3004:116:13;3137:18:17;6966:24:5;7717:789;-1:-1:-1;;;;;542:4675:43;;;;7717:789:5;;542:4675:43;;;;7818:10:5;;;;;:24;;7717:789;7814:686;;7717:789;;;;;;:::o;7814:686::-;7862:18;7858:315;;7814:686;8190:16;;;8186:304;;7814:686;;;;;8186:304;-1:-1:-1;;;;;542:4675:43;;;;;7966:20:5;542:4675:43;;;;;8431:44:5;;8265:143;;8364:26;;;;:::i;:::-;8265:143;;:::i;:::-;542:4675:43;;;-1:-1:-1;;;;;542:4675:43;;;;;;;;;;;;;8431:44:5;8186:304;;;;;7858:315;-1:-1:-1;;;;;542:4675:43;;;;;7966:20:5;542:4675:43;;;;;8045:26:5;;;:::i;:::-;1002:31:40;1020:12;1002:31;:::i;:::-;-1:-1:-1;;;;;542:4675:43;;;9268:14:5;;;:::i;:::-;542:4675:43;;;;;;;;;;;8112:46:5;8310:38:38;8112:46:5;8310:38:38;;;;:::i;:::-;542:4675:43;;;;;;;;;;;;;;;;;;;;;;8112:46:5;;;;7858:315;;;;7818:24;7832:10;;;;7818:24;;9025:273;;1002:31:40;1020:12;1002:31;:::i;:::-;-1:-1:-1;;;;;542:4675:43;;;9268:14:5;;;:::i;:::-;542:4675:43;;;;;;;;;8310:38:38;;;:::i;:::-;9238:53:5;;9025:273::o;:::-;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;-1:-1:-1;;;;;542:4675:43;;;9268:14:5;;:::i;:::-;542:4675:43;;;;;;;;;8310:38:38;;;:::i;9025:273:5:-;1002:31:40;1020:12;1002:31;:::i;:::-;542:4675:43;-1:-1:-1;;;;;542:4675:43;;;9268:14:5;;:::i;:::-;542:4675:43;;;;;;;;;;8310:38:38;;;:::i;542:4675:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;5393:300:13;-1:-1:-1;;;;;542:4675:43;;;;5393:300:13;;;;5476:18;;5472:86;;542:4675:43;;5571:16:13;;5567:86;;-1:-1:-1;;;;;542:4675:43;;5492:1:13;542:4675:43;;;;;;;;;;;6340:19:13;;;;6336:115;;542:4675:43;2756:5:17;542:4675:43;;;6571:15:13;;542:4675:43;;;;;;5492:1:13;542:4675:43;5492:1:13;542:4675:43;;;5492:1:13;542:4675:43;;;6571:15:13;542:4675:43;-1:-1:-1;;;;;542:4675:43;;5492:1:13;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;7083:25:13;;542:4675:43;7083:25:13;2756:5:17;:::i;6336:115:13:-;542:4675:43;;-1:-1:-1;;;6386:50:13;;-1:-1:-1;;;;;542:4675:43;;6386:50:13;;;542:4675:43;;;;;;;;;;;;;;;4127:48:5;5567:86:13;542:4675:43;;-1:-1:-1;;;5610:32:13;;5492:1;5610:32;;;542:4675:43;;;5610:32:13;5472:86;542:4675:43;;-1:-1:-1;;;5517:30:13;;5492:1;5517:30;;;542:4675:43;;;5517:30:13;9701:432;-1:-1:-1;;;;;542:4675:43;;;;9701:432:13;;9813:19;;9809:89;;542:4675:43;;9911:21:13;;;9907:90;;10006:18;:27;10085:31;10006:18;;542:4675:43;10006:18:13;542:4675:43;;;;;;;;;;;;;;;;10006:18:13;542:4675:43;;;;;;;;;;;;;;;;10006:27:13;542:4675:43;;;;;;10085:31:13;9701:432::o;9907:90::-;542:4675:43;;-1:-1:-1;;;9955:31:13;;-1:-1:-1;9955:31:13;;;542:4675:43;;;9955:31:13;9809:89;542:4675:43;;-1:-1:-1;;;9855:32:13;;9830:1;9855:32;;;542:4675:43;;;9855:32:13;10415:477;-1:-1:-1;;;;;542:4675:43;;;-1:-1:-1;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;10415:477:13;542:4675:43;;;;10580:37:13;;10576:310;;10415:477;;;;;;;:::o;10576:310::-;10637:24;;;10633:130;;9813:19;9809:89;;542:4675:43;;9911:21:13;9907:90;;10006:27;542:4675:43;10006:18:13;542:4675:43;;10006:18:13;542:4675:43;;;;;;;;;;;;;;;;10006:27:13;542:4675:43;10576:310:13;;;;;;;;10633:130;542:4675:43;;-1:-1:-1;;;10688:60:13;;-1:-1:-1;;;;;542:4675:43;;10688:60:13;;;542:4675:43;;;;;;;;;;;;;;;4127:48:5;7984:206:13;;;-1:-1:-1;;;;;542:4675:43;;;8054:21:13;;8050:89;;-1:-1:-1;;;;;542:4675:43;;5492:1:13;542:4675:43;;;;;;;;;;;6340:19:13;;;;6336:115;;542:4675:43;;;;6571:15:13;542:4675:43;7617:6:5;542:4675:43;;;6571:15:13;542:4675:43;;;;;;5492:1:13;542:4675:43;5492:1:13;542:4675:43;;;5492:1:13;542:4675:43;;;6571:15:13;542:4675:43;;6810:21:13;542:4675:43;;6810:21:13;542:4675:43;;;;;;6093:540:13;7083:25;6093:540;7083:25;;;;7483:63:5;7519:26;;;:::i;:::-;7483:63;:::i;:::-;542:4675:43;;;;5630:10:5;542:4675:43;;;;;;;;;;;;;;;;7617:6:5;;:::i;6336:115:13:-;542:4675:43;;-1:-1:-1;;;6386:50:13;;-1:-1:-1;;;;;542:4675:43;;;;6386:50:13;;;542:4675:43;;;;;;;;;;;;;;;4127:48:5;542:4675:43;;;;;;;:::i;:::-;-1:-1:-1;542:4675:43;;;;;;;:::o;1265:222:24:-;-1:-1:-1;;;;;542:4675:43;;-1:-1:-1;542:4675:43;;;1121:7:24;542:4675:43;;;;;;;;;;;;;;;1396:16:24;;;1392:89;;1265:222;;:::o;1392:89::-;542:4675:43;;-1:-1:-1;;;1435:35:24;;-1:-1:-1;;;;;542:4675:43;;;1435:35:24;;;542:4675:43;;;;;;;-1:-1:-1;1435:35:24;6887:260:30;;7105:8;6887:260;;7051:25;6887:260;7051:25;:::i;:::-;7105:8;;;;;:::i;5203:1551::-;;;6283:66;6270:79;;6266:164;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:30;;;;;;;;;;;;;;-1:-1:-1;;;;;542:4675:43;;6579:20:30;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;542:4675:43;;;;;;;;;;6266:164:30;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;542:4675:43:-;;-1:-1:-1;542:4675:43;;;:::o;:::-;;;;;;;;;;;;7280:532:30;542:4675:43;;;:::i;:::-;7366:29:30;;;7411:7;;:::o;7362:444::-;542:4675:43;;;:::i;:::-;7471:29:30;7462:38;;7471:29;;542:4675:43;;-1:-1:-1;;;7523:23:30;;;;;7458:348;542:4675:43;;;:::i;:::-;7576:35:30;7567:44;;7576:35;;542:4675:43;;-1:-1:-1;;;7634:46:30;;;;;542:4675:43;;;;;4127:48:5;7563:243:30;542:4675:43;;7710:30:30;542:4675:43;;:::i;:::-;7701:39:30;7697:109;;7563:243;7280:532::o;7697:109::-;542:4675:43;;-1:-1:-1;;;7763:32:30;;;;;542:4675:43;;;;;;4127:48:5;3845:262:31;3929:4;3938:11;-1:-1:-1;;;;;542:4675:43;3921:28:31;;:63;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;542:4675:43;;4204:80:31;;;542:4675:43;2079:95:31;542:4675:43;;4226:11:31;542:4675:43;2079:95:31;;542:4675:43;4239:14:31;2079:95;;;542:4675:43;4255:13:31;2079:95;;;542:4675:43;3929:4:31;542:4675:43;2079:95:31;;542:4675:43;;4204:80:31;;;;;:::i;:::-;542:4675:43;4194:91:31;;4060:30;:::o;3921:63::-;3970:14;;3953:13;:31;3921:63;;4917:176;3445:249:32;4917:176:31;5053:20;;:::i;:::-;3445:249:32;;;;-1:-1:-1;;;3445:249:32;;;;;;;;;;;4917:176:31;:::o;542:4675:43:-;;;;;;;;;;;;;;;;;;4695:2;542:4675;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3358:267:27:-;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;542:4675:43;;;;;;:::i;:::-;2324:106:27;;2311:2;542:4675:43;;2324:106:27;3543:22;:::o;2675:69::-;542:4675:43;;-1:-1:-1;;;2713:20:27;;;;;3477:142;-1:-1:-1;542:4675:43;;6126:13:31;542:4675:43;;-1:-1:-1;542:4675:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1390:66:27;;;;;;;:::i;542:4675:43:-;6126:13:31;-1:-1:-1;542:4675:43;;;-1:-1:-1;;542:4675:43;;;;;;;-1:-1:-1;1390:66:27;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:27;542:4675:43;;;;;;;;;;;;6126:13:31;542:4675:43;;;;;;;3358:267:27;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;542:4675:43;;;;;;:::i;3477:142:27:-;-1:-1:-1;542:4675:43;;6584:16:31;542:4675:43;;-1:-1:-1;542:4675:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1390:66:27;;;;;;;:::i;542:4675:43:-;6584:16:31;-1:-1:-1;542:4675:43;;;-1:-1:-1;;542:4675:43;;;;;;;-1:-1:-1;1390:66:27;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:218:36;-1:-1:-1;;;;;542:4675:43;4254:25:36;;;4250:105;;542:4675:43;4174:218:36;:::o;4250:105::-;542:4675:43;;;;15421:41:36;;;;4302:42;;542:4675:43;4302:42:36;;;542:4675:43;;;;;4302:42:36;14296:213;542:4675:43;14374:24:36;;;;14370:103;;542:4675:43;14296:213:36;:::o;14370:103::-;542:4675:43;;;;15421:41:36;;;;14421;;14452:2;14421:41;;;542:4675:43;;;;;14421:41:36;542:4675:43;-1:-1:-1;;542:4675:43;;;;;;;;:::o;:::-;;2392:8;542:4675;;;;;;;:::o;:::-;;9999:1:38;542:4675:43;;;;;;;:::o;:::-;;;;;;;;;;:::o;9584:606:38:-;;542:4675:43;;9702:17:38;9762:18;9801:1;9795:7;;9791:234;;9584:606;10049:53;;;13105:230;13112:10;;;;;;10120:63;;9702:17;10120:8;;:63;:8;;;:63;;;9702:17;9584:606;:::o;10120:63::-;10168:7;14439:109;10168:7;;:::i;:::-;14439:109;;;;;542:4675:43;;;9584:606:38;:::o;13105:230::-;3721:5:35;;;;;3731;;;;542:4675:43;;;;;;;;;14439:109:38;9702:17;14439:109;542:4675:43;14439:109:38;;;9702:17;14439:109;;542:4675:43;;;;;-1:-1:-1;13189:136:38;542:4675:43;;;13248:10:38;13189:136;;13105:230;;;13189:136;13303:7;;;;;;:::i;:::-;13189:136;;;9791:234;9838:14;;;;;:::i;:::-;542:4675:43;;;;;;;14439:109:38;;;542:4675:43;14439:109:38;;;;;;542:4675:43;;;;;9870:48:38;9866:149;542:4675:43;;;9938:10:38;9866:149;;9791:234;;;9866:149;9993:7;;;;;:::i;:::-;9866:149;;542:4675:43;;;;;;;:::o;:::-;;;;;;;;;;;;18080:5181:35;18246:1;18241:6;;;18237:53;;18246:1;19217:14;-1:-1:-1;;;19278:16:35;;;19274:92;;18080:5181;22827:18;22717;22607;22498;22387;22278;23216:28;19383:15;19898:6;19383:15;-1:-1:-1;;;23237:6:35;19383:15;;;19379:90;;18080:5181;19493:7;19486:15;;;19482:90;;18080:5181;19596:7;19589:15;;;19585:89;;18080:5181;19698:6;19691:14;;;19687:87;;18080:5181;19798:6;19791:14;;;19787:87;;18080:5181;19891:14;;19887:61;;18080:5181;20374:1;542:4675:43;18246:1:35;542:4675:43;22284:6:35;;;;:::i;:::-;542:4675:43;;;;;22278:18:35;22393:6;;;;:::i;22387:18::-;22504:6;;;;:::i;22498:18::-;22613:6;;;;:::i;22607:18::-;22723:6;;;;:::i;22717:18::-;22833:6;;;;:::i;22827:18::-;23237:6;;;:::i;:::-;23232:11;;;542:4675:43;23216:28:35;542:4675:43;;18080:5181:35;:::o;19887:61::-;18246:1;542:4675:43;19887:61:35;;19787:87;542:4675:43;;;;;19787:87:35;;;19687;542:4675:43;;;;;19687:87:35;;;19585:89;542:4675:43;;;;;19585:89:35;;;19482:90;542:4675:43;;;;;19482:90:35;;;19379;542:4675:43;;;;;19379:90:35;;;19274:92;-1:-1:-1;;;;542:4675:43;-1:-1:-1;19285:8:35;542:4675:43;;;19274:92:35;;10310:206:38;7375:17:5;542:4675:43;10405:17:38;;10446:8;;;:63;;10405:17;10310:206;:::o;10446:63::-;10600:17:13;;;542:4675:43;;;;;7375:17:5;14439:109:38;;;;542:4675:43;;;10310:206:38;:::o;:::-;542:4675:43;;10405:17:38;;10446:8;;;:63;;;10405:17;10310:206;:::o;10446:63::-;10600:17:13;;542:4675:43;;;;;;;;14439:109:38;;;;;;;542:4675:43;;;10310:206:38;:::o;542:4675:43:-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:4675:43;;-1:-1:-1;542:4675:43;;;-1:-1:-1;542:4675:43;:::o;:::-;7375:17:5;542:4675:43;;-1:-1:-1;;;542:4675:43;;;;;;;;;7375:17:5;542:4675:43;;;;;;7375:17:5;-1:-1:-1;542:4675:43;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;-1:-1:-1;;;;;;;;;;;542:4675:43;;;;:::o;:::-;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;542:4675:43;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;11657:922:38;7375:17:5;542:4675:43;11657:922:38;;;11864:7;;;;11936;11916:28;11936:7;;:::i;:::-;7375:17:5;14439:109:38;;-1:-1:-1;;;;;;;;;;;14439:109:38;14289:265;;11916:28;542:4675:43;;;;;;;;;;;;12103:13:38;;;12099:89;;12251:14;;;;;12285:19;;;542:4675:43;;;;;;;;;;;;;;;;;12285:19:38;542:4675:43;;12423:25:38;;:::o;12247:163::-;542:4675:43;;12343:52:38;542:4675:43;12353:41:38;542:4675:43;;:::i;:::-;;;;;;;;12353:41:38;-1:-1:-1;;;;;542:4675:43;;12353:41:38;;;542:4675:43;12343:52:38;:::i;:::-;12247:163;;12099:89;542:4675:43;;-1:-1:-1;;;12143:30:38;;;;;11860:713;542:4675:43;12479:52:38;542:4675:43;12489:41:38;542:4675:43;;:::i;12489:41:38:-;-1:-1:-1;;;;;542:4675:43;;12489:41:38;;;542:4675:43;12343:52:38;:::i;12479:::-;11870:1;12545:17;;:::o;11657:922::-;542:4675:43;;11657:922:38;;;11864:7;;;;11936;11916:28;11936:7;;:::i;:::-;11916:28;14439:109;;;;;;14289:265;;11916:28;542:4675:43;;;;;;;;;;;;12103:13:38;;;12099:89;;12251:14;;;;;12285:19;;;;542:4675:43;;;;;;;;;;;;;;;;;12247:163:38;542:4675:43;;;12343:52:38;542:4675:43;12353:41:38;542:4675:43;;:::i;:::-;;;;;;;;12353:41:38;-1:-1:-1;;;;;542:4675:43;;12353:41:38;;;542:4675:43;12343:52:38;:::i;11860:713::-;542:4675:43;;12479:52:38;542:4675:43;12489:41:38;542:4675:43;;:::i;12489:41:38:-;-1:-1:-1;;;;;542:4675:43;;12489:41:38;;;542:4675:43;12343:52:38;:::i;12929:433::-;;13112:10;;;;;;13344:11;;12929:433;:::o;13105:230::-;3721:5:35;;;;;3731;;;;542:4675:43;;;;;;;;;5191:17:5;-1:-1:-1;14439:109:38;542:4675:43;14439:109:38;;-1:-1:-1;;;;;;;;;;;14439:109:38;542:4675:43;;;;;-1:-1:-1;13189:136:38;542:4675:43;;;13248:10:38;13189:136;;13105:230;;;13189:136;13303:7;;;;;;:::i;:::-;13189:136;;;542:4675:43;;;;:::o;:::-;;;-1:-1:-1;;;542:4675:43;;;;;;;;;;;;-1:-1:-1;;;542:4675:43;;;;;;;7458:208:13;;;-1:-1:-1;;;;;542:4675:43;;7528:21:13;;7524:91;;6233:21;542:4675:43;;;;;;;;;6810:21:13;542:4675:43;-1:-1:-1;;;;;542:4675:43;;5492:1:13;542:4675:43;;;;;;;;;;;;;;;;;;;;;7083:25:13;;542:4675:43;7083:25:13;6233:21;542:4675:43;;-1:-1:-1;;;;;2616:12:17;;2612:94;;2756:5;;;;;:::i;2612:94::-;542:4675:43;;-1:-1:-1;;;2655:36:17;;;;;542:4675:43;;;-1:-1:-1;;;;;542:4675:43;;;;;;4127:48:5;542:4675:43;-1:-1:-1;;542:4675:43;;;;;;;:::o;7232:399:5:-;;7617:6;7232:399;7369:58;7400:26;;;:::i;:::-;7369:58;:::i;:::-;-1:-1:-1;;;;;;;542:4675:43;;;;7451:16:5;;7447:110;;7232:399;5630:10;542:4675:43;;;;;;;;;;;;;;;;;7617:6:5;:::i;7447:110::-;7483:63;7519:26;;;:::i;7483:63::-;7447:110;;;;7232:399;7617:6;;7232:399;-1:-1:-1;;;;;542:4675:43;;;;;;;7335:18:5;;7331:107;;7232:399;542:4675:43;7451:16:5;;;7447:110;;7232:399;7351:1;542:4675:43;5630:10:5;542:4675:43;;;;7351:1:5;542:4675:43;;;;7351:1:5;542:4675:43;;7351:1:5;542:4675:43;;;7617:6:5;;:::i;7447:110::-;7483:63;7519:26;;;:::i;7483:63::-;7447:110;;;;7331:107;7369:58;7400:26;;;:::i;7369:58::-;7331:107;;;"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","GOVERNANCE_ROLE()":"f36c8f5c","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","buybackBurnPercentage()":"69ee19af","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getDiscountForStakedAmount(uint256)":"503c2a80","getDiscountTiers()":"5158cd09","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","insuranceFund()":"b7902303","insuranceFundPercentage()":"0967a771","lastInflationUpdate()":"6b4e8bb0","maxLeverage()":"ae3302c2","maxSupply()":"d5abeb01","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setDiscountTier(uint256,uint256)":"d80a619f","setInsuranceFund(address)":"c3c05293","setMaxLeverage(uint256)":"d3127e63","setRewardDistribution(uint256,uint256,uint256,uint256)":"abec147a","setTradingFeeBase(uint256)":"882693b1","setTreasury(address)":"f0f44260","stakingDiscountTiers(uint256)":"66c8e57c","stakingRewardPercentage()":"c1542352","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","tradingFeeBase()":"7a1370b5","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","treasury()":"61d027b3","treasuryPercentage()":"7ab56083","yearlyInflationCap()":"dc8faff4","yearlyMinted()":"6ebefe7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialGovernance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"}],\"name\":\"DiscountTierSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"insuranceFund\",\"type\":\"address\"}],\"name\":\"InsuranceFundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLeverage\",\"type\":\"uint256\"}],\"name\":\"MaxLeverageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"staking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insurance\",\"type\":\"uint256\"}],\"name\":\"RewardDistributionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"TradingFeeBaseUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNANCE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackBurnPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"getDiscountForStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountTiers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFundPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastInflationUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountBps\",\"type\":\"uint256\"}],\"name\":\"setDiscountTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_insuranceFund\",\"type\":\"address\"}],\"name\":\"setInsuranceFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_leverage\",\"type\":\"uint256\"}],\"name\":\"setMaxLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_staking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buybackBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_insurance\",\"type\":\"uint256\"}],\"name\":\"setRewardDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTradingFeeBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingDiscountTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeeBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearlyInflationCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearlyMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"OMNI Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Governance and utility token for the Omniliquid protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OMNIToken.sol\":\"OMNIToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/OMNIToken.sol\":{\"keccak256\":\"0x892dd28225aba4d19ebc96c809b39bae916172d7e9f21a22bf24210c660d8980\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d743e6f3dbc4e6732f72f3838e07d5b957df45641165a681e952c1204f2456e9\",\"dweb:/ipfs/QmX1WJVcXg9d41KMGCCbtU3L9xcbQUC7HTaxqxZ4QWxpiE\"]}},\"version\":1}"}}}}}